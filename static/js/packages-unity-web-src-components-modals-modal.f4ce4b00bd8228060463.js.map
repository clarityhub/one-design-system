{"version":3,"sources":["webpack:///./packages/unity-web/src/components/Buttons/ButtonGroup.js","webpack:///./packages/unity-web/src/components/Buttons/ButtonSet.js","webpack:///./packages/unity-web/src/components/Buttons/index.js","webpack:///./packages/unity-web/src/components/Modals/Modal.js","webpack:///./packages/unity-web/src/theme/zIndexes.js","webpack:///./packages/unity-web/src/components/Modals/Modal.mdx","webpack:///./packages/unity-web/src/components/Modals/ModalPortal.js"],"names":["ButtonGroup","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","colors","shadow","default","EmotionButton","muted","ButtonGroupItem","_ref","selected","rest","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_Button__WEBPACK_IMPORTED_MODULE_3__","assign","type","ButtonSet","spread","css","ButtonSetPropTypes","React","propTypes","_Button__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_ButtonSet__WEBPACK_IMPORTED_MODULE_1__","ModalWrapper","styled_base_browser_esm","opacify","dark","_ref3","open","ModalDialog","_ref4","_ref2","Card","Modal","delayedOpen","_this","_onClickOutside","onClickOutside","bind","_assertThisInitialized","_onKeyUp","onKeyUp","document","addEventListener","window","checkOpen","immediate","arguments","length","undefined","openTimer","clearTimeout","removeEventListener","setState","closeTimer","setTimeout","delayedClose","props","state","doneOpening","e","modal","contains","close","key","onClose","Component","this","setup","prevProps","teardown","_this2","_this$props","center","children","_this$state","react_default","ModalPortal","ref","MDXContent","Modal_classCallCheck","Modal_possibleConstructorReturn","Modal_getPrototypeOf","call","layout","components","dist","name","id","parentName","className","index_m","of","__position","__code","__scope","Fragment","Button","Typography","CardHeader","CardBody","CardActions","CardFooter","ModalExample","_Component","Modal_inherits","Modal_createClass","value","_this3","react","Buttons","onClick","Modal_Modal","text","_Component2","_this4","_this5","noMargin","noPadding","color","ready","el","body","appendChild","removeChild","ReactDOM","createPortal"],"mappings":"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","file":"static/js/packages-unity-web-src-components-modals-modal.5b4fa3b1.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport { bool } from 'prop-types';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nimport Button, { EmotionButton } from './Button';\n\nconst ButtonGroup = styled.div`\n    box-shadow: ${colors.shadow.default};\n    display: inline-block;\n\n    ${EmotionButton} {\n        box-shadow: none;\n    }\n\n    ${EmotionButton} + ${EmotionButton} {\n        border-left-width: 0;\n        border-left: 1px solid ${colors.muted.default};\n    }\n    ${EmotionButton}:not(:last-child):not(:first-of-type) {\n        border-radius: 0;\n    }\n    ${EmotionButton}:first-of-type {\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n    }\n    ${EmotionButton}:last-child {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n    }\n`;\n\nconst ButtonGroupItem = ({ selected, ...rest }) => (\n\t<Button type={selected ? 'primary' : 'default'} {...rest} />\n);\n\nButtonGroupItem.propTypes = {\n\tselected: bool,\n};\n\nexport { ButtonGroup, ButtonGroupItem };\n","import { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { bool } from 'prop-types';\nimport { EmotionButton } from './Button';\n\nconst ButtonSet = styled.div`\n    ${({ spread }) => spread && css`\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n\n        ${EmotionButton} {\n            &:not(:first-of-type) {\n                margin-left: auto!important;\n            }\n        }\n    `}\n\n    button + button,\n    a + a,\n    a + button,\n    button + a {\n        margin-left: 0.4rem;\n    }\n`;\n\n/**\n * Hack for docz and react-docgen\n */\nconst ButtonSetPropTypes = () => <div />;\nButtonSetPropTypes.propTypes = {\n\tspread: bool,\n};\nButtonSet.propTypes = ButtonSetPropTypes.propTypes;\nexport { ButtonSetPropTypes };\n\nexport default ButtonSet;\n\n","export { default } from './Button';\nexport { default as ButtonSet } from './ButtonSet';\nexport { ButtonGroup, ButtonGroupItem } from './ButtonGroup';\n","import React, { Component } from 'react';\nimport { node, bool, func, string } from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { opacify } from '@clarityhub/unity-core/lib/utilities/color';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nimport zIndex from '../../theme/zIndexes';\nimport Card from '../Card';\nimport ModalPortal from './ModalPortal';\n\n// XXX refactor animations to be reuseable\n\nconst ModalWrapper = styled.div`\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: ${opacify(colors.dark.default, 0.6)};\n    display: flex;\n    z-index: ${zIndex.modal};\n\n    ${({ open }) => !open && css`\n        display: none;\n    `}\n`;\n\nconst ModalDialog = styled.div`\n    transition: all .3s ease-out;\n    transition-property: opacity, transform;\n    transform: translate(0, -25%);\n    display: flex;\n    min-height: calc(100% - (.5rem * 2));\n    opacity: 0;\n    align-items: center;\n    max-width: 500px;\n    margin: 1.75rem auto;\n    position: relative;\n    width: 100%;\n\n    @media screen and (prefers-reduced-motion:reduce) {\n        transition: none;\n    }\n\n    ${({ open }) => open && css`\n        opacity: 1;\n        transform: translate(0, 0);\n    `}\n\n    ${Card} {\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        pointer-events: auto;\n    }\n`;\n\nexport default class Modal extends Component {\n    static propTypes = {\n    \t/**\n\t\t * Passthrough to Card\n\t\t */\n    \tcenter: bool,\n    \t/**\n\t\t * Passthrough to Card\n\t\t */\n    \tchildren: node,\n    \tonClose: func,\n    \topen: bool.isRequired,\n    \ttype: string,\n    }\n\n    state = {\n    \tdelayedOpen: false,\n    }\n\n    componentDidMount() {\n    \tthis.setup();\n    }\n\n    componentDidUpdate(prevProps) {\n    \tif (!prevProps.open && this.props.open) {\n    \t\tthis.setup();\n    \t}\n        \n    \tif (prevProps.open && !this.props.open) {\n    \t\tthis.teardown();\n    \t}\n    }\n\n    componentWillUnmount() {\n    \tthis.teardown(true);\n    }\n\n    setup = () => {\n    \tthis._onClickOutside = this.onClickOutside.bind(this);\n    \tthis._onKeyUp = this.onKeyUp.bind(this);\n\n    \tdocument.addEventListener('click', this._onClickOutside);\n    \twindow.addEventListener('keyup', this._onKeyUp);\n\n    \tthis.checkOpen();\n    }\n\n    teardown = (immediate = false) => {\n    \tif (this.openTimer) {\n    \t\tclearTimeout(this.openTimer);\n    \t}\n\n    \tdocument.removeEventListener('click', this._onClickOutside);\n    \twindow.removeEventListener('keyup', this._onKeyUp);\n        \n    \tthis.setState({\n    \t\tdelayedOpen: false,\n    \t});\n        \n    \tif (!immediate) {\n    \t\tthis.closeTimer = setTimeout(() => {\n    \t\t\tthis.setState({\n    \t\t\t\tdelayedClose: false,\n    \t\t\t});\n    \t\t}, 100);\n    \t}\n    }\n\n    checkOpen = () => {\n    \tif (this.props.open && !this.state.delayedOpen) {\n    \t\tthis.doneOpening = false;\n\n    \t\tif (this.openTimer) {\n    \t\t\tclearTimeout(this.openTimer);\n    \t\t}\n            \n    \t\tthis.setState({\n    \t\t\tdelayedClose: true,\n    \t\t});\n\n    \t\tthis.openTimer = setTimeout(() => {\n    \t\t\tthis.doneOpening = true;\n    \t\t\tthis.setState({\n    \t\t\t\tdelayedOpen: true,\n    \t\t\t});\n    \t\t}, 100);\n    \t}\n    }\n\n    onClickOutside = (e) => {\n    \tif (this.modal && this.doneOpening) {\n    \t\tif (this.props.open) {\n    \t\t\tconst target = e.target;\n    \t\t\t// check if target is within (or is) the modal\n    \t\t\tconst clickOutsideModal = this.modal !== target && !this.modal.contains(target);\n    \t\t\tif (clickOutsideModal) {\n    \t\t\t\tthis.close();\n    \t\t\t}\n    \t\t}\n    \t}\n    }\n\n    onKeyUp = (e) => {\n    \tif (this.props.open) {\n    \t\tif (e.key === 'Escape') {\n    \t\t\tthis.close();\n    \t\t}\n    \t}\n    }\n\n    close = () => {\n    \tconst { onClose } = this.props;\n\n    \tif (onClose) {\n    \t\tonClose();\n    \t}\n    }\n\n    render() {\n    \tconst { center, children, type } = this.props;\n    \tconst { delayedOpen, delayedClose } = this.state;\n    \n    \treturn (\n    \t\t<ModalPortal>\n    \t\t\t<ModalWrapper open={delayedClose}>\n    \t\t\t\t<ModalDialog open={delayedOpen}>\n    \t\t\t\t\t<Card ref={ref => this.modal = ref} type={type} center={center}>\n    \t\t\t\t\t\t{children}\n    \t\t\t\t\t</Card>\n    \t\t\t\t</ModalDialog>\n    \t\t\t</ModalWrapper>\n    \t\t</ModalPortal>\n    \t);\n    }\n}\n","export default {\n\tbase: 1,\n\tmodal: 9999,\n};","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Component, Fragment } from 'react';\nimport { Playground, PropsTable } from 'docz';\nimport Modal from './Modal';\nimport Button, { ButtonSet } from '../Buttons';\nimport Typography from '../Typography';\nimport { CardHeader, CardBody, CardActions, CardFooter } from '../Card';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"modal\"}}>{`Modal`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Modals use cards to display their content, so check out the Card component\nfor what is allowed in Card content.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can make a modal not respond to clicks outside the modal or ESC keys\nby not handling the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`onClose`}</MDXTag>{` prop.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"modal--component\"}}>{`\\<Modal /`}{`>`}{` component`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import Modal from '@clarityhub/unity-web/lib/components/Modal';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"prop-types\"}}>{`Prop Types`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"modal-1\"}}>{`Modal`}</MDXTag>\n<PropsTable of={Modal} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"examples\"}}>{`Examples`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"simple-modal\"}}>{`Simple Modal`}</MDXTag>\n<Playground __position={1} __code={'() => {\\n  class ModalExample extends Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { open: false }\\n    }\\n    render() {\\n      const { open } = this.state\\n\\n      return (\\n        <Fragment>\\n          <Button onClick={() => this.setState({ open: true })}>\\n            Open Modal\\n          </Button>\\n\\n          <Modal open={open} onClose={() => this.setState({ open: false })}>\\n            <CardBody>\\n              <Typography type=\\\"h3\\\">Card title</Typography>\\n              <Typography type=\\\"h4\\\">Card subtitle</Typography>\\n              <Typography type=\\\"text\\\">Meow Mix</Typography>\\n\\n              <CardActions>\\n                <ButtonSet>\\n                  <Button text onClick={() => this.setState({ open: false })}>\\n                    Close\\n                  </Button>\\n                  <Button\\n                    type=\\\"danger\\\"\\n                    onClick={() => this.setState({ open: false })}\\n                  >\\n                    Delete\\n                  </Button>\\n                </ButtonSet>\\n              </CardActions>\\n            </CardBody>\\n          </Modal>\\n        </Fragment>\\n      )\\n    }\\n  }\\n\\n  return <ModalExample />\\n}'} __scope={{props: this ? this.props : props,Component,Fragment,Modal,Button,ButtonSet,Typography,CardHeader,CardBody,CardActions,CardFooter}}>\n    {() => {\n        class ModalExample extends Component {\n            constructor(props) {\n                super(props);\n            this.state = { open: false };\n        }\n        render() {\n            const { open } = this.state;\n\n            return (\n                <Fragment>\n                    <Button onClick={() => this.setState({ open: true })}>\n                        Open Modal\n                    </Button>\n\n                    <Modal open={open} onClose={() => this.setState({ open: false })}>\n                        <CardBody>\n                            <Typography type=\"h3\">Card title</Typography>\n                            <Typography type=\"h4\">Card subtitle</Typography>\n                            <Typography type=\"text\">\n                                Meow Mix\n                            </Typography>\n\n                            <CardActions>\n                                <ButtonSet>\n                                    <Button\n                                        text\n                                        onClick={() => this.setState({ open: false })}\n                                    >\n                                        Close\n                                    </Button>\n                                    <Button\n                                        type=\"danger\"\n                                        onClick={() => this.setState({ open: false })}\n                                    >\n                                        Delete\n                                    </Button>\n                                </ButtonSet>\n                            </CardActions>\n                        </CardBody>\n                    </Modal>\n                </Fragment>\n            );\n        }\n    }\n\n\n    return <ModalExample />;\n}}\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"notification-modal\"}}>{`Notification Modal`}</MDXTag>\n<Playground __position={2} __code={'() => {\\n  class ModalExample extends Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { open: false }\\n    }\\n    render() {\\n      const { open } = this.state\\n\\n      return (\\n        <Fragment>\\n          <Button onClick={() => this.setState({ open: true })}>\\n            Open Modal\\n          </Button>\\n\\n          <Modal\\n            open={open}\\n            onClose={() => this.setState({ open: false })}\\n            type=\\\"notification\\\"\\n            center\\n          >\\n            <CardBody>\\n              <Typography noMargin noPadding center color=\\\"white\\\" type=\\\"h2\\\">\\n                Join our newsletter\\n              </Typography>\\n              <Typography center color=\\\"white\\\" type=\\\"text\\\">\\n                Get updates on Clarity Hub, open source, and more by signing\\n                up for our newsletter.\\n              </Typography>\\n              <CardActions>\\n                <ButtonSet spread>\\n                  <Button\\n                    text\\n                    type=\\\"white\\\"\\n                    onClick={() => this.setState({ open: false })}\\n                  >\\n                    No Thanks\\n                  </Button>\\n                  <Button\\n                    type=\\\"white\\\"\\n                    onClick={() => this.setState({ open: false })}\\n                  >\\n                    Sign Up\\n                  </Button>\\n                </ButtonSet>\\n              </CardActions>\\n            </CardBody>\\n          </Modal>\\n        </Fragment>\\n      )\\n    }\\n  }\\n\\n  return <ModalExample />\\n}'} __scope={{props: this ? this.props : props,Component,Fragment,Modal,Button,ButtonSet,Typography,CardHeader,CardBody,CardActions,CardFooter}}>\n    {() => {\n        class ModalExample extends Component {\n            constructor(props) {\n                super(props);\n            this.state = { open: false };\n        }\n        render() {\n            const { open } = this.state;\n\n            return (\n                <Fragment>\n                    <Button onClick={() => this.setState({ open: true })}>\n                        Open Modal\n                    </Button>\n\n                    <Modal\n                        open={open}\n                        onClose={() => this.setState({ open: false })}\n                        type=\"notification\"\n                        center\n                    >\n                        <CardBody>\n                            <Typography noMargin noPadding center color=\"white\" type=\"h2\">\n                                Join our newsletter\n                            </Typography>\n                            <Typography center color=\"white\" type=\"text\">\n                                Get updates on Clarity Hub, open source,\n                                and more by signing up for our newsletter.\n                            </Typography>\n                            <CardActions>\n                                <ButtonSet spread>\n                                    <Button\n                                        text\n                                        type=\"white\"\n                                        onClick={() => this.setState({ open: false })}\n                                    >\n                                        No Thanks\n                                    </Button>\n                                    <Button\n                                        type=\"white\"\n                                        onClick={() => this.setState({ open: false })}\n                                    >\n                                        Sign Up\n                                    </Button>\n                                </ButtonSet>\n                            </CardActions>\n                        </CardBody>\n                    </Modal>\n                </Fragment>\n            );\n        }\n    }\n\n\n    return <ModalExample />;\n}}\n</Playground>\n           </MDXTag>\n  }\n}\n  ","import { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ModalPortal extends Component {\n\tstate = {\n\t\tready: false,\n\t}\n\n\tcomponentDidMount() {\n\t\t// Append the element into the DOM on mount. We'll render\n\t\t// into the modal container element (see the HTML tab).\n\t\tthis.el = document.createElement('div');\n\t\tdocument.body.appendChild(this.el);\n\t\tthis.setState({\n\t\t\tready: true,\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// Remove the element from the DOM when we unmount\n\t\tif (this.el) {\n\t\t\tdocument.body.removeChild(this.el);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { ready } = this.state;\n\n\t\tif (ready) {\n\t\t\t// Use a portal to render the children into the element\n\t\t\treturn ReactDOM.createPortal(\n\t\t\t\t// Any valid React child: JSX, strings, arrays, etc.\n\t\t\t\tthis.props.children,\n\t\t\t\t// A DOM element\n\t\t\t\tthis.el,\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n}\n"],"sourceRoot":""}