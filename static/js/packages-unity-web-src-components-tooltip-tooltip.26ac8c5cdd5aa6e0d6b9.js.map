{"version":3,"sources":["webpack:///./packages/unity-web/src/utilities/extend.js","webpack:///./packages/unity-web/src/components/Tooltip/TooltipPopover.js","webpack:///./packages/unity-web/src/components/Tooltip/Tooltip.js","webpack:///./packages/unity-web/src/components/Tooltip/Tooltip.mdx"],"names":["extend","displayName","Comp","overrides","additionalProps","NewComp","props","Object","entries","forEach","key","value","bind","name","propTypes","tooltipPopoverWrapper","css","opacify","colors","dark","borders","borderRadius","rem","white","variants","button","string","TooltipPopover","position","el","placement","pos","left","offset","width","target","top","bottom","height","marginBottom","marginRight","marginLeft","noOverflow","marginTop","this","getPosition","popover","setState","nextProps","deepEqual","state","items","content","innerRef","ref","style","map","item","i","Component","React","forwardRef","Tooltip","Menu","MenuPopover","fade","renderChildren","open","close","children","inline","display","onMouseOver","onMouseOut","oneOf","TooltipPropTypes","MDXContent","layout","components","parentName","of","__position","__code","__scope","Button"],"mappings":"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","file":"static/js/packages-unity-web-src-components-tooltip-tooltip.d1472fd8.js","sourcesContent":["\n/**\n * Only works with extending Classes\n *\n * @param {*} displayName \n * @param {*} Comp – Must be a class \n * @param {*} overrides \n * @param {*} additionalProps \n */\nconst extend = (displayName, Comp, overrides = {}, additionalProps = {}) => {\n\tconst NewComp = class extends Comp {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\n\t\t\tObject.entries(overrides).forEach(([key, value]) => {\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\tthis[key] = value.bind(this);\n\t\t\t\t} else {\n\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tNewComp.displayName = displayName || Comp.name;\n\tNewComp.propTypes = {\n\t\t...Comp.propTypes,\n\t\t...additionalProps,\n\t};\n\n\treturn NewComp;\n};\n\nexport default extend;","/** @jsx jsx */\n\nimport React, { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { arrayOf, any, node, oneOf } from 'prop-types';\nimport { variants } from '@clarityhub/unity-core/lib/typography';\nimport borders from '@clarityhub/unity-core/lib/borders';\nimport colors from '@clarityhub/unity-core/lib/colors';\nimport { opacify } from '@clarityhub/unity-core/lib/utilities/color';\nimport deepEqual from 'deep-equal';\n\nimport { offset, noOverflow } from '../../utilities/position';\n\nconst MARGIN = 4;\n\nconst tooltipPopoverWrapper = () => css`\n    background-color: ${opacify(colors.dark.default, 0.8)};\n    border-radius: ${borders.borderRadius.rem}rem;\n    /* box-shadow: ${colors.shadow.default}; */\n    color: ${colors.white.default};\n    position: absolute;\n    z-index: 99999999;\n    /* min-width: 13rem; */\n    padding: 0.2rem 0.4rem;\n\n    ${variants.button.string}\n\n    font-size: 1rem;\n\n    ul {\n        list-style: none;\n        margin: 0;\n        padding: 0;\n    }\n\n    li {\n        margin: 0;\n        padding: 0;\n    }\n`;\n\nclass TooltipPopover extends Component {\n    static propTypes = {\n    \tcontent: node,\n    \titems: arrayOf(node),\n    \tplacement: oneOf(['top', 'bottom', 'left', 'right']),\n    \ttarget: any,\n    }\n\n    state = {\n    \tposition: {},\n    }\n\n    componentDidMount() {\n    \tconst position = this.getPosition(this.props, this.popover);\n    \tthis.setState({\n    \t\tposition,\n    \t});\n    }\n\n    componentWillUpdate(nextProps) {\n    \tif (!deepEqual(nextProps.position, this.props.position) ||\n            nextProps.target !== this.props.target) {\n\n    \t\tconst position = this.getPosition(nextProps, this.popover);\n    \t\tthis.setState({\n    \t\t\tposition,\n    \t\t});\n    \t}\n    }\n\n    getPosition = (props, el) => {\n    \tconst { placement } = this.props;\n    \tlet pos = { ...props.position };\n        \n    \tswitch (placement) {\n    \tcase 'top': {\n    \t\tif (el) {\n    \t\t\t// Try to center\n    \t\t\tpos.left = pos.left - (offset(el).width / 2) + (offset(props.target).width / 2);\n    \t\t}\n    \t\t// No push over for top\n    \t\tconst position = pos;\n    \t\treturn {\n    \t\t\ttop: `${position.bottom - position.height - offset(el).height - MARGIN}px`,\n    \t\t\tleft: `${position.left || 0}px`,\n    \t\t\tmarginBottom: `${MARGIN}px`,\n    \t\t};\n    \t}\n    \tcase 'left': {\n    \t\tif (el) {\n    \t\t\t// Try to center\n    \t\t\tpos.top = pos.top - (offset(el).height / 2) + (offset(props.target).height / 2);\n    \t\t}\n    \t\t// No push over for top\n    \t\tconst position = pos;\n    \t\treturn {\n    \t\t\ttop: `${position.top || 0}px`,\n    \t\t\tleft: `${position.left - offset(el).width - MARGIN || 0}px`,\n    \t\t\tmarginRight: `${MARGIN}px`,\n    \t\t};\n    \t}\n    \tcase 'right': {\n    \t\tif (el) {\n    \t\t\t// Try to center\n    \t\t\tpos.top = pos.top - (offset(el).height / 2) + (offset(props.target).height / 2);\n    \t\t}\n    \t\t// No push over for top\n    \t\tconst position = pos;\n    \t\treturn {\n    \t\t\ttop: `${position.top || 0}px`,\n    \t\t\tleft: `${position.left + position.width || 0}px`,\n    \t\t\tmarginLeft: `${MARGIN}px`,\n    \t\t};\n    \t}\n    \tcase 'bottom':\n    \tdefault: {\n    \t\tif (el) {\n    \t\t\t// Try to center\n    \t\t\tpos.left = pos.left - (offset(el).width / 2) + (offset(props.target).width / 2);\n    \t\t}\n    \t\t// Push over if it would go off the page\n    \t\tconst position = noOverflow(pos, el);\n    \t\treturn {\n    \t\t\ttop: `${position.bottom || 0}px`,\n    \t\t\tleft: `${position.left || 0}px`,\n    \t\t\tmarginTop: `${MARGIN}px`,\n    \t\t};\n    \t}\n    \t}\n    }\n\n    render() {\n    \tconst { position } = this.state;\n    \tconst { items, content, innerRef } = this.props;\n\n    \treturn (\n    \t\t<div\n    \t\t\tref={(ref) => { this.popover = ref; innerRef(ref); }}\n    \t\t\tcss={tooltipPopoverWrapper}\n    \t\t\tstyle={position}\n    \t\t>\n    \t\t\t{content ? content : (\n    \t\t\t\t<ul>\n    \t\t\t\t\t{items.map((item, i) => (\n    \t\t\t\t\t\t<li key={i}>\n    \t\t\t\t\t\t\t{item}\n    \t\t\t\t\t\t</li>\n    \t\t\t\t\t))}\n    \t\t\t\t</ul>\n    \t\t\t)}\n    \t\t</div>\n    \t);\n    }\n}\n\nexport default React.forwardRef((props, ref) => <TooltipPopover innerRef={ref} {...props} />);\n","import React from 'react';\nimport { func, node, arrayOf, oneOf, bool } from 'prop-types';\n\nimport { Menu } from '../Menu';\nimport extend from '../../utilities/extend';\nimport TooltipPopover from './TooltipPopover';\n\nconst Tooltip = extend('Tooltip', Menu, {\n\tMenuPopover: TooltipPopover,\n\tfade: true,\n\trenderChildren({ open, close }) {\n\t\tconst { children, inline } = this.props;\n\n\t\tif (typeof children === 'function') {\n\t\t\treturn children({\n\t\t\t\topen,\n\t\t\t\tclose,\n\t\t\t});\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tstyle={{ display: inline ? 'inline-block' : 'block' }}\n\t\t\t\t\tonMouseOver={open}\n\t\t\t\t\tonMouseOut={close}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t},\n}, {\n\tplacement: oneOf(['top', 'bottom', 'left', 'right']),\n});\n\n\n/**\n * Hack for docz and react-docgen\n */\nconst TooltipPropTypes = () => <div />;\nTooltipPropTypes.propTypes = {\n\tchildren: func.isRequired,\n\tcontent: node,\n\tinline: bool,\n\titems: arrayOf(node),\n\tonClose: func,\n\tplacement: oneOf(['top', 'bottom', 'left', 'right']),\n};\nTooltip.propTypes = TooltipPropTypes.propTypes;\nexport { TooltipPropTypes };\n\nexport default Tooltip;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Component } from 'react';\nimport { Playground, PropsTable } from 'docz';\nimport Tooltip from './';\nimport { TooltipPropTypes } from './Tooltip';\nimport Button from '../Buttons';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"tooltip\"}}>{`Tooltip`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"tooltip--component\"}}>{`\\<Tooltip /`}{`>`}{` component`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import { Tooltip } from '@clarityhub/unity-web/lib/components/Tooltip';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"prop-types\"}}>{`Prop Types`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"tooltip-props\"}}>{`Tooltip Props`}</MDXTag>\n<PropsTable of={TooltipPropTypes} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"examples\"}}>{`Examples`}</MDXTag>\n<Playground __position={1} __code={'<Tooltip content={\\'Hello\\'} inline>\\n  <Button>Uncontrolled</Button>\\n</Tooltip>\\n<br />\\n<br />\\n\\n<Tooltip content={\\'Hello\\'} inline>\\n  {({ open, close }) => (\\n    <Button onMouseOver={open} onMouseOut={close}>\\n      Controlled\\n    </Button>\\n  )}\\n</Tooltip>'} __scope={{props: this ? this.props : props,Component,Tooltip,TooltipPropTypes,Button}}>\n    <Tooltip\n       content={\"Hello\"}\n       inline\n    >\n        <Button>Uncontrolled</Button>\n    </Tooltip>\n<br />\n<br />\n\n<Tooltip\n   content={\"Hello\"}\n   inline\n>\n    {({ open, close }) => (\n        <Button onMouseOver={open} onMouseOut={close}>Controlled</Button>\n    )}\n</Tooltip>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"placement\"}}>{`Placement`}</MDXTag>\n<Playground __position={2} __code={'<Tooltip content={\\'Hello\\'} inline placement=\\\"top\\\">\\n  <Button>Top</Button>\\n</Tooltip>\\n<Tooltip content={\\'Hello\\'} inline placement=\\\"left\\\">\\n  <Button>Left</Button>\\n</Tooltip>\\n<Tooltip content={\\'Hello\\'} inline placement=\\\"right\\\">\\n  <Button>Right</Button>\\n</Tooltip>'} __scope={{props: this ? this.props : props,Component,Tooltip,TooltipPropTypes,Button}}>\n    <Tooltip\n       content={\"Hello\"}\n       inline\n       placement=\"top\"\n    >\n        <Button>Top</Button>\n    </Tooltip>\n    <Tooltip\n       content={\"Hello\"}\n       inline\n       placement=\"left\"\n    >\n        <Button>Left</Button>\n    </Tooltip>\n    <Tooltip\n       content={\"Hello\"}\n       inline\n       placement=\"right\"\n    >\n        <Button>Right</Button>\n    </Tooltip>\n</Playground>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}