{"version":3,"sources":["webpack:///./packages/unity-core/lib/spacing.js","webpack:///./packages/unity-web/src/scaffolding/Box/Box.js"],"names":["Object","defineProperty","exports","value","xsmall","small","medium","large","xlarge","remMapper","size","spacing","rectMapper","top","right","bottom","left","StyledBox","shouldForwardProp","prop","isPropValid","includes","align","css","gap","direction","flex","pull","padding","def","margin","background","colors","color","type","types","Box","as","a11yTitle","props","aria-label","BoxProps","defaultProps"],"mappings":"6HAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,aAAc,EAQrBA,EAAO,QAPQ,CACbE,OAAQ,GACRC,MAAO,EACPC,OAAQ,EACRC,MAAO,EACPC,OAAQ,I,u1BCFV,IAAMC,EAAY,SAACC,GAClB,MAAM,GAAN,OAAUC,IAAQD,GAAlB,QAGKE,EAAa,SAACC,EAAKC,EAAOC,EAAQC,GACvC,MAAM,GAAN,OAAUH,EAAMJ,EAAUI,GAAO,EAAjC,YAAsCC,EAAQL,EAAUK,GAAS,EAAjE,YAAsEC,EAASN,EAAUM,GAAU,EAAnG,YAAwGC,EAAOP,EAAUO,GAAQ,IAG5HC,EAAY,kBAAO,MAAP,CACjBC,kBAAmB,SAAAC,GAAI,OAAIC,kBAAYD,KAAU,CAChD,QACA,aACA,QACA,YACA,OACA,MACA,UACA,OACA,QACCE,SAASF,IAXM,6DAgBjB,gBAAGG,EAAH,EAAGA,MAAH,OAAeA,GAASC,cAAJ,cACLD,EADK,QAGpB,YAAyB,IAAtBE,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,UACP,GAAID,EACH,MAAkB,WAAdC,EACIF,cAAP,wCAEgBd,EAAUe,GAF1B,MAMOD,cAAP,yCAEiBd,EAAUe,GAF3B,SAQH,gBAAGE,EAAH,EAAGA,KAAH,OAAcA,GAAQH,cAAJ,QACTG,GAAQ,EADC,QAGlB,gBAAGD,EAAH,EAAGA,UAAH,OAAmBF,cAAlB,kBACkBE,GAAa,SADhC,QAGA,gBAAGE,EAAH,EAAGA,KAAH,OAAcA,GAAQJ,cAAJ,SACRI,GAAc,UADN,QAGlB,YAAkB,IAAfC,EAAc,EAAdA,QACIC,EAAyB,kBAAZD,EAAuBA,EAAU,EACpD,OAAOA,GAAWL,cAAJ,WACFX,EAAWgB,EAAQf,KAAOgB,EAAKD,EAAQd,OAASe,EAAKD,EAAQb,QAAUc,EAAKD,EAAQZ,MAAQa,GAD1F,QAIf,YAAiB,IAAdC,EAAa,EAAbA,OACID,EAAwB,kBAAXC,EAAsBA,EAAS,EAClD,OAAOA,GAAUP,cAAJ,UACFX,EAAWkB,EAAOjB,KAAOgB,EAAKC,EAAOhB,OAASe,EAAKC,EAAOf,QAAUc,EAAKC,EAAOd,MAAQa,GADtF,QAId,gBAAGE,EAAH,EAAGA,WAAH,OAAoBA,GAAcC,IAAOD,IAAeR,cAApC,cACLS,IAAOD,GAAP,QADK,QAGpB,gBAAGE,EAAH,EAAGA,MAAH,OAAeA,GAASD,IAAOC,IAAUV,cAA1B,SACLS,IAAOC,GAAP,QADK,QAGf,gBAAGC,EAAH,EAAGA,KAAH,OAAcA,GAAQC,QAAMD,IAASX,cAAvB,cACCY,QAAMD,GAAMH,WAAZ,QADD,UAEJI,QAAMD,GAAMD,MAAZ,QAFI,OA/DG,IAqEZG,EAAM,SAAC,GAUN,IATNC,EASK,EATLA,GACAC,EAQK,EARLA,UACAb,EAOK,EAPLA,UACAD,EAMK,EANLA,IACAE,EAKK,EALLA,KACAI,EAIK,EAJLA,OACAF,EAGK,EAHLA,QACAD,EAEK,EAFLA,KACGY,EACE,2EACL,OACC,kBAACtB,EAAD,eACCoB,GAAIA,EACJG,aAAYF,EACZb,UAAWA,EACXC,KAAMA,EACNF,IAAKA,EACLG,KAAMA,EACNG,OAAQA,EACRF,QAASA,GACLW,KAmCDE,EAAW,kBAAM,+BAiBvBL,EAAIM,aAAeD,EAASC,aAGbN,M","file":"static/js/packages-unity-web-src-components-messaging-empty~packages-unity-web-src-components-messaging-error~~c7576013.801816e9.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = {\n  xsmall: 0.5,\n  small: 1,\n  medium: 2,\n  large: 4,\n  xlarge: 8\n};\nexports[\"default\"] = _default;","import React from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { any, oneOf, oneOfType, shape, string, func, node } from 'prop-types';\n\nimport colors, { types } from '@clarityhub/unity-core/lib/colors';\nimport spacing from '@clarityhub/unity-core/lib/spacing';\n\nconst remMapper = (size) => {\n\treturn `${spacing[size]}rem`;\n};\n\nconst rectMapper = (top, right, bottom, left) => {\n\treturn `${top ? remMapper(top) : 0} ${right ? remMapper(right) : 0} ${bottom ? remMapper(bottom) : 0} ${left ? remMapper(left) : 0}`;\n};\n\nconst StyledBox = styled('div', {\n\tshouldForwardProp: prop => isPropValid(prop) && ![\n\t\t'align',\n\t\t'background',\n\t\t'color',\n\t\t'direction',\n\t\t'flex',\n\t\t'gap',\n\t\t'padding',\n\t\t'pull',\n\t\t'type',\n\t].includes(prop),\n})(\n\tcss`\n\t\tdisplay: flex;\n\t`,\n\t({ align }) => align && css`\n\t\ttext-align: ${align};\n\t`,\n\t({ gap, direction }) => {\n\t\tif (gap) {\n\t\t\tif (direction === 'column') {\n\t\t\t\treturn css`\n\t\t\t\t\t& > *:not(:first-of-type) {\n\t\t\t\t\t\tmargin-top: ${remMapper(gap)};\n\t\t\t\t\t}\n\t\t\t\t`;\n\t\t\t} else {\n\t\t\t\treturn css`\n\t\t\t\t\t& > *:not(:first-of-type) {\n\t\t\t\t\t\tmargin-left: ${remMapper(gap)};\n\t\t\t\t\t}\n\t\t\t\t`;\n\t\t\t}\n\t\t}\n\t},\n\t({ flex }) => flex && css`\n\t\tflex: ${flex || 1};\n\t`,\n\t({ direction }) => css`\n\t\tflex-direction: ${direction || 'column'};\n\t`,\n\t({ pull }) => pull && css`\n\t\tfloat: ${pull ? pull : 'inherit'};\n\t`,\n\t({ padding }) => {\n\t\tconst def = typeof padding === 'string' ? padding : 0;\n\t\treturn padding && css`\n\t\t\tpadding: ${rectMapper(padding.top || def, padding.right || def, padding.bottom || def, padding.left || def)};\n\t\t`;\n\t},\n\t({ margin }) => {\n\t\tconst def = typeof margin === 'string' ? margin : 0;\n\t\treturn margin && css`\n\t\t\tmargin: ${rectMapper(margin.top || def, margin.right || def, margin.bottom || def, margin.left || def)};\n\t\t`;\n\t},\n\t({ background }) => background && colors[background] && css`\n\t\tbackground: ${colors[background].default};\n\t`,\n\t({ color }) => color && colors[color] && css`\n\t\tcolor: ${colors[color].default};\n\t`,\n\t({ type }) => type && types[type] && css`\n\t\tbackground: ${types[type].background.default};\n\t\tcolor: ${types[type].color.default};\n\t`,\n);\n\nconst Box = ({\n\tas,\n\ta11yTitle,\n\tdirection,\n\tgap,\n\tflex,\n\tmargin,\n\tpadding,\n\tpull,\n\t...props\n}) => {\n\treturn (\n\t\t<StyledBox\n\t\t\tas={as}\n\t\t\taria-label={a11yTitle}\n\t\t\tdirection={direction}\n\t\t\tflex={flex}\n\t\t\tgap={gap}\n\t\t\tpull={pull}\n\t\t\tmargin={margin}\n\t\t\tpadding={padding}\n\t\t\t{...props}\n\t\t/>\n\t);\n};\n\n// TODO refactor into shared proptypes\nconst sizesProp = oneOf([\n\t'xsmall',\n\t'small',\n\t'large',\n\t'xlarge',\n\t'medium',\n]);\n\n// TODO refactor into shared proptypes\nconst typesProp = oneOf([\n\t'primary',\n\t'danger',\n\t'success',\n\t'brand',\n]);\n\nconst genericSizesProp = oneOfType([\n\tsizesProp,\n\tshape({\n\t\ttop: sizesProp,\n\t\tbottom: sizesProp,\n\t\tleft: sizesProp,\n\t\tright: sizesProp,\n\t}),\n]);\n\n/**\n * Hack for docz and react-docgen\n */\nconst BoxProps = () => <div />;\nBoxProps.propTypes = {\n\ta11yTitle: string,\n\talign: oneOf(['left', 'right', 'center']),\n\tas: oneOfType([string, func, node]),\n\tbackground: string,\n\tcolor: string,\n\tdirection: oneOf(['column', 'row']),\n\tflex: any,\n\tgap: sizesProp,\n\tmargin: genericSizesProp,\n\tpadding: genericSizesProp,\n\tpull: oneOf(['left', 'right']),\n\ttype: typesProp,\n};\n\nBox.propTypes = BoxProps.propTypes;\nBox.defaultProps = BoxProps.defaultProps;\nexport { BoxProps };\n\nexport default Box;\n\n"],"sourceRoot":""}