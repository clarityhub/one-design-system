{"version":3,"sources":["webpack:///./packages/unity-web/src/components/ButtonSet/ButtonSet.js","webpack:///./packages/unity-web/src/components/Card/CardImage.js","webpack:///./packages/unity-web/src/components/Card/Card.mdx","webpack:///./packages/unity-web/src/components/Card/CardActions.js","webpack:///./packages/unity-web/src/components/Card/CardFooter.js","webpack:///./packages/unity-web/src/components/Image/Image.js"],"names":["ButtonSet","spread","css","EmotionButton","ButtonSetPropTypes","propTypes","CardImage","borders","borderRadius","rem","MDXContent","props","layout","this","components","name","parentName","__position","__code","__scope","Card","CardHeader","CardFooter","CardBody","CardActions","CardPropTypes","Typography","Button","Image","type","style","marginTop","color","flat","width","src","hoverable","center","withMargin","alt","of","React","Component","variants","text","string","colors","dark","muted","ImageWrapper","withSpacing","wrapperProps","loaderUrl","fallbackUrl","rest","filter","Boolean","loader","unloader","ImagePropTypes"],"mappings":"8XAKMA,EAAS,8CACT,qBAAGC,QAAuBC,cAAJ,4DAKlBC,IALkB,0DADb,qEAwBTC,EAAqB,kBAAM,iCAIjCJ,EAAUK,UAAYD,EAAmBC,UAG1BL,M,msBCxBAM,EATA,wHAKoBC,IAAQC,aAAaC,IALzC,2CAMqBF,IAAQC,aAAaC,IAN1C,e,s+DCgBMC,E,uQACnB,WAAYC,GAAQ,IAAD,S,4FAAA,UACjB,cAAMA,IACDC,OAAS,KAFG,E,8CAIT,IAAD,EAC0BC,KAAKF,MAA9BG,EADD,EACCA,WAAeH,EADhB,oBAGP,OAAO,kBAAC,SAAD,CACEI,KAAK,UAELD,WAAYA,GACzB,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,SAAvD,QACA,kBAAC,SAAD,CAAQI,KAAK,IAAID,WAAYA,GAA7B,kFACA,kBAAC,SAAD,CAAQC,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYE,WAAW,MAAML,MAAO,CAAC,UAAY,gBAAjF,6JAQ3C,kBAAC,SAAD,CAAQI,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,gBAAvD,eACA,kBAAC,SAAD,CAAQI,KAAK,IAAID,WAAYA,GAA7B,kDAA4F,kBAAC,SAAD,CAAQC,KAAK,aAAaD,WAAYA,EAAYE,WAAW,KAA7D,cAA5F,gBACA,kBAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,wnBAA6oBC,QAAS,CAACR,MAAOE,KAAOA,KAAKF,MAAQA,EAAMS,SAAKC,eAAWC,eAAWhB,YAAUiB,aAASC,gBAAYC,kBAAcC,eAAWC,WAAO3B,cAAU4B,YAC3zB,kBAACR,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAYG,KAAK,QAAjB,aAKR,kBAACT,EAAA,EAAD,CAAMS,KAAK,eAAeC,MAAO,CAAEC,UAAW,SAC1C,kBAACR,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAYG,KAAK,OAAOG,MAAM,SAA9B,kBAKR,kBAACZ,EAAA,EAAD,CAAMa,MAAI,EAACJ,KAAK,YAAYC,MAAO,CAAEC,UAAW,SAC5C,kBAACR,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAYG,KAAK,OAAOG,MAAM,QAA9B,eAKR,kBAACZ,EAAA,EAAD,CAAMa,MAAI,EAACJ,KAAK,UAAUC,MAAO,CAAEC,UAAW,SAC1C,kBAACR,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAYG,KAAK,OAAOG,MAAM,QAA9B,cAMZ,kBAAC,SAAD,CAAQjB,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,oBAAvD,mBACA,kBAAC,IAAD,CAAYM,WAAY,EAAGC,OAAQ,sOAA6OC,QAAS,CAACR,MAAOE,KAAOA,KAAKF,MAAQA,EAAMS,SAAKC,eAAWC,eAAWhB,YAAUiB,aAASC,gBAAYC,kBAAcC,eAAWC,WAAO3B,cAAU4B,YAC3Z,kBAACR,EAAA,EAAD,CAAMU,MAAO,CAAEI,MAAO,UAClB,kBAAC,EAAD,CAAWC,IAAI,iCACf,kBAACZ,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAYG,KAAK,MAAjB,cACA,kBAACH,EAAA,EAAD,CAAYG,KAAK,QAAjB,eAMZ,kBAAC,SAAD,CAAQd,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,sBAAvD,qBACA,kBAAC,IAAD,CAAYM,WAAY,EAAGC,OAAQ,yWAAkXC,QAAS,CAACR,MAAOE,KAAOA,KAAKF,MAAQA,EAAMS,SAAKC,eAAWC,eAAWhB,YAAUiB,aAASC,gBAAYC,kBAAcC,eAAWC,WAAO3B,cAAU4B,YAChiB,kBAACR,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAYG,KAAK,MAAjB,cACA,kBAACH,EAAA,EAAD,CAAYG,KAAK,MAAjB,iBACA,kBAACH,EAAA,EAAD,CAAYG,KAAK,QAAjB,YAGJ,kBAACL,EAAA,EAAD,KACI,kBAACxB,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,CAAQE,KAAK,UAAb,eAMhB,kBAAC,SAAD,CAAQd,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,cAAvD,aACA,kBAAC,SAAD,CAAQI,KAAK,IAAID,WAAYA,GAA7B,mDACA,kBAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,ueAAsfC,QAAS,CAACR,MAAOE,KAAOA,KAAKF,MAAQA,EAAMS,SAAKC,eAAWC,eAAWhB,YAAUiB,aAASC,gBAAYC,kBAAcC,eAAWC,WAAO3B,cAAU4B,YACpqB,kBAACR,EAAA,EAAD,CAAMgB,WAAS,GACX,kBAACb,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAYG,KAAK,QAAjB,aAKR,kBAACT,EAAA,EAAD,CAAMgB,WAAS,EAACP,KAAK,eAAeC,MAAO,CAAEC,UAAW,SACpD,kBAACR,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAYG,KAAK,OAAOG,MAAM,SAA9B,kBAKR,kBAACZ,EAAA,EAAD,CAAMa,MAAI,EAACG,WAAS,EAACP,KAAK,YAAYC,MAAO,CAAEC,UAAW,SACtD,kBAACR,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAYG,KAAK,OAAOG,MAAM,QAA9B,gBAMZ,kBAAC,SAAD,CAAQjB,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,gCAAvD,+BACA,kBAAC,IAAD,CAAYM,WAAY,EAAGC,OAAQ,qbAA8bC,QAAS,CAACR,MAAOE,KAAOA,KAAKF,MAAQA,EAAMS,SAAKC,eAAWC,eAAWhB,YAAUiB,aAASC,gBAAYC,kBAAcC,eAAWC,WAAO3B,cAAU4B,YAC5mB,kBAACR,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,iBAGA,kBAACE,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAYG,KAAK,MAAjB,cACA,kBAACH,EAAA,EAAD,CAAYG,KAAK,MAAjB,iBACA,kBAACH,EAAA,EAAD,CAAYG,KAAK,QAAjB,YAGJ,kBAACL,EAAA,EAAD,KACI,kBAACxB,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,CAAQE,KAAK,UAAb,aAIZ,kBAACP,EAAA,EAAD,qBAKJ,kBAAC,SAAD,CAAQP,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,kBAAvD,iBACA,kBAAC,IAAD,CAAYM,WAAY,EAAGC,OAAQ,6jCAAokCC,QAAS,CAACR,MAAOE,KAAOA,KAAKF,MAAQA,EAAMS,SAAKC,eAAWC,eAAWhB,YAAUiB,aAASC,gBAAYC,kBAAcC,eAAWC,WAAO3B,cAAU4B,YAClvC,kBAACR,EAAA,EAAD,CAAMiB,QAAM,GACR,kBAACd,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAYG,KAAK,MAAjB,2BACA,kBAACH,EAAA,EAAD,CAAYG,KAAK,QAAjB,kMAMJ,kBAACD,EAAA,EAAD,CACIS,QAAM,EACNC,YAAU,EACVH,IAAI,0BACJI,IAAI,+BACJT,MAAO,CAAEI,MAAO,SAGpB,kBAACV,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAQE,KAAK,WAAb,4BAIZ,kBAACT,EAAA,EAAD,CAAMiB,QAAM,EAACP,MAAO,CAAEC,UAAW,SAC7B,kBAACR,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAYG,KAAK,MAAjB,eACA,kBAACH,EAAA,EAAD,CAAYG,KAAK,QAAjB,iJAMA,kBAACL,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAQE,KAAK,WAAb,wBAKZ,kBAAC,SAAD,CAAQd,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,eAAvD,cACA,kBAAC,SAAD,CAAQI,KAAK,IAAID,WAAYA,GAA7B,kEACA,kBAAC,IAAD,CAAY0B,GAAIf,Y,8BA9KwBgB,IAAMC,W,2OCjB9C,IAAMlB,EAAW,yFAIFA,O,6TCDTF,EAAU,8CACVqB,WAASC,KAAKC,OADJ,UAGHC,IAAOC,KAAP,QAHG,gDAMYD,IAAOE,MAAP,QANZ,wCASkBzC,IAAQC,aAAaC,IATvC,mBAS6DF,IAAQC,aAAaC,IATlF,gBAaDa,O,m2BCZT2B,EAAY,4GAMZ,qBAAGC,aAA6B,IANpB,KAUZ,qBAAGb,QAAmB,IAVV,IAiBZT,EAAQ,SAAC,GAAD,IAAGW,EAAH,EAAGA,IAAKW,EAAR,EAAQA,YAAab,EAArB,EAAqBA,OAArB,IAA6Bc,oBAA7B,MAA4C,GAA5C,EAAgDhB,EAAhD,EAAgDA,IAAKiB,EAArD,EAAqDA,UAAWC,EAAhE,EAAgEA,YAAgBC,EAAhF,0FACb,kBAACL,EAAD,iBAAkBE,EAAlB,CAAgCD,YAAaA,EAAab,OAAQA,IACjE,kBAAC,MAAD,eACCF,IAAK,CACJA,EACAkB,GACCE,OAAOC,SACTC,OAAQL,GAAa,yBAAKb,IAAKA,EAAKJ,IAAKiB,IACzCM,SAAUL,GAAe,yBAAKd,IAAKA,EAAKJ,IAAKkB,IAC7Cd,IAAKA,GACDe,MAQDK,EAAiB,kBAAM,+BAad/B,M","file":"static/js/packages-unity-web-src-components-card-card.67b81f78.js","sourcesContent":["import { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { bool } from 'prop-types';\nimport { EmotionButton } from '../Button';\n\nconst ButtonSet = styled.div`\n    ${({ spread }) => spread && css`\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n\n        ${EmotionButton} {\n            &:not(:first-of-type) {\n                margin-left: auto!important;\n            }\n        }\n    `}\n\n    button + button,\n    a + a,\n    a + button,\n    button + a {\n        margin-left: 0.4rem;\n    }\n`;\n\n/**\n * Hack for docz and react-docgen\n */\nconst ButtonSetPropTypes = () => <div />;\nButtonSetPropTypes.propTypes = {\n\tspread: bool,\n};\nButtonSet.propTypes = ButtonSetPropTypes.propTypes;\nexport { ButtonSetPropTypes };\n\nexport default ButtonSet;\n\n","import styled from '@emotion/styled';\nimport borders from '@clarityhub/unity-core/lib/borders';\n\nconst CardImage = styled.img`\n    display: block;\n    margin: 0 auto;\n    max-width: 100%;\n\n    border-top-left-radius: calc(${borders.borderRadius.rem}rem - 1px);\n    border-top-right-radius: calc(${borders.borderRadius.rem}rem - 1px);\n`;\n\nexport default CardImage;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Card, {\n    CardHeader,\n    CardFooter,\n    CardImage,\n    CardBody,\n    CardActions,\n} from './index';\nimport { CardPropTypes } from './Card';\nimport Typography from '../Typography';\nimport Button, { ButtonSet } from '../Buttons';\nimport Image from '../Image';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"card\"}}>{`Card`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Cards provide a content container that you can use to display grouped content.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import Card, {\n    CardHeader,\n    CardFooter,\n    CardImage,\n    CardBody,\n    CardActions,\n} from '@clarityhub/unity-web/lib/components/Card';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"simple-card\"}}>{`Simple Card`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In all examples, the headings and text use the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Typography`}</MDXTag>{` components.`}</MDXTag>\n<Playground __position={0} __code={'<Card>\\n  <CardBody>\\n    <Typography type=\\\"text\\\">Default</Typography>\\n  </CardBody>\\n</Card>\\n<Card type=\\\"notification\\\" style={{ marginTop: \\'1rem\\' }}>\\n  <CardBody>\\n    <Typography type=\\\"text\\\" color=\\\"white\\\">\\n      Notification\\n    </Typography>\\n  </CardBody>\\n</Card>\\n<Card flat type=\\\"highlight\\\" style={{ marginTop: \\'1rem\\' }}>\\n  <CardBody>\\n    <Typography type=\\\"text\\\" color=\\\"dark\\\">\\n      Highlight\\n    </Typography>\\n  </CardBody>\\n</Card>\\n<Card flat type=\\\"callout\\\" style={{ marginTop: \\'1rem\\' }}>\\n  <CardBody>\\n    <Typography type=\\\"text\\\" color=\\\"dark\\\">\\n      Callout\\n    </Typography>\\n  </CardBody>\\n</Card>'} __scope={{props: this ? this.props : props,Card,CardHeader,CardFooter,CardImage,CardBody,CardActions,CardPropTypes,Typography,Button,ButtonSet,Image}}>\n    <Card>\n        <CardBody>\n            <Typography type=\"text\">\n                Default\n            </Typography>\n        </CardBody>\n    </Card>\n    <Card type=\"notification\" style={{ marginTop: '1rem'}}>\n        <CardBody>\n            <Typography type=\"text\" color=\"white\">\n                Notification\n            </Typography>\n        </CardBody>\n    </Card>\n    <Card flat type=\"highlight\" style={{ marginTop: '1rem'}}>\n        <CardBody>\n            <Typography type=\"text\" color=\"dark\">\n                Highlight\n            </Typography>\n        </CardBody>\n    </Card>\n    <Card flat type=\"callout\" style={{ marginTop: '1rem'}}>\n        <CardBody>\n            <Typography type=\"text\" color=\"dark\">\n                Callout\n            </Typography>\n        </CardBody>\n    </Card>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"card-with-image\"}}>{`Card with Image`}</MDXTag>\n<Playground __position={1} __code={'<Card style={{ width: \\'16rem\\' }}>\\n  <CardImage src=\\\"https://placehold.it/300x150\\\" />\\n  <CardBody>\\n    <Typography type=\\\"h3\\\">Card title</Typography>\\n    <Typography type=\\\"text\\\">Meow Mix</Typography>\\n  </CardBody>\\n</Card>'} __scope={{props: this ? this.props : props,Card,CardHeader,CardFooter,CardImage,CardBody,CardActions,CardPropTypes,Typography,Button,ButtonSet,Image}}>\n    <Card style={{ width: '16rem' }}>\n        <CardImage src=\"https://placehold.it/300x150\" />\n        <CardBody>\n            <Typography type=\"h3\">Card title</Typography>\n            <Typography type=\"text\">\n                Meow Mix\n            </Typography>\n        </CardBody>\n    </Card>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"card-with-actions\"}}>{`Card with Actions`}</MDXTag>\n<Playground __position={2} __code={'<Card>\\n  <CardBody>\\n    <Typography type=\\\"h3\\\">Card title</Typography>\\n    <Typography type=\\\"h4\\\">Card subtitle</Typography>\\n    <Typography type=\\\"text\\\">Meow Mix</Typography>\\n    <CardActions>\\n      <ButtonSet>\\n        <Button>Cancel</Button>\\n        <Button type=\\\"danger\\\">Delete</Button>\\n      </ButtonSet>\\n    </CardActions>\\n  </CardBody>\\n</Card>'} __scope={{props: this ? this.props : props,Card,CardHeader,CardFooter,CardImage,CardBody,CardActions,CardPropTypes,Typography,Button,ButtonSet,Image}}>\n    <Card>\n        <CardBody>\n            <Typography type=\"h3\">Card title</Typography>\n            <Typography type=\"h4\">Card subtitle</Typography>\n            <Typography type=\"text\">\n                Meow Mix\n            </Typography>\n        <CardActions>\n            <ButtonSet>\n                <Button>Cancel</Button>\n                <Button type=\"danger\">Delete</Button>\n            </ButtonSet>\n        </CardActions>\n    </CardBody>\n</Card>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"hoverable\"}}>{`Hoverable`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Useful if you want to turn the Card into a link`}</MDXTag>\n<Playground __position={3} __code={'<Card hoverable>\\n  <CardBody>\\n    <Typography type=\\\"text\\\">Default</Typography>\\n  </CardBody>\\n</Card>\\n<Card hoverable type=\\\"notification\\\" style={{ marginTop: \\'1rem\\' }}>\\n  <CardBody>\\n    <Typography type=\\\"text\\\" color=\\\"white\\\">\\n      Notification\\n    </Typography>\\n  </CardBody>\\n</Card>\\n<Card flat hoverable type=\\\"highlight\\\" style={{ marginTop: \\'1rem\\' }}>\\n  <CardBody>\\n    <Typography type=\\\"text\\\" color=\\\"dark\\\">\\n      Highlight\\n    </Typography>\\n  </CardBody>\\n</Card>'} __scope={{props: this ? this.props : props,Card,CardHeader,CardFooter,CardImage,CardBody,CardActions,CardPropTypes,Typography,Button,ButtonSet,Image}}>\n    <Card hoverable>\n        <CardBody>\n            <Typography type=\"text\">\n                Default\n            </Typography>\n        </CardBody>\n    </Card>\n    <Card hoverable type=\"notification\" style={{ marginTop: '1rem'}}>\n        <CardBody>\n            <Typography type=\"text\" color=\"white\">\n                Notification\n            </Typography>\n        </CardBody>\n    </Card>\n    <Card flat hoverable type=\"highlight\" style={{ marginTop: '1rem'}}>\n        <CardBody>\n            <Typography type=\"text\" color=\"dark\">\n                Highlight\n            </Typography>\n        </CardBody>\n    </Card>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"card-with-header-and-footer\"}}>{`Card with Header and Footer`}</MDXTag>\n<Playground __position={4} __code={'<Card>\\n  <CardHeader>Featured</CardHeader>\\n  <CardBody>\\n    <Typography type=\\\"h3\\\">Card title</Typography>\\n    <Typography type=\\\"h4\\\">Card subtitle</Typography>\\n    <Typography type=\\\"text\\\">Meow Mix</Typography>\\n    <CardActions>\\n      <ButtonSet>\\n        <Button>Cancel</Button>\\n        <Button type=\\\"danger\\\">Delete</Button>\\n      </ButtonSet>\\n    </CardActions>\\n  </CardBody>\\n  <CardFooter>2 days ago</CardFooter>\\n</Card>'} __scope={{props: this ? this.props : props,Card,CardHeader,CardFooter,CardImage,CardBody,CardActions,CardPropTypes,Typography,Button,ButtonSet,Image}}>\n    <Card>\n        <CardHeader>\n            Featured\n        </CardHeader>\n        <CardBody>\n            <Typography type=\"h3\">Card title</Typography>\n            <Typography type=\"h4\">Card subtitle</Typography>\n            <Typography type=\"text\">\n                Meow Mix\n            </Typography>\n        <CardActions>\n            <ButtonSet>\n                <Button>Cancel</Button>\n                <Button type=\"danger\">Delete</Button>\n            </ButtonSet>\n        </CardActions>\n    </CardBody>\n    <CardFooter>\n        2 days ago\n    </CardFooter>\n</Card>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example-cards\"}}>{`Example Cards`}</MDXTag>\n<Playground __position={5} __code={'<Card center>\\n  <CardBody>\\n    <Typography type=\\\"h3\\\">Welcome to Clarity Hub!</Typography>\\n    <Typography type=\\\"text\\\">\\n      To get started, install the extension and use Intercom like you normally\\n      would. We’ll let you know when we have suggestions for you by providing\\n      a prompt in the place you normally work.\\n    </Typography>\\n    <Image\\n      center\\n      withMargin\\n      src=\\\"/public/get-started.png\\\"\\n      alt=\\\"Get started with Clarity Hub\\\"\\n      style={{ width: \\'80%\\' }}\\n    />\\n\\n    <CardActions>\\n      <Button type=\\\"primary\\\">Install the Extension</Button>\\n    </CardActions>\\n  </CardBody>\\n</Card>\\n<Card center style={{ marginTop: \\'1rem\\' }}>\\n  <CardBody>\\n    <Typography type=\\\"h3\\\">Get Started</Typography>\\n    <Typography type=\\\"text\\\">\\n      Send email invites to the rest of your team to get them onboarded! We’ll\\n      send them instructions on how to get started using Clarity Hub.\\n    </Typography>\\n\\n    <CardActions>\\n      <Button type=\\\"primary\\\">Invite Your Team</Button>\\n    </CardActions>\\n  </CardBody>\\n</Card>'} __scope={{props: this ? this.props : props,Card,CardHeader,CardFooter,CardImage,CardBody,CardActions,CardPropTypes,Typography,Button,ButtonSet,Image}}>\n    <Card center>\n        <CardBody>\n            <Typography type=\"h3\">Welcome to Clarity Hub!</Typography>\n            <Typography type=\"text\">\n                To get started, install the extension and use Intercom\n                like you normally would. We’ll let you know when we\n                have suggestions for you by providing a prompt in\n                the place you normally work.\n            </Typography>\n        <Image\n            center\n            withMargin\n            src=\"/public/get-started.png\"\n            alt=\"Get started with Clarity Hub\"\n            style={{ width: '80%' }}\n        />\n\n        <CardActions>\n            <Button type=\"primary\">Install the Extension</Button>\n        </CardActions>\n    </CardBody>\n</Card>\n<Card center style={{ marginTop: '1rem'}}>\n    <CardBody>\n        <Typography type=\"h3\">Get Started</Typography>\n        <Typography type=\"text\">\n            Send email invites to the rest of your team to get\n            them onboarded! We’ll send them instructions\n            on how to get started using Clarity Hub.\n        </Typography>\n\n        <CardActions>\n            <Button type=\"primary\">Invite Your Team</Button>\n        </CardActions>\n    </CardBody>\n</Card>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"prop-types\"}}>{`Prop Types`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The following prop types are available for the Card component.`}</MDXTag>\n<PropsTable of={CardPropTypes} />\n           </MDXTag>\n  }\n}\n  ","import styled from '@emotion/styled';\n\nconst CardActions = styled.div`\n    margin-top: 1rem;\n`;\n\nexport default CardActions;\n","import styled from '@emotion/styled';\nimport { variants } from '@clarityhub/unity-core/lib/typography';\nimport borders from '@clarityhub/unity-core/lib/borders';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nconst CardFooter = styled.div`\n    ${variants.text.string}\n\n    color: ${colors.dark.default};\n\n    padding: .75rem 1.25rem;\n    border-top: 1px solid ${colors.muted.default};\n\n    &:last-child {\n        border-radius: 0 0 calc(${borders.borderRadius.rem}rem - 1px) calc(${borders.borderRadius.rem}rem - 1px);\n    }\n`;\n\nexport default CardFooter;\n","import React from 'react';\nimport { bool, object, string } from 'prop-types';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { Img } from 'react-image';\n\nconst ImageWrapper = styled.div`\n    img {\n        box-shadow: 0 2px 4px 0 rgba(0,0,0,.1);\n        max-width: 100%;\n    }\n\n    ${({ withSpacing }) => withSpacing && css`\n        padding: 1rem;\n    `}\n\n    ${({ center }) => center && css`\n        margin-left: auto;\n        margin-right: auto;\n        text-align: center;\n    `}\n`;\n\nconst Image = ({ alt, withSpacing, center, wrapperProps = {}, src, loaderUrl, fallbackUrl, ...rest }) => (\n\t<ImageWrapper {...wrapperProps} withSpacing={withSpacing} center={center}>\n\t\t<Img\n\t\t\tsrc={[\n\t\t\t\tsrc,\n\t\t\t\tfallbackUrl,\n\t\t\t].filter(Boolean)}\n\t\t\tloader={loaderUrl && <img alt={alt} src={loaderUrl} />}\n\t\t\tunloader={fallbackUrl && <img alt={alt} src={fallbackUrl} />}\n\t\t\talt={alt}\n\t\t\t{...rest}\n\t\t/>\n\t</ImageWrapper>\n);\n\n/**\n * Hack for docz and react-docgen\n */\nconst ImagePropTypes = () => <div />;\nImagePropTypes.propTypes = {\n\talt: string.isRequired,\n\tcenter: bool,\n\tfallbackUrl: string,\n\tloaderUrl: string,\n\tsrc: string.isRequired,\n\twithSpacing: bool,\n\twrapperProps: object,\n};\nImage.propTypes = ImagePropTypes.propTypes;\nexport { ImagePropTypes };\n\nexport default Image;\n"],"sourceRoot":""}