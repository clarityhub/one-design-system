{"version":3,"sources":["webpack:///./packages/unity-web/src/components/Badge/Badge.js","webpack:///./packages/unity-web/src/components/Badge/index.js","webpack:///./packages/unity-web/src/components/Buttons/ButtonGroup.js","webpack:///./packages/unity-web/src/components/Buttons/ButtonSet.js","webpack:///./packages/unity-web/src/components/Buttons/index.js","webpack:///./packages/unity-web/src/components/Table/JSONAPITable.js","webpack:///./packages/unity-web/src/components/Table/JSONAPITable.mdx","webpack:///./packages/unity-web/src/components/Table/Table.js","webpack:///./packages/unity-web/src/components/Table/TableBody.js","webpack:///./packages/unity-web/src/components/Table/TableCell.js","webpack:///./packages/unity-web/src/components/Table/TableHead.js","webpack:///./packages/unity-web/src/components/Table/TableRow.js","webpack:///./packages/unity-web/src/theme/fonts.js"],"names":["Badge","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","variants","button","string","_ref","type","css","colors","primary","default","opacify","success","danger","white","notification","black","muted","BadgePropTypes","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","propTypes","_Badge__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","ButtonGroup","shadow","EmotionButton","ButtonGroupItem","selected","rest","_objectWithoutProperties","_Button__WEBPACK_IMPORTED_MODULE_3__","assign","ButtonSet","spread","ButtonSetPropTypes","React","_Button__WEBPACK_IMPORTED_MODULE_0__","_ButtonSet__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Table__WEBPACK_IMPORTED_MODULE_1__","_TableBody__WEBPACK_IMPORTED_MODULE_2__","_TableCell__WEBPACK_IMPORTED_MODULE_3__","_TableHead__WEBPACK_IMPORTED_MODULE_4__","_TableRow__WEBPACK_IMPORTED_MODULE_5__","JSONAPITable","data","suggestedColumns","columns","rawResponse","ActionColumn","actionColumn","length","keys","map","col","i","Array","key","row","name","MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","Component","_this$props","components","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_2__","__position","__code","__scope","Button","_JSONAPITable__WEBPACK_IMPORTED_MODULE_3__","description","mailchimpId","_Badge__WEBPACK_IMPORTED_MODULE_4__","links","self","title","subjectLine","previewText","greeting","mailchimpUrl","meta","count","style","minWidth","_Buttons__WEBPACK_IMPORTED_MODULE_5__","size","text","of","Table","styles","TableBody","TableCell","types","TableHead","TableRow","_clarityhub_unity_core_lib_typography__WEBPACK_IMPORTED_MODULE_0__","_clarityhub_unity_core_lib_colors__WEBPACK_IMPORTED_MODULE_1__","_clarityhub_unity_core_lib_colors__WEBPACK_IMPORTED_MODULE_1___default","_clarityhub_unity_core_lib_utilities_color__WEBPACK_IMPORTED_MODULE_2__","h1","concat","heading","sizes","rem","lineHeight","unitless","h2","h3","h4","secondary","h5","h6","p","readable","text2","sectionLabel","darkGray","subtext","link","darken","blockLink","dove"],"mappings":"6fAQMA,EAAKC,OAAAC,EAAA,QAAAD,CAAA,OAAAE,OAAA,YAAAF,CAAA,6DAKLG,WAASC,OAAOC,OALX,+NAmBL,SAAAC,GACJ,OADkBA,EAAXC,MAEP,IAAK,UACJ,OAAOC,aAAP,UAC0BC,IAAOC,QAAQC,QADzC,qBAEqCC,kBAAQH,IAAOC,QAAQC,QAAS,KAFrE,KAID,IAAK,UACJ,OAAOH,aAAP,UAC0BC,IAAOI,QAAQF,QADzC,qBAEqCC,kBAAQH,IAAOI,QAAQF,QAAS,KAFrE,KAID,IAAK,SACJ,OAAOH,aAAP,UAC0BC,IAAOK,OAAOH,QADxC,qBAEqCC,kBAAQH,IAAOK,OAAOH,QAAS,KAFpE,KAID,IAAK,eACJ,OAAOH,aAAP,UAC0BC,IAAOM,MAAMJ,QADvC,qBAEqCF,IAAOO,aAAaL,QAFzD,iBAGiCF,IAAOO,aAAaL,QAHrD,KAKD,IAAK,UACL,QACC,OAAOH,aAAP,UAC0BC,IAAOQ,MAAMN,QADvC,qBAEqCF,IAAOS,MAAMP,QAFlD,iBAGiCF,IAAOS,MAAMP,QAH9C,OA5CQ,IAwDLQ,EAAiB,kBAAMC,EAAAC,EAAAC,cAAA,aAK7BvB,EAAMwB,UAAYJ,EAAeI,UAGlBxB,ieCxEf,IAAAyB,EAAAC,EAAA,sDAAAA,EAAAC,EAAAC,EAAA,sBAAAH,EAAA,iwBCOA,IAAMI,EAAW5B,OAAAC,EAAA,QAAAD,CAAA,OAAAE,OAAA,aAAAF,CAAA,cACCS,IAAOoB,OAAOlB,QADf,yBAIXmB,IAJW,qBAQXA,IARW,MAQQA,IARR,8CAUgBrB,IAAOS,MAAMP,QAV7B,KAYXmB,IAZW,0DAeXA,IAfW,0EAmBXA,IAnBW,sEAyBXC,EAAkB,SAAAzB,GAAA,IAAG0B,EAAH1B,EAAG0B,SAAaC,EAAhBC,EAAA5B,EAAA,qBACvBc,EAAAC,EAAAC,cAACa,EAAA,EAADnC,OAAAoC,OAAA,CAAQ7B,KAAMyB,EAAW,UAAY,WAAeC,idC5B/CI,EAASrC,OAAAC,EAAA,QAAAD,CAAA,OAAAE,OAAA,aAAAF,CACT,SAAAM,GAAA,OAAAA,EAAGgC,QAAuB9B,cAAJ,4DAKlBsB,IALkB,yDADb,qEAwBTS,EAAqB,kBAAMC,MAAAlB,cAAA,aAIjCe,EAAUd,UAAYgB,EAAmBhB,UAG1Bc,oQCpCf,IAAAI,EAAAhB,EAAA,yDAAAA,EAAAC,EAAAC,EAAA,sBAAAc,EAAA,QAAAC,EAAAjB,EAAA,4DAAAA,EAAAC,EAAAC,EAAA,sBAAAe,EAAA,IAAAjB,EAAA,wJCAA,IAAAkB,EAAAlB,EAAA,iCAAAmB,EAAAnB,EAAAoB,EAAAF,GAAAG,EAAArB,EAAA,sDAAAsB,EAAAtB,EAAA,0DAAAuB,EAAAvB,EAAA,0DAAAwB,EAAAxB,EAAA,0DAAAyB,EAAAzB,EAAA,yDAkBM0B,EAAe,SAAA7C,GAIf,IAbsB8C,EAUlBC,EAGJ/C,EAHLgD,QACMC,EAEDjD,EAFL8C,KACcI,EACTlD,EADLmD,aAEMH,EAAUD,KAdWD,EAc4BG,EAAYH,OAbtC,IAAhBA,EAAKM,OAKX1D,OAAO2D,KAAKP,EAAK,IAHhB,IAaR,OACCR,EAAAvB,EAAAC,cAACwB,EAAA,EAAD,KACCF,EAAAvB,EAAAC,cAAC2B,EAAA,EAAD,KACCL,EAAAvB,EAAAC,cAAC4B,EAAA,EAAD,KACEI,EAAQM,IAAI,SAACC,EAAKC,GAClB,OAAID,aAAeE,MACXnB,EAAAvB,EAAAC,cAAC0B,EAAA,EAAD,CAAWgB,IAAKF,GAAID,EAAI,IAExBjB,EAAAvB,EAAAC,cAAC0B,EAAA,EAAD,CAAWgB,IAAKF,GAAID,KAI5BL,GACAZ,EAAAvB,EAAAC,cAAC0B,EAAA,EAAD,CAAWgB,IAAK,WAAhB,aAIHpB,EAAAvB,EAAAC,cAACyB,EAAA,EAAD,KACEQ,EAAYH,KAAKQ,IAAI,SAAAK,GAAG,OACxBrB,EAAAvB,EAAAC,cAAC4B,EAAA,EAAD,CAAUc,IAAKC,EAAIC,MACjBZ,EAAQM,IAAI,SAACI,GACb,OAAIA,aAAeD,MACI,oBAAXC,EAAI,GACPpB,EAAAvB,EAAAC,cAAC0B,EAAA,EAAD,CAAWgB,IAAKA,GAAMA,EAAI,GAAGC,IAE7BrB,EAAAvB,EAAAC,cAAC0B,EAAA,EAAD,CAAWgB,IAAKA,GAAMC,EAAID,EAAI,KAG/BpB,EAAAvB,EAAAC,cAAC0B,EAAA,EAAD,CAAWgB,IAAKA,GAAMC,EAAID,MAIlCR,GACAZ,EAAAvB,EAAAC,cAAC0B,EAAA,EAAD,CAAWgB,IAAK,WACfpB,EAAAvB,EAAAC,cAACkC,EAAD,CACCS,IAAKA,WAiBCd,s+DCjEMgB,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,yPADmB7B,IAAMoC,kDAKnC,IAAAC,EAC0BN,KAAKH,MAA9BU,EADDD,EACCC,WAAeV,EADhBlC,EAAA2C,EAAA,gBAGP,OAAOjC,EAAAvB,EAAAC,cAACyD,EAAA,OAAD,CACEb,KAAK,UAELY,WAAYA,GACzBlC,EAAAvB,EAAAC,cAACyD,EAAA,OAAD,CAAQb,KAAK,KAAKY,WAAYA,EAAYV,MAAO,CAACY,GAAK,iBAAvD,gBACApC,EAAAvB,EAAAC,cAACyD,EAAA,OAAD,CAAQb,KAAK,IAAIY,WAAYA,GAA7B,oFACAlC,EAAAvB,EAAAC,cAACyD,EAAA,OAAD,CAAQb,KAAK,KAAKY,WAAYA,EAAYV,MAAO,CAACY,GAAK,4BAAvD,oCACApC,EAAAvB,EAAAC,cAACyD,EAAA,OAAD,CAAQb,KAAK,MAAMY,WAAYA,GAAYlC,EAAAvB,EAAAC,cAACyD,EAAA,OAAD,CAAQb,KAAK,OAAOY,WAAYA,EAAYG,WAAW,MAAMb,MAAO,CAACc,UAAY,gBAAjF,iFAE3CtC,EAAAvB,EAAAC,cAACyD,EAAA,OAAD,CAAQb,KAAK,KAAKY,WAAYA,EAAYV,MAAO,CAACY,GAAK,mBAAvD,kBACApC,EAAAvB,EAAAC,cAAC6D,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,qRAAsSC,QAAS,CAAClB,MAAOG,KAAOA,KAAKH,MAAQA,EAAMQ,sBAAUzB,iBAAapD,UAAMwF,aAC7Y3C,EAAAvB,EAAAC,cAACkE,EAAA,EAAD,CACIlC,QAAS,CACL,CAAC,OAAQ,QACT,CAAC,cAAe,gBAEpBF,KAAM,CACFA,KAAM,CAAC,CACHc,KAAM,cACNuB,YAAa,OACd,CACCvB,KAAM,cACNuB,YAAa,WAK7B7C,EAAAvB,EAAAC,cAACyD,EAAA,OAAD,CAAQb,KAAK,KAAKY,WAAYA,EAAYV,MAAO,CAACY,GAAK,yBAAvD,wBACApC,EAAAvB,EAAAC,cAAC6D,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,s1GAAk7GC,QAAS,CAAClB,MAAOG,KAAOA,KAAKH,MAAQA,EAAMQ,sBAAUzB,iBAAapD,UAAMwF,aACzhH3C,EAAAvB,EAAAC,cAACkE,EAAA,EAAD,CACIlC,QAAS,CACL,CAAC,QAAS,SACV,CAAC,eAAgB,eACjB,CAAC,eAAgB,eACjB,CAAC,SAAU,SAACF,GACR,OAAIA,EAAKsC,YAED9C,EAAAvB,EAAAC,cAACqE,EAAA,EAAD,CAAOpF,KAAK,WAAZ,aAMAqC,EAAAvB,EAAAC,cAACqE,EAAA,EAAD,uBAOhBvC,KAAM,CACVwC,MAAS,CACLC,KAAQ,mCAEZzC,KAAQ,CACJ,CACI0C,MAAS,wBACTC,YAAe,qBACfC,YAAe,wEACfC,SAAY,GACZP,YAAe,KACfQ,aAAgB,MAEpB,CACIJ,MAAS,wBACTC,YAAe,oCACfC,YAAe,oEACfC,SAAY,IAEhB,CACIH,MAAS,wBACTC,YAAe,oCACfC,YAAe,oEACfC,SAAY,GACZP,YAAe,aACfQ,aAAgB,8DAEpB,CACIJ,MAAS,wBACTC,YAAe,iBACfC,YAAe,iGACfC,SAAY,oFACZP,YAAe,aACfQ,aAAgB,8DAEpB,CACIJ,MAAS,wBACTC,YAAe,iBACfC,YAAe,8FACfC,SAAY,GACZP,YAAe,aACfQ,aAAgB,8DAEpB,CACIJ,MAAS,wBACTC,YAAe,oCACfC,YAAe,oEACfC,SAAY,GACZP,YAAe,aACfQ,aAAgB,8DAEpB,CACIJ,MAAS,wBACTC,YAAe,oCACfC,YAAe,oEACfC,SAAY,sEACZP,YAAe,aACfQ,aAAgB,+DAGxBC,KAAQ,CACJC,MAAS,IAGb3C,aAAc,SAAAnD,GAAaA,EAAV2D,IACb,OACIrB,EAAAvB,EAAAC,cAAA,OAAK+E,MAAO,CAAEC,SAAU,UAChB1D,EAAAvB,EAAAC,cAACiF,EAAA,EAAD,CACIC,KAAK,QACLjG,KAAK,WAFT,QAOJqC,EAAAvB,EAAAC,cAACiF,EAAA,EAAD,CAAQC,KAAK,QAAQjG,KAAK,SAASkG,MAAI,GAAvC,eAMhB7D,EAAAvB,EAAAC,cAACyD,EAAA,OAAD,CAAQb,KAAK,KAAKY,WAAYA,EAAYV,MAAO,CAACY,GAAK,eAAvD,cACApC,EAAAvB,EAAAC,cAACyD,EAAA,OAAD,CAAQb,KAAK,KAAKY,WAAYA,EAAYV,MAAO,CAACY,GAAK,mBAAvD,gBACApC,EAAAvB,EAAAC,cAAC6D,EAAA,EAAD,CAAYuB,GAAIvD,kRCtJVwD,EAAK3G,OAAAC,EAAA,QAAAD,CAAA,SAAAE,OAAA,YAAAF,CAAA,CAAAkE,KAAA,UAAA0C,OAAA,wEAOID,4KCPTE,EAAS7G,OAAAC,EAAA,QAAAD,CAAA,SAAAE,OAAA,aAAAF,CAAA,CAAAkE,KAAA,UAAA0C,OAAA,6BAIAC,0YCCTC,EAAY9G,OAAAC,EAAA,QAAAD,CAAA,MAAAE,OAAA,aAAAF,CACjB+G,IAAMN,KACNjG,cAFiB,qEAKiBC,IAAOS,MAAMP,QAL9B,qFAaRqG,IAbQ,4BAmBHF,4KCxBTE,EAAShH,OAAAC,EAAA,QAAAD,CAAA,MAAAE,OAAA,aAAAF,CAAA,CAAAkE,KAAA,UAAA0C,OAAA,gCAIAI,+NCHTC,EAAQjH,OAAAC,EAAA,QAAAD,CAAA,MAAAE,OAAA,YAAAF,CAAA,+FAOcS,IAAOS,MAAMP,QAP3B,MAWCsG,8ECdfxF,EAAAC,EAAAC,EAAA,sBAAAoF,IAAA,IAAAG,EAAAzF,EAAA,2CAAA0F,EAAA1F,EAAA,uCAAA2F,EAAA3F,EAAAoB,EAAAsE,GAAAE,EAAA5F,EAAA,gDAIasF,EAAQ,CACpBO,GAAE,aAAAC,OACOpH,WAASqH,QAAQnH,OADxB,2BAAAkH,OAGkBE,QAAMH,GAAGI,IAH3B,+BAAAH,OAIoBE,QAAMH,GAAGK,WAAWC,SAJxC,WAMFC,GAAE,aAAAN,OACOpH,WAASqH,QAAQnH,OADxB,2BAAAkH,OAGkBE,QAAMI,GAAGH,IAH3B,+BAAAH,OAIoBE,QAAMI,GAAGF,WAAWC,SAJxC,sEAQFE,GAAE,aAAAP,OACOpH,WAASqH,QAAQnH,OADxB,2BAAAkH,OAGkBE,QAAMK,GAAGJ,IAH3B,+BAAAH,OAIoBE,QAAMK,GAAGH,WAAWC,SAJxC,sEAQFG,GAAE,aAAAR,OACOpH,WAAS6H,UAAU3H,OAD1B,2BAAAkH,OAGkBE,QAAMM,GAAGL,IAH3B,+BAAAH,OAIoBE,QAAMM,GAAGJ,WAAWC,SAJxC,WAMFK,GAAE,aAAAV,OACOpH,WAAS6H,UAAU3H,OAD1B,2BAAAkH,OAGkBE,QAAMQ,GAAGP,IAH3B,+BAAAH,OAIoBE,QAAMQ,GAAGN,WAAWC,SAJxC,WAMFM,GAAE,aAAAX,OACOpH,WAAS6H,UAAU3H,OAD1B,2BAAAkH,OAGkBE,QAAMS,GAAGR,IAH3B,+BAAAH,OAIoBE,QAAMS,GAAGP,WAAWC,SAJxC,WAMFO,EAAC,aAAAZ,OACQpH,WAASiI,SAAS/H,OAD1B,2BAAAkH,OAGmBE,QAAMU,EAAET,IAH3B,+BAAAH,OAIqBE,QAAMU,EAAER,WAAWC,SAJxC,4NAoBDnB,KAAI,aAAAc,OACKpH,WAASsG,KAAKpG,OADnB,2BAAAkH,OAGgBE,QAAMhB,KAAKiB,IAH3B,+BAAAH,OAIkBE,QAAMhB,KAAKkB,WAAWC,SAJxC,4NAoBJS,MAAK,aAAAd,OACIpH,WAASsG,KAAKpG,OADlB,2BAAAkH,OAGeE,QAAMY,MAAMX,IAH3B,+BAAAH,OAIiBE,QAAMY,MAAMV,WAAWC,SAJxC,uPAqBLU,aAAY,aAAAf,OACHpH,WAASsG,KAAKpG,OADX,uBAAAkH,OAGI9G,IAAO8H,SAAS5H,QAHpB,gEAOZ6H,QAAO,wNAAAjB,OAGaE,QAAMe,QAAQd,IAH3B,+BAAAH,OAIeE,QAAMe,QAAQb,WAAWC,SAJxC,sBAAAL,OAKS9G,IAAO8H,SAAS5H,QALzB,uGAYP8H,KAAI,sCAAAlB,OAC8B9G,IAAOC,QAAQC,QAD7C,sBAAA4G,OAEY9G,IAAOC,QAAQC,QAF3B,oJAAA4G,OAQkC9G,IAAOC,QAAQC,QARjD,iEAAA4G,OAUgB9G,IAAOC,QAAQC,QAV/B,oJAAA4G,OAgBkCmB,iBAAOjI,IAAOC,QAAQC,QAAS,IAhBjE,0BAAA4G,OAiBgBmB,iBAAOjI,IAAOC,QAAQC,QAAS,IAjB/C,4JA0BJgI,UAAS,oLAAApB,OAKO9G,IAAOmI,KAAKjI,QALnB,6EAAA4G,OAQW,KARX,+BAAAA,OASa,MATb,+PAAAA,OAkBW9G,IAAOmI,KAAKjI,QAlBvB,4EAAA4G,OAsBgB9G,IAAOmI,KAAKjI,QAtB5B","file":"static/js/packages-unity-web-src-components-table-jsonapi-table.b6041f86.js","sourcesContent":["import React from 'react';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { node, oneOf } from 'prop-types';\nimport colors from '@clarityhub/unity-core/lib/colors';\nimport { opacify } from '@clarityhub/unity-core/lib/utilities/color';\nimport { variants } from '@clarityhub/unity-core/lib/typography';\n\nconst Badge = styled.div`\n    overflow: visible;\n    text-transform: none;\n    display: inline-block;\n\n    ${variants.button.string}\n\n    font-weight: 600;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: middle;\n    border: 0 solid transparent;\n    padding: 0.1rem 0.4rem;\n    font-size: 0.8rem;\n    line-height: 1.2;\n    border-radius: 2rem;\n    position: relative;\n    text-transform: uppercase;\n\n    ${({ type }) => {\n\t\tswitch (type) {\n\t\tcase 'primary':\n\t\t\treturn css`\n                    color: ${colors.primary.default};\n                    background-color: ${opacify(colors.primary.default, 0.25)};\n                `;\n\t\tcase 'success':\n\t\t\treturn css`\n                    color: ${colors.success.default};\n                    background-color: ${opacify(colors.success.default, 0.25)};\n                `;\n\t\tcase 'danger':\n\t\t\treturn css`\n                    color: ${colors.danger.default};\n                    background-color: ${opacify(colors.danger.default, 0.25)};\n                `;\n\t\tcase 'notification':\n\t\t\treturn css`\n                    color: ${colors.white.default};\n                    background-color: ${colors.notification.default};\n                    border-color: ${colors.notification.default};\n                `;\n\t\tcase 'default':\n\t\tdefault:\n\t\t\treturn css`\n                    color: ${colors.black.default};\n                    background-color: ${colors.muted.default};\n                    border-color: ${colors.muted.default};\n                `;\n\t\t}\n\t}}\n`;\n\n/**\n * Hack for docz and react-docgen\n */\nconst BadgePropTypes = () => <div />;\nBadgePropTypes.propTypes = {\n\tchildren: node,\n\ttype: oneOf(['primary', 'success', 'danger', 'notification', 'default']),\n};\nBadge.propTypes = BadgePropTypes.propTypes;\nexport { BadgePropTypes };\n\nexport default Badge;\n","export { default } from './Badge';\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { bool } from 'prop-types';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nimport Button, { EmotionButton } from './Button';\n\nconst ButtonGroup = styled.div`\n    box-shadow: ${colors.shadow.default};\n    display: inline-block;\n\n    ${EmotionButton} {\n        box-shadow: none;\n    }\n\n    ${EmotionButton} + ${EmotionButton} {\n        border-left-width: 0;\n        border-left: 1px solid ${colors.muted.default};\n    }\n    ${EmotionButton}:not(:last-child):not(:first-of-type) {\n        border-radius: 0;\n    }\n    ${EmotionButton}:first-of-type {\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n    }\n    ${EmotionButton}:last-child {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n    }\n`;\n\nconst ButtonGroupItem = ({ selected, ...rest }) => (\n\t<Button type={selected ? 'primary' : 'default'} {...rest} />\n);\n\nButtonGroupItem.propTypes = {\n\tselected: bool,\n};\n\nexport { ButtonGroup, ButtonGroupItem };\n","import { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { bool } from 'prop-types';\nimport { EmotionButton } from './Button';\n\nconst ButtonSet = styled.div`\n    ${({ spread }) => spread && css`\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n\n        ${EmotionButton} {\n            &:not(:first-of-type) {\n                margin-left: auto!important;\n            }\n        }\n    `}\n\n    button + button,\n    a + a,\n    a + button,\n    button + a {\n        margin-left: 0.4rem;\n    }\n`;\n\n/**\n * Hack for docz and react-docgen\n */\nconst ButtonSetPropTypes = () => <div />;\nButtonSetPropTypes.propTypes = {\n\tspread: bool,\n};\nButtonSet.propTypes = ButtonSetPropTypes.propTypes;\nexport { ButtonSetPropTypes };\n\nexport default ButtonSet;\n\n","export { default } from './Button';\nexport { default as ButtonSet } from './ButtonSet';\nexport { ButtonGroup, ButtonGroupItem } from './ButtonGroup';\n","import React from 'react';\nimport { arrayOf, any, func, node, oneOfType, string } from 'prop-types';\n\nimport Table from './Table';\nimport TableBody from './TableBody';\nimport TableCell from './TableCell';\nimport TableHead from './TableHead';\nimport TableRow from './TableRow';\n\nconst getColumnsFromData = (data) => {\n\tif (!data || data.length === 0) {\n\t\t// Cannot determine columns from data\n\t\treturn [];\n\t}\n\n\treturn Object.keys(data[0]);\n};\n\nconst JSONAPITable = ({\n\tcolumns: suggestedColumns,\n\tdata: rawResponse,\n\tactionColumn: ActionColumn,\n}) => {\n\tconst columns = suggestedColumns || getColumnsFromData(rawResponse.data);\n\n\treturn (\n\t\t<Table>\n\t\t\t<TableHead>\n\t\t\t\t<TableRow>\n\t\t\t\t\t{columns.map((col, i) => {\n\t\t\t\t\t\tif (col instanceof Array) {\n\t\t\t\t\t\t\treturn <TableCell key={i}>{col[0]}</TableCell>;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn <TableCell key={i}>{col}</TableCell>;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t\t{ActionColumn && (\n\t\t\t\t\t\t<TableCell key={'Actions'}>Actions</TableCell>\n\t\t\t\t\t)}\n\t\t\t\t</TableRow>\n\t\t\t</TableHead>\n\t\t\t<TableBody>\n\t\t\t\t{rawResponse.data.map(row => (\n\t\t\t\t\t<TableRow key={row.name}>\n\t\t\t\t\t\t{columns.map((key) => {\n\t\t\t\t\t\t\tif (key instanceof Array) {\n\t\t\t\t\t\t\t\tif (typeof key[1] === 'function') {\n\t\t\t\t\t\t\t\t\treturn <TableCell key={key}>{key[1](row)}</TableCell>;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn <TableCell key={key}>{row[key[1]]}</TableCell>;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn <TableCell key={key}>{row[key]}</TableCell>;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{ActionColumn && (\n\t\t\t\t\t\t\t<TableCell key={'Actions'}>\n\t\t\t\t\t\t\t\t<ActionColumn\n\t\t\t\t\t\t\t\t\trow={row}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableRow>\n\t\t\t\t))}\n\t\t\t</TableBody>\n\t\t</Table>\n\t);\n};\n\nJSONAPITable.propTypes = {\n\tactionColumn: oneOfType([func, node]),\n\tcolumns: arrayOf(arrayOf(oneOfType([string, func]))),\n\tdata: any,\n};\n\nexport default JSONAPITable;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Component } from 'react';\nimport { Playground, PropsTable } from 'docz';\nimport JSONAPITable from './JSONAPITable';\nimport Badge from '../Badge';\nimport Button from '../Buttons';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"jsonapitable\"}}>{`JSONAPITable`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The JSONAPITable component allows you to create tables from JSON API style data.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"jsonapitable--component\"}}>{`\\<JSONAPITable /`}{`>`}{` component`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import { JSONAPITable } from '@clarityhub/unity-web/lib/components/Table';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"simple-example\"}}>{`Simple Example`}</MDXTag>\n<Playground __position={0} __code={'<JSONAPITable\\n  columns={[[\\'Name\\', \\'name\\'], [\\'Description\\', \\'description\\']]}\\n  data={{\\n    data: [\\n      {\\n        name: \\'Clarity Hub\\',\\n        description: \\'Wow\\',\\n      },\\n      {\\n        name: \\'Mantaray AR\\',\\n        description: \\'AR\\',\\n      },\\n    ],\\n  }}\\n/>'} __scope={{props: this ? this.props : props,Component,JSONAPITable,Badge,Button}}>\n    <JSONAPITable\n        columns={[\n            ['Name', 'name'],\n            ['Description', 'description'],\n        ]}\n        data={{\n            data: [{\n                name: 'Clarity Hub', \n                description: 'Wow',\n            }, {\n                name: 'Mantaray AR',\n                description: 'AR',\n            }]\n        }}\n    />\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"kitchen-sink-example\"}}>{`Kitchen Sink Example`}</MDXTag>\n<Playground __position={1} __code={'<JSONAPITable\\n  columns={[\\n    [\\'Title\\', \\'title\\'],\\n    [\\'Subject Line\\', \\'subjectLine\\'],\\n    [\\'Preview Text\\', \\'previewText\\'],\\n    [\\n      \\'Status\\',\\n      data => {\\n        if (data.mailchimpId) {\\n          return <Badge type=\\\"success\\\">Scheduled</Badge>\\n        } else {\\n          return <Badge>Unscheduled</Badge>\\n        }\\n      },\\n    ],\\n  ]}\\n  data={{\\n    links: {\\n      self: \\'http://localhost:4000/campaigns\\',\\n    },\\n    data: [\\n      {\\n        title: \\'2019-03-24-newsletter\\',\\n        subjectLine: \\'Clarity Hub Weekly\\',\\n        previewText:\\n          \\'Clarity Hub Weekly | Weekly Open Source Issues straight to your inbox\\',\\n        greeting: \\'\\',\\n        mailchimpId: null,\\n        mailchimpUrl: null,\\n      },\\n      {\\n        title: \\'2019-04-23-newsletter\\',\\n        subjectLine: \\'Stellar Newsletter by Clarity Hub\\',\\n        previewText:\\n          \\'Your weekly does of Open Source Issues and programming blog posts\\',\\n        greeting: \\'\\',\\n      },\\n      {\\n        title: \\'2019-04-25-newsletter\\',\\n        subjectLine: \\'Stellar Newsletter by Clarity Hub\\',\\n        previewText:\\n          \\'Your weekly does of Open Source Issues and programming blog posts\\',\\n        greeting: \\'\\',\\n        mailchimpId: \\'297691dd04\\',\\n        mailchimpUrl:\\n          \\'https://us18.admin.mailchimp.com/campaigns/show/?id=317045\\',\\n      },\\n      {\\n        title: \\'2019-05-02-newsletter\\',\\n        subjectLine: \\'Stellar Weekly\\',\\n        previewText:\\n          \\\"Learn about design systems, Facebook\\'s new website, React gotchas, and hot open source issues!\\\",\\n        greeting:\\n          \\\"This week, learn about design systems, Facebook\\'s new website, and React gotchas.\\\",\\n        mailchimpId: \\'5abbd11863\\',\\n        mailchimpUrl:\\n          \\'https://us18.admin.mailchimp.com/campaigns/show/?id=321993\\',\\n      },\\n      {\\n        title: \\'2019-05-09-newsletter\\',\\n        subjectLine: \\'Stellar Weekly\\',\\n        previewText:\\n          \\'Learn about skeleton loading pages, hooks, and affordances in this issue of Stellar Weekly.\\',\\n        greeting: \\'\\',\\n        mailchimpId: \\'92823e319e\\',\\n        mailchimpUrl:\\n          \\'https://us18.admin.mailchimp.com/campaigns/show/?id=327265\\',\\n      },\\n      {\\n        title: \\'2019-05-16-newsletter\\',\\n        subjectLine: \\'Stellar Newsletter by Clarity Hub\\',\\n        previewText:\\n          \\'Your weekly does of Open Source Issues and programming blog posts\\',\\n        greeting: \\'\\',\\n        mailchimpId: \\'d094958ae6\\',\\n        mailchimpUrl:\\n          \\'https://us18.admin.mailchimp.com/campaigns/show/?id=331649\\',\\n      },\\n      {\\n        title: \\'2019-05-23-newsletter\\',\\n        subjectLine: \\'Stellar Newsletter by Clarity Hub\\',\\n        previewText:\\n          \\'Your weekly does of Open Source Issues and programming blog posts\\',\\n        greeting:\\n          \\\"School\\'s out! Kick off the summer with some hot open source issues!\\\",\\n        mailchimpId: \\'656535fb6b\\',\\n        mailchimpUrl:\\n          \\'https://us18.admin.mailchimp.com/campaigns/show/?id=335601\\',\\n      },\\n    ],\\n    meta: {\\n      count: 7,\\n    },\\n  }}\\n  actionColumn={({ row }) => {\\n    return (\\n      <div style={{ minWidth: \\'200px\\' }}>\\n        <Button size=\\\"small\\\" type=\\\"primary\\\">\\n          Edit\\n        </Button>\\n\\n        <Button size=\\\"small\\\" type=\\\"danger\\\" text>\\n          Delete\\n        </Button>\\n      </div>\\n    )\\n  }}\\n/>'} __scope={{props: this ? this.props : props,Component,JSONAPITable,Badge,Button}}>\n    <JSONAPITable\n        columns={[\n            ['Title', 'title'],\n            ['Subject Line', 'subjectLine'],\n            ['Preview Text', 'previewText'],\n            ['Status', (data) => {\n                if (data.mailchimpId) {\n                    return (\n                        <Badge type=\"success\">\n                            Scheduled\n                        </Badge>\n                    );\n                } else {\n                    return (\n                        <Badge>\n                            Unscheduled\n                        </Badge>\n                    );\n                }\n            }],\n        ]}\n        data={{\n    \"links\": {\n        \"self\": \"http://localhost:4000/campaigns\"\n    },\n    \"data\": [\n        {\n            \"title\": \"2019-03-24-newsletter\",\n            \"subjectLine\": \"Clarity Hub Weekly\",\n            \"previewText\": \"Clarity Hub Weekly | Weekly Open Source Issues straight to your inbox\",\n            \"greeting\": \"\",\n            \"mailchimpId\": null,\n            \"mailchimpUrl\": null\n        },\n        {\n            \"title\": \"2019-04-23-newsletter\",\n            \"subjectLine\": \"Stellar Newsletter by Clarity Hub\",\n            \"previewText\": \"Your weekly does of Open Source Issues and programming blog posts\",\n            \"greeting\": \"\",\n        },\n        {\n            \"title\": \"2019-04-25-newsletter\",\n            \"subjectLine\": \"Stellar Newsletter by Clarity Hub\",\n            \"previewText\": \"Your weekly does of Open Source Issues and programming blog posts\",\n            \"greeting\": \"\",\n            \"mailchimpId\": \"297691dd04\",\n            \"mailchimpUrl\": \"https://us18.admin.mailchimp.com/campaigns/show/?id=317045\"\n        },\n        {\n            \"title\": \"2019-05-02-newsletter\",\n            \"subjectLine\": \"Stellar Weekly\",\n            \"previewText\": \"Learn about design systems, Facebook's new website, React gotchas, and hot open source issues!\",\n            \"greeting\": \"This week, learn about design systems, Facebook's new website, and React gotchas.\",\n            \"mailchimpId\": \"5abbd11863\",\n            \"mailchimpUrl\": \"https://us18.admin.mailchimp.com/campaigns/show/?id=321993\"\n        },\n        {\n            \"title\": \"2019-05-09-newsletter\",\n            \"subjectLine\": \"Stellar Weekly\",\n            \"previewText\": \"Learn about skeleton loading pages, hooks, and affordances in this issue of Stellar Weekly.\",\n            \"greeting\": \"\",\n            \"mailchimpId\": \"92823e319e\",\n            \"mailchimpUrl\": \"https://us18.admin.mailchimp.com/campaigns/show/?id=327265\"\n        },\n        {\n            \"title\": \"2019-05-16-newsletter\",\n            \"subjectLine\": \"Stellar Newsletter by Clarity Hub\",\n            \"previewText\": \"Your weekly does of Open Source Issues and programming blog posts\",\n            \"greeting\": \"\",\n            \"mailchimpId\": \"d094958ae6\",\n            \"mailchimpUrl\": \"https://us18.admin.mailchimp.com/campaigns/show/?id=331649\"\n        },\n        {\n            \"title\": \"2019-05-23-newsletter\",\n            \"subjectLine\": \"Stellar Newsletter by Clarity Hub\",\n            \"previewText\": \"Your weekly does of Open Source Issues and programming blog posts\",\n            \"greeting\": \"School's out! Kick off the summer with some hot open source issues!\",\n            \"mailchimpId\": \"656535fb6b\",\n            \"mailchimpUrl\": \"https://us18.admin.mailchimp.com/campaigns/show/?id=335601\"\n        }\n    ],\n    \"meta\": {\n        \"count\": 7\n    }\n}}\n    actionColumn={({ row }) => {\n        return (\n            <div style={{ minWidth: '200px' }}>\n                    <Button\n                        size=\"small\"\n                        type=\"primary\"\n                    >\n                        Edit\n                    </Button>\n\n                <Button size=\"small\" type=\"danger\" text>Delete</Button>\n            </div>\n        );\n    }}\n/>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"prop-types\"}}>{`Prop Types`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"jsonapitable-1\"}}>{`JSONAPITable`}</MDXTag>\n<PropsTable of={JSONAPITable} />\n           </MDXTag>\n  }\n}\n  ","import styled from '@emotion/styled';\n\nconst Table = styled.table`\n\tdisplay: table;\n\twidth: 100%;\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n`;\n\nexport default Table;\n","import styled from '@emotion/styled';\n\nconst TableBody = styled.tbody`\n    display: table-row-group;\n`;\n\nexport default TableBody;\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nimport { types } from '../../theme/fonts';\nimport TableHead from './TableHead';\n\nconst TableCell = styled.td(\n\ttypes.text,\n\tcss`\n        display: table-cell;\n        vertical-align: inherit;\n        border-bottom: 1px solid ${colors.muted.default};\n        text-align: left;\n        padding: 0.5rem 1rem 0.5rem 1rem;\n\n        &:last-child {\n            padding-right: 1rem;\n        }\n\n        ${TableHead} & {\n            font-weight: 600;\n        }\n    `\n);\n\nexport default TableCell;\n","import styled from '@emotion/styled';\n\nconst TableHead = styled.th`\n    display: table-header-group;\n`;\n\nexport default TableHead;\n","import styled from '@emotion/styled';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nconst TableRow = styled.tr`\n    color: inherit;\n    display: table-row;\n    vertical-align: middle;\n    outline: none;\n    \n    &:hover {\n        background-color: ${colors.muted.default};\n    }\n`;\n\nexport default TableRow;\n","import { variants, sizes } from '@clarityhub/unity-core/lib/typography';\nimport colors from '@clarityhub/unity-core/lib/colors';\nimport { darken } from '@clarityhub/unity-core/lib/utilities/color';\n\nexport const types = {\n\th1: `\n        ${variants.heading.string}\n\n        font-size: ${sizes.h1.rem}rem;\n        line-height: ${sizes.h1.lineHeight.unitless};\n    `,\n\th2: `\n        ${variants.heading.string}\n\n        font-size: ${sizes.h2.rem}rem;\n        line-height: ${sizes.h2.lineHeight.unitless};\n        padding-bottom: 1rem;\n        padding-top: 3rem;\n    `,\n\th3: `\n        ${variants.heading.string}\n\n        font-size: ${sizes.h3.rem}rem;\n        line-height: ${sizes.h3.lineHeight.unitless};\n        padding-bottom: 1rem;\n        padding-top: 3rem;\n    `,\n\th4: `\n        ${variants.secondary.string}\n\n        font-size: ${sizes.h4.rem}rem;\n        line-height: ${sizes.h4.lineHeight.unitless};\n    `,\n\th5: `\n        ${variants.secondary.string}\n\n        font-size: ${sizes.h5.rem}rem;\n        line-height: ${sizes.h5.lineHeight.unitless};\n    `,\n\th6: `\n        ${variants.secondary.string}\n\n        font-size: ${sizes.h6.rem}rem;\n        line-height: ${sizes.h6.lineHeight.unitless};\n    `,\n\tp: `\n        ${variants.readable.string}\n\n        font-size: ${sizes.p.rem}rem;\n        line-height: ${sizes.p.lineHeight.unitless};\n\n        & + & {\n            margin-top: 1.6rem;\n        }\n\n        strong,\n        b {\n            font-weight: 800;\n        }\n\n        i,\n        em {\n            font-style: italic;\n        }\n    `,\n\ttext: `\n        ${variants.text.string}\n\n        font-size: ${sizes.text.rem}rem;\n        line-height: ${sizes.text.lineHeight.unitless};\n\n        & + & {\n            margin-top: 1.6rem;\n        }\n\n        strong,\n        b {\n            font-weight: 800;\n        }\n\n        i,\n        em {\n            font-style: italic;\n        }\n    `,\n\ttext2: `\n        ${variants.text.string}\n\n        font-size: ${sizes.text2.rem}rem;\n        line-height: ${sizes.text2.lineHeight.unitless};\n        font-weight: 400;\n\n        & + & {\n            margin-top: 1.6rem;\n        }\n\n        strong,\n        b {\n            font-weight: 800;\n        }\n\n        i,\n        em {\n            font-style: italic;\n        }\n    `,\n\tsectionLabel: `\n        ${variants.text.string}\n\n        color: ${colors.darkGray.default};\n        font-size: 1rem;\n        line-height: 1.4;\n    `,\n\tsubtext: `\n        font-family: 'Crimson Text', -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n\n        font-size: ${sizes.subtext.rem}rem;\n        line-height: ${sizes.subtext.lineHeight.unitless};\n        color: ${colors.darkGray.default};\n        font-style: italic;\n\n        & + & {\n            margin-top: 1.6rem;\n        }\n    `,\n\tlink: `\n        border-bottom: 1px solid ${colors.primary.default};\n        color: ${colors.primary.default};\n        display: inline-block;\n        text-decoration: none;\n\n        &:hover,\n        &:active {\n            border-bottom: 2px solid ${colors.primary.default};\n            border-bottom-width: 2px;\n            color: ${colors.primary.default};\n            margin-bottom: -1px;\n            text-decoration: none;\n        }\n\n        &:visited {\n            border-bottom: 1px solid ${darken(colors.primary.default, 0.2)};\n            color: ${darken(colors.primary.default, 0.2)};\n            text-decoration: none;\n\n            &:hover,\n            &:active {\n                margin-bottom: 0;\n            }\n        }\n    `,\n\tblockLink: `\n        -khtml-user-select: none;\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n        -webkit-touch-callout: none;\n        border: 0 !important;\n        color: ${colors.dove.default};\n        cursor: pointer;\n        display: block;\n        font-size: ${14 / 16}rem;\n        line-height: ${26 / 16}rem;\n        position: relative;\n        text-align: center;\n        text-decoration: none;\n        transition: color 0.3s;\n        transition-property: color;\n        letter-spacing: 0.8px !important;\n\n        &:visited {\n            color: ${colors.dove.default} !important;\n        }\n\n        &::before {\n            background: ${colors.dove.default};\n            bottom: -6px;\n            content: '';\n            height: 2px;\n            left: 0;\n            position: absolute;\n            transform: scale3d(0, 0.4, 1);\n            transition: transform 0.1s;\n            width: 100%;\n        }\n\n        &.active,\n        &:hover,\n        &:focus {\n            &::before {\n                transform: scale3d(0.8, 0.4, 1);\n                transition-duration: 0.3s;\n                transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            }\n        }\n    `,\n};\n"],"sourceRoot":""}