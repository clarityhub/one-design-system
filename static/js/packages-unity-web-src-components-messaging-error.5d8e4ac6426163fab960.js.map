{"version":3,"sources":["webpack:///./packages/unity-web/src/components/ButtonSet/ButtonSet.js","webpack:///./packages/unity-web/src/components/Messaging/Error.js","webpack:///./packages/unity-web/src/components/Messaging/errorToString.js","webpack:///./packages/unity-web/src/components/Messaging/Error.mdx"],"names":["ButtonSet","spread","css","EmotionButton","ButtonSetPropTypes","propTypes","handleRefresh","refresh","e","preventDefault","window","location","reload","href","FloatingError","error","props","Notification","type","variant","Typography","color","message","errorToString","Box","margin","top","Button","onClick","MDXContent","layout","this","components","name","parentName","of","Error","__position","__code","__scope","Component","mdiNotebookOutline","React"],"mappings":"8XAKMA,EAAS,8CACT,qBAAGC,QAAuBC,cAAJ,4DAKlBC,IALkB,0DADb,qEAwBTC,EAAqB,kBAAM,iCAIjCJ,EAAUK,UAAYD,EAAmBC,UAG1BL,M,+mCC1Bf,IAAMM,EAAgB,SAACC,GAAD,OAAa,SAACC,GACnCA,EAAEC,iBAEqB,kBAAZF,EAKXG,OAAOC,SAASC,SAJfF,OAAOC,SAASE,KAAON,IAOnBO,EAAgB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAuC,IAAhCR,eAAgC,SAAZS,EAAY,yBAC/D,OACC,kBAACC,EAAA,EAAD,eAAcC,KAAK,SAASC,QAAQ,SAAYH,GAC/C,kBAACI,EAAA,EAAD,CAAYC,MAAM,SCxBN,SAAuBN,GACrC,GAAqB,kBAAVA,EACV,OAAOA,EAGR,GAAIA,GAASA,EAAMO,QAAS,CAC3B,GAA6B,kBAAlBP,EAAMO,QAChB,OAAOP,EAAMO,QACP,GAAqC,kBAA1BP,EAAMO,QAAQA,QAC/B,OAAOP,EAAMO,QAAQA,QACf,GAAIP,EAAMO,QAAQP,MACxB,OAAOA,EAAMO,QAAQP,MAIvB,MAAO,yBDUHQ,CAAcR,IAGfR,GACA,kBAACiB,EAAA,EAAD,CAAKC,OAAQ,CAAEC,IAAK,UACnB,kBAAC1B,EAAA,EAAD,KACC,kBAAC2B,EAAA,EAAD,CAAQT,KAAK,QAAQU,QAAStB,EAAcC,IAA5C,eAgBSO,I,23DEnCMe,E,uQACnB,WAAYb,GAAQ,IAAD,S,4FAAA,UACjB,cAAMA,IACDc,OAAS,KAFG,E,8CAIT,IAAD,EAC0BC,KAAKf,MAA9BgB,EADD,EACCA,WAAehB,EADhB,oBAGP,OAAO,kBAAC,SAAD,CACEiB,KAAK,UAELD,WAAYA,GACzB,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,EAAYhB,MAAO,CAAC,GAAK,UAAvD,SACA,kBAAC,SAAD,CAAQiB,KAAK,IAAID,WAAYA,GAA7B,0CAAoF,kBAAC,SAAD,CAAQC,KAAK,aAAaD,WAAYA,EAAYE,WAAW,KAA7D,SAApF,oFAEA,kBAAC,SAAD,CAAQD,KAAK,KAAKD,WAAYA,EAAYhB,MAAO,CAAC,GAAK,qBAAvD,6BACA,kBAAC,SAAD,CAAQiB,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYE,WAAW,MAAMlB,MAAO,CAAC,UAAY,gBAAjF,8EAE3C,kBAAC,SAAD,CAAQiB,KAAK,KAAKD,WAAYA,EAAYhB,MAAO,CAAC,GAAK,eAAvD,cACA,kBAAC,SAAD,CAAQiB,KAAK,KAAKD,WAAYA,EAAYhB,MAAO,CAAC,GAAK,gBAAvD,eACA,kBAAC,IAAD,CAAYmB,GAAIC,IAChB,kBAAC,SAAD,CAAQH,KAAK,KAAKD,WAAYA,EAAYhB,MAAO,CAAC,GAAK,aAAvD,YACA,kBAAC,IAAD,CAAYqB,WAAY,EAAGC,OAAQ,YAAaC,QAAS,CAACvB,MAAOe,KAAOA,KAAKf,MAAQA,EAAMwB,sBAAUC,uBAAmBL,QAAMT,aAC1H,kBAACS,EAAD,OAEJ,kBAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,8DAAiEC,QAAS,CAACvB,MAAOe,KAAOA,KAAKf,MAAQA,EAAMwB,sBAAUC,uBAAmBL,QAAMT,aAC9K,kBAACS,EAAD,CACIrB,MAAO,kCACPR,SAAO,W,8BA5ByBmC,IAAMF,W","file":"static/js/packages-unity-web-src-components-messaging-error.12c919c3.js","sourcesContent":["import { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { bool } from 'prop-types';\nimport { EmotionButton } from '../Button';\n\nconst ButtonSet = styled.div`\n    ${({ spread }) => spread && css`\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n\n        ${EmotionButton} {\n            &:not(:first-of-type) {\n                margin-left: auto!important;\n            }\n        }\n    `}\n\n    button + button,\n    a + a,\n    a + button,\n    button + a {\n        margin-left: 0.4rem;\n    }\n`;\n\n/**\n * Hack for docz and react-docgen\n */\nconst ButtonSetPropTypes = () => <div />;\nButtonSetPropTypes.propTypes = {\n\tspread: bool,\n};\nButtonSet.propTypes = ButtonSetPropTypes.propTypes;\nexport { ButtonSetPropTypes };\n\nexport default ButtonSet;\n\n","import React from 'react';\nimport { any, oneOfType, bool, string } from 'prop-types';\n\nimport Box from '../../scaffolding/Box';\nimport Typography from '../Typography';\nimport Notification from '../Notification';\nimport Button, { ButtonSet } from '../Buttons';\n\nimport errorToString from './errorToString';\n\nconst handleRefresh = (refresh) => (e) => {\n\te.preventDefault();\n\n\tif (typeof refresh === 'string') {\n\t\twindow.location.href = refresh;\n\t\treturn;\n\t}\n\n\twindow.location.reload();\n};\n\nconst FloatingError = ({ error, refresh = false, ...props }) => {\n\treturn (\n\t\t<Notification type=\"danger\" variant=\"block\" {...props}>\n\t\t\t<Typography color=\"white\">\n\t\t\t\t{errorToString(error)}\n\t\t\t</Typography>\n\n\t\t\t{refresh && (\n\t\t\t\t<Box margin={{ top: 'small' }}>\n\t\t\t\t\t<ButtonSet>\n\t\t\t\t\t\t<Button type=\"white\" onClick={handleRefresh(refresh)}>\n\t\t\t\t\t\t\tRefresh\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ButtonSet>\n\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</Notification>\n\t);\n};\n\nFloatingError.propTypes = {\n\terror: any,\n\trefresh: oneOfType([bool, string]),\n};\n\nexport default FloatingError;","export default function errorToString(error) {\n\tif (typeof error === 'string') {\n\t\treturn error;\n\t}\n\n\tif (error && error.message) {\n\t\tif (typeof error.message === 'string') {\n\t\t\treturn error.message;\n\t\t} else if (typeof error.message.message === 'string') {\n\t\t\treturn error.message.message;\n\t\t} else if (error.message.error) {\n\t\t\treturn error.message.error;\n\t\t}\n\t}\n\n\treturn 'Something bad happened';\n};","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Component } from 'react';\nimport { Playground, PropsTable } from 'docz';\nimport { mdiNotebookOutline } from '@mdi/js';\nimport Error from './Error';\nimport Button from '../Buttons';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"error\"}}>{`Error`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Show an Error message when there is an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Error`}</MDXTag>{` to display. You can optionally\nprovide a refresh or redirect link to the user.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"error--component\"}}>{`\\<Error /`}{`>`}{` Component`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import { Error } from '@clarityhub/unity-web/lib/components/Messaging';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"prop-types\"}}>{`Prop Types`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"error-props\"}}>{`Error Props`}</MDXTag>\n<PropsTable of={Error} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"examples\"}}>{`Examples`}</MDXTag>\n<Playground __position={1} __code={'<Error />'} __scope={{props: this ? this.props : props,Component,mdiNotebookOutline,Error,Button}}>\n    <Error />\n</Playground>\n<Playground __position={2} __code={'<Error error={\\'Any error message shows up here\\'} refresh />'} __scope={{props: this ? this.props : props,Component,mdiNotebookOutline,Error,Button}}>\n    <Error\n        error={'Any error message shows up here'}\n        refresh\n    />\n</Playground>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}