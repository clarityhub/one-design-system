{"version":3,"sources":["webpack:///./packages/unity-web/src/components/Buttons/ButtonGroup.js","webpack:///./packages/unity-web/src/components/Buttons/ButtonSet.js","webpack:///./packages/unity-web/src/components/Buttons/index.js","webpack:///./packages/unity-web/src/forms/Input/index.js","webpack:///./packages/unity-web/src/forms/InputGroup/InputGroup.js","webpack:///./packages/unity-web/src/forms/InputGroup/index.js","webpack:///./packages/unity-web/src/forms/InputGroupAppend/InputGroupAppend.js","webpack:///./packages/unity-web/src/forms/InputGroupAppend/InputGroupAppend.mdx","webpack:///./packages/unity-web/src/forms/Label/Label.js","webpack:///./packages/unity-web/src/forms/Label/index.js","webpack:///./packages/unity-web/src/forms/LabelledInput/LabelledInput.js","webpack:///./packages/unity-web/src/forms/LabelledInput/index.js"],"names":["ButtonGroup","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","colors","shadow","default","EmotionButton","muted","ButtonGroupItem","_ref","selected","rest","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_Button__WEBPACK_IMPORTED_MODULE_3__","assign","type","ButtonSet","spread","css","ButtonSetPropTypes","React","propTypes","_Button__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_ButtonSet__WEBPACK_IMPORTED_MODULE_1__","_Input__WEBPACK_IMPORTED_MODULE_0__","InputGroup","BorderEnd","_InputGroup__WEBPACK_IMPORTED_MODULE_0__","InputGroupAppend","MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","Component","_this$props","components","react__WEBPACK_IMPORTED_MODULE_0___default","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_2__","__position","__code","__scope","Button","LabelledInput","_forms_InputGroup__WEBPACK_IMPORTED_MODULE_5__","_forms_LabelledInput__WEBPACK_IMPORTED_MODULE_6__","label","readonly","value","_InputGroupAppend__WEBPACK_IMPORTED_MODULE_3__","_components_Buttons__WEBPACK_IMPORTED_MODULE_4__","outline","onClick","_onClick","apply","arguments","toString","_onClick2","of","Label","darkGray","variants","text","string","variant","concat","white","_ref2","error","danger","_Label__WEBPACK_IMPORTED_MODULE_0__","ControlledInput","styles","inputCount","inputId","String","defaultValue","optionalAttributes","_Input__WEBPACK_IMPORTED_MODULE_2__","_Label__WEBPACK_IMPORTED_MODULE_3__","htmlFor","_LabelledInput__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/packages-unity-web-src-forms-input-group-append-input-group-append.669df6a4.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport { bool } from 'prop-types';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nimport Button, { EmotionButton } from './Button';\n\nconst ButtonGroup = styled.div`\n    box-shadow: ${colors.shadow.default};\n    display: inline-block;\n\n    ${EmotionButton} {\n        box-shadow: none;\n    }\n\n    ${EmotionButton} + ${EmotionButton} {\n        border-left-width: 0;\n        border-left: 1px solid ${colors.muted.default};\n    }\n    ${EmotionButton}:not(:last-child):not(:first-of-type) {\n        border-radius: 0;\n    }\n    ${EmotionButton}:first-of-type {\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n    }\n    ${EmotionButton}:last-child {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n    }\n`;\n\nconst ButtonGroupItem = ({ selected, ...rest }) => (\n\t<Button type={selected ? 'primary' : 'default'} {...rest} />\n);\n\nButtonGroupItem.propTypes = {\n\tselected: bool,\n};\n\nexport { ButtonGroup, ButtonGroupItem };\n","import { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { bool } from 'prop-types';\nimport { EmotionButton } from './Button';\n\nconst ButtonSet = styled.div`\n    ${({ spread }) => spread && css`\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n\n        ${EmotionButton} {\n            &:not(:first-of-type) {\n                margin-left: auto!important;\n            }\n        }\n    `}\n\n    button + button,\n    a + a,\n    a + button,\n    button + a {\n        margin-left: 0.4rem;\n    }\n`;\n\n/**\n * Hack for docz and react-docgen\n */\nconst ButtonSetPropTypes = () => <div />;\nButtonSetPropTypes.propTypes = {\n\tspread: bool,\n};\nButtonSet.propTypes = ButtonSetPropTypes.propTypes;\nexport { ButtonSetPropTypes };\n\nexport default ButtonSet;\n\n","export { default } from './Button';\nexport { default as ButtonSet } from './ButtonSet';\nexport { ButtonGroup, ButtonGroupItem } from './ButtonGroup';\n","export { default } from './Input';\n","import styled from '@emotion/styled';\nimport { BorderEnd } from '../Input/Input';\n\nconst InputGroup = styled.div`\n    display: flex;\n    padding-top: 1rem;\n    position: relative;\n\n    & + & {\n        margin-top: 1rem;\n    }\n\n    & > :not(:last-child) ${BorderEnd} {\n        border-top-right-radius: 0 !important;\n        border-bottom-right-radius: 0 !important;\n    }\n`;\n\nexport default InputGroup;\n","export { default } from './InputGroup';\n","import styled from '@emotion/styled';\n\nimport { EmotionButton } from '../../components/Buttons/Button';\n\nconst InputGroupAppend = styled.div`\n    display: flex;\n\n    ${EmotionButton} {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n        margin-left: -1px;\n    }\n\n    &:not(:last-child) {\n        ${EmotionButton} {\n            border-top-right-radius: 0;\n            border-bottom-right-radius: 0;\n        }\n    }\n`;\n\nexport default InputGroupAppend;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport InputGroupAppend from './InputGroupAppend';\nimport Button from '../../components/Buttons';\nimport InputGroup from '../../forms/InputGroup';\nimport LabelledInput from '../../forms/LabelledInput';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"inputgroupappend\"}}>{`InputGroupAppend`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import InputGroupAppend from '@clarityhub/unity-web/lib/forms/InputGroupAppend';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"inputgroupappend-example\"}}>{`InputGroupAppend Example`}</MDXTag>\n<Playground __position={0} __code={'<InputGroup>\\n  <LabelledInput label=\\\"Access Key ID\\\" readonly value={\\'123456\\'} />\\n  <InputGroupAppend>\\n    <Button outline type=\\\"primary\\\" onClick={() => onClick(\\'123456\\')}>\\n      Button\\n    </Button>\\n  </InputGroupAppend>\\n  <InputGroupAppend>\\n    <Button outline type=\\\"primary\\\" onClick={() => onClick(\\'123456\\')}>\\n      Button\\n    </Button>\\n  </InputGroupAppend>\\n</InputGroup>'} __scope={{props: this ? this.props : props,InputGroupAppend,Button,InputGroup,LabelledInput}}>\n    <InputGroup>\n        <LabelledInput\n            label=\"Access Key ID\"\n            readonly\n            value={\"123456\"}\n        />\n        <InputGroupAppend>\n            <Button\n                outline\n                type=\"primary\"\n                onClick={() => onClick(\"123456\")}\n            >\n                Button\n            </Button>\n        </InputGroupAppend>\n        <InputGroupAppend>\n            <Button\n                outline\n                type=\"primary\"\n                onClick={() => onClick(\"123456\")}\n            >\n                Button\n            </Button>\n        </InputGroupAppend>\n    </InputGroup>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"prop-types\"}}>{`Prop Types`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The following props are available for the CopyToClipboard component.`}</MDXTag>\n<PropsTable of={InputGroupAppend} />\n           </MDXTag>\n  }\n}\n  ","import { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { variants } from '@clarityhub/unity-core/lib/typography';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nconst Label = styled.label`\n    color: ${colors.darkGray.default};\n    cursor: text;\n    display: block;\n    flex: 1;\n    font-size: 0.9rem;\n    line-height: 1.2rem;\n    left: 0;\n    padding: 0 0.4rem;\n    position: absolute;\n    text-align: left;\n    top: 0;\n    transition: 0.2s ease-out;\n\n    ${variants.text.string}\n\n    ${({ variant }) => {\n\t\tswitch (variant) {\n\t\tcase 'white':\n\t\t\treturn `\n                color: ${colors.white.default};\n                `;\n\t\tdefault:\n\t\t\treturn ``;\n\t\t}\n\t}}\n\n    ${({ error }) => error && css`\n        color ${colors.danger.default};\n    `}\n\n`;\n\nexport default Label;\n","export { default } from './Label';\n","import React, { Component } from 'react';\nimport { string } from 'prop-types';\nimport styled from '@emotion/styled';\n\nimport Input from '../Input';\nimport Label from '../Label';\n\nconst ControlledInput = styled.div`\n    width: 100%;\n`;\n\nlet inputCount = 0;\n\nexport default class LabelledInput extends Component {\n    static propTypes = {\n    \tdefaultValue: string,\n    \tlabel: string.isRequired,\n    \tvalue: string,\n    }\n\n    static defaultProps = {\n    \ttype: 'text',\n    }\n\n\n    constructor(props) {\n    \tsuper(props);\n\n    \tthis.inputId = `input-${String(inputCount)}`;\n\n    \tinputCount++;\n    }\n\n    render() {\n    \tconst { label, error, value, defaultValue, ...rest } = this.props;\n\n    \tconst optionalAttributes = {};\n\n    \tif (defaultValue || value) {\n    \t\toptionalAttributes['data-not-empty'] = true;\n    \t}\n\n    \treturn (\n    \t\t<ControlledInput>\n    \t\t\t<Input\n    \t\t\t\t{...rest}\n\n    \t\t\t\tid={this.inputId}\n    \t\t\t\tdefaultValue={defaultValue}\n    \t\t\t\terror={error}\n    \t\t\t\tvalue={value}\n\n    \t\t\t\t{...optionalAttributes}\n\n    \t\t\t\tlabel={label}\n    \t\t\t>\n    \t\t\t\t<Label\n    \t\t\t\t\thtmlFor={this.inputId}\n    \t\t\t\t\terror={error}\n    \t\t\t\t>\n    \t\t\t\t\t{label}\n    \t\t\t\t</Label>\n    \t\t\t</Input>\n    \t\t</ControlledInput>\n    \t);\n    }\n}\n","export { default } from './LabelledInput';\n"],"sourceRoot":""}