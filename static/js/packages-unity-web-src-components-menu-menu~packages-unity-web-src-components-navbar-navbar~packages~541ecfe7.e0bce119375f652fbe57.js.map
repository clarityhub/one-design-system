{"version":3,"sources":["webpack:///./packages/unity-web/src/components/Buttons/ButtonGroup.js","webpack:///./packages/unity-web/src/components/Buttons/ButtonSet.js","webpack:///./packages/unity-web/src/components/Buttons/index.js","webpack:///./packages/unity-web/src/utilities/position.js","webpack:///./packages/unity-web/src/components/Menu/MenuPopover.js","webpack:///./packages/unity-web/src/components/Menu/MenuPortal.js","webpack:///./packages/unity-web/src/components/Menu/Menu.js","webpack:///./packages/unity-web/src/components/Menu/MenuItem.js","webpack:///./packages/unity-web/src/components/Menu/MenuItemDivider.js","webpack:///./packages/unity-web/src/components/Menu/index.js"],"names":["ButtonGroup","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","colors","shadow","default","EmotionButton","muted","ButtonGroupItem","_ref","selected","rest","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_Button__WEBPACK_IMPORTED_MODULE_3__","assign","type","ButtonSet","spread","css","propTypes","bool","_Button__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_ButtonSet__WEBPACK_IMPORTED_MODULE_1__","offset","el","rect","getBoundingClientRect","scrollLeft","window","pageXOffset","document","documentElement","scrollTop","pageYOffset","styles","defaultView","getComputedStyle","marginTop","parseFloat","getPropertyValue","marginBottom","top","left","height","outerHeight","width","bottom","right","noOverflow","position","w","innerWidth","newPosition","_objectSpread","menuPopoverWrapper","white","borders","borderRadius","rem","variants","button","string","Arrow","styled_base_browser_esm","MenuPopover","arrow","props","pos","MenuPopover_objectSpread","menuPosition","targetPos","Component","this","getPosition","popover","setState","getArrowPosition","nextProps","_this2","_this$state","state","_this$props","items","innerRef","core_browser_esm","ref","style","concat","map","item","i","key","React","forwardRef","MenuPopover_MenuPopover","menuPortalId","MenuPortal","_this","MenuPortal_classCallCheck","MenuPortal_possibleConstructorReturn","MenuPortal_getPrototypeOf","call","id","body","appendChild","removeChild","ReactDOM","createPortal","children","MenuWrapper","name","MenuTarget","Menu","open","e","menu","doneOpening","contains","close","setTimeout","_onClickOutside","onClickOutside","bind","_onKeyUp","onKeyUp","addEventListener","removeEventListener","MenuPortal_MenuPortal","Menu_MenuPopover","MenuItem","Buttons","text","MenuItemDivider","gray","Menu_Menu","Menu_MenuItem","Menu_MenuItemDivider"],"mappings":"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","file":"static/js/packages-unity-web-src-components-menu-menu~packages-unity-web-src-components-navbar-navbar~packages~541ecfe7.d27692fe.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport { bool } from 'prop-types';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nimport Button, { EmotionButton } from './Button';\n\nconst ButtonGroup = styled.div`\n    box-shadow: ${colors.shadow.default};\n    display: inline-block;\n\n    ${EmotionButton} {\n        box-shadow: none;\n    }\n\n    ${EmotionButton} + ${EmotionButton} {\n        border-left-width: 0;\n        border-left: 1px solid ${colors.muted.default};\n    }\n    ${EmotionButton}:not(:last-child):not(:first-of-type) {\n        border-radius: 0;\n    }\n    ${EmotionButton}:first-of-type {\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n    }\n    ${EmotionButton}:last-child {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n    }\n`;\n\nconst ButtonGroupItem = ({ selected, ...rest }) => (\n\t<Button type={selected ? 'primary' : 'default'} {...rest} />\n);\n\nButtonGroupItem.propTypes = {\n\tselected: bool,\n};\n\nexport { ButtonGroup, ButtonGroupItem };","import { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { bool } from 'prop-types';\nimport { EmotionButton } from './Button';\n\nconst ButtonSet = styled.div`\n    ${({ spread }) => spread && css`\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n\n        ${EmotionButton} {\n            &:not(:first-of-type) {\n                margin-left: auto!important;\n            }\n        }\n    `}\n\n    button + button,\n    a + a,\n    a + button,\n    button + a {\n        margin-left: 0.4rem;\n    }\n`;\n\nButtonSet.propTypes = {\n\tspread: bool,\n};\n\nexport default ButtonSet;\n\n","export { default } from './Button';\nexport { default as ButtonSet } from './ButtonSet';\nexport { ButtonGroup, ButtonGroupItem } from './ButtonGroup';\n","/**\n * Given an element, get the top, left, bottom, right, height, and width.\n */\nexport const offset = (el) => {\n\tconst rect = el.getBoundingClientRect();\n\tconst scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\tconst scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n\tconst styles = document.defaultView.getComputedStyle(el, '');\n\tconst marginTop = parseFloat(styles.getPropertyValue('margin-top'));\n\tconst marginBottom = parseFloat(styles.getPropertyValue('margin-bottom'));\n\n\treturn {\n\t\ttop: rect.top + scrollTop,\n\t\tleft: rect.left + scrollLeft,\n\t\theight: rect.height,\n\t\touterHeight: marginTop + marginBottom + rect.height,\n\t\twidth: rect.width,\n\t\tbottom: rect.top + scrollTop + rect.height,\n\t\tright: rect.left + scrollLeft + rect.width,\n\t};\n};\n\n/**\n * Given a position, and an element, make sure that\n * the element at that position will not overflow with\n * the window.\n */\nexport const noOverflow = (position, el) => {\n\tconst w = window.innerWidth;\n\tconst rect = el.getBoundingClientRect();\n\tconst newPosition = { ...position };\n\n\tif (position.left + rect.width > w) {\n\t\t// snap to right\n\t\tnewPosition.left = position.right - rect.width;\n\t}\n\n\treturn newPosition;\n};","/** @jsx jsx */\n\nimport React, { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { arrayOf, node } from 'prop-types';\nimport { variants } from '@clarityhub/unity-core/lib/typography';\nimport borders from '@clarityhub/unity-core/lib/borders';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nimport { offset, noOverflow } from '../../utilities/position';\n\nconst menuPopoverWrapper = () => css`\n    background-color: ${colors.white.default};\n    border-radius: ${borders.borderRadius.rem}rem;\n    box-shadow: ${colors.shadow.default};\n    position: absolute;\n    z-index: 99999999;\n    margin-top: 1rem;\n    min-width: 13rem;\n    padding: 0.4rem 0;\n\n    ${variants.button.string}\n\n    font-size: 1rem;\n\n    ul {\n        list-style: none;\n        margin: 0;\n        padding: 0;\n    }\n\n    li {\n        margin: 0;\n        padding: 0;\n    }\n`;\n\nconst Arrow = styled.div`\n    position: absolute;\n    width: 0; \n    height: 0; \n    border-left: 0.5rem solid transparent;\n    border-right: 0.5rem solid transparent;\n    border-bottom: 0.5rem solid ${colors.white.default};\n    top: -0.5rem;\n    transform: translateX(-50%);\n`;\n\nclass MenuPopover extends Component {\n    static propTypes = {\n    \titems: arrayOf(node).isRequired,\n    \ttarget: node,\n    }\n\n    state = {\n    \tposition: {},\n    \tarrow: {},\n    }\n\n    componentDidMount() {\n    \tconst position = this.getPosition(this.props, this.popover);\n    \tthis.setState({\n    \t\tposition,\n    \t\tarrow: this.getArrowPosition(this.props, position),\n    \t});\n    }\n\n    componentWillUpdate(nextProps) {\n    \tif (nextProps.left !== this.props.left ||\n            nextProps.target !== this.props.target) {\n            \n    \t\tconst position = this.getPosition(nextProps, this.popover);\n    \t\tthis.setState({\n    \t\t\tposition,\n    \t\t\tarrow: this.getArrowPosition(nextProps, position),\n    \t\t});\n    \t}\n    }\n\n    getPosition = (props, el) => {\n    \tlet pos = { ...props.position };\n    \tif (el) {\n    \t\t// Try to center\n    \t\tpos.left = pos.left - (offset(el).width / 2) + (offset(props.target).width / 2);\n    \t}\n\n    \t// Push over if it would go off the page\n    \treturn noOverflow(pos, el);\n    }\n\n    getArrowPosition = (props, menuPosition) => {\n    \tif (props.target) {\n    \t\tconst targetPos = offset(props.target);\n\n    \t\tconst left = targetPos.left - menuPosition.left + (targetPos.width / 2);\n\n    \t\treturn {\n    \t\t\ttop: 0,\n    \t\t\tleft,\n    \t\t};\n    \t} else {\n    \t\treturn {\n    \t\t\ttop: 0,\n    \t\t\tleft: 0,\n    \t\t};\n    \t}\n    }\n\n    render() {\n    \tconst { position, arrow } = this.state;\n    \tconst { items, innerRef } = this.props;\n\n    \treturn (\n    \t\t<div\n    \t\t\tref={(ref) => { this.popover = ref; innerRef(ref);}}\n    \t\t\tcss={menuPopoverWrapper}\n    \t\t\tstyle={{\n    \t\t\t\ttop: `${position.bottom || 0}px`,\n    \t\t\t\tleft: `${position.left || 0}px`,\n    \t\t\t}}\n    \t\t>\n    \t\t\t<Arrow\n    \t\t\t\tstyle={{\n    \t\t\t\t\tleft: `${arrow.left || 0}px`,\n    \t\t\t\t}}\n    \t\t\t/>\n    \t\t\t<ul>\n    \t\t\t\t{items.map((item, i) => (\n    \t\t\t\t\t<li key={i}>\n    \t\t\t\t\t\t{item}\n    \t\t\t\t\t</li>\n    \t\t\t\t))}\n    \t\t\t</ul>\n    \t\t</div>\n    \t);\n    }\n}\n\nexport default React.forwardRef((props, ref) => <MenuPopover innerRef={ref} {...props} />);\n","import { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nlet menuPortalId = 0;\n\nexport default class MenuPortal extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.el = document.createElement('div');\n\t\tthis.el.id = `menu-portal-${menuPortalId++}`;\n\t\tdocument.body.appendChild(this.el);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.body.removeChild(this.el);\n\t}\n\n\trender() {\n\t\treturn ReactDOM.createPortal(\n\t\t\tthis.props.children,\n\t\t\tthis.el\n\t\t);\n\t}\n}","/** @jsx jsx */\n\nimport { Component } from 'react';\nimport { func, node, arrayOf } from 'prop-types';\nimport styled from '@emotion/styled';\nimport { jsx } from '@emotion/core';\n\nimport { offset } from '../../utilities/position';\nimport MenuPopover from './MenuPopover';\nimport MenuPortal from './MenuPortal';\n\nconst MenuWrapper = styled.div`\n    position: relative;\n`;\n\nconst MenuTarget = styled.div`\n    position: relative;\n`;\n\n/**\n * When you click on the {children} wrapper,\n * a menu will appear below the {children}'s position.\n * \n * The menu's position will remain within the window.\n * \n * The menu will close when you click outside of the menu\n */\nexport default class Menu extends Component {\n    static propTypes = {\n    \tchildren: func.isRequired,\n    \titems: arrayOf(node).isRequired,\n    }\n\n    state = {\n    \topen: false,\n    }\n\n    componentDidMount() {\n    \tthis._onClickOutside = this.onClickOutside.bind(this);\n    \tthis._onKeyUp = this.onKeyUp.bind(this);\n\n    \tdocument.addEventListener('click', this._onClickOutside);\n    \tdocument.addEventListener('keyup', this._onKeyUp);\n    }\n\n    componentWillUnmount() {\n    \tdocument.removeEventListener('click', this._onClickOutside);\n    \tdocument.removeEventListener('keyup', this._onKeyUp);\n    }\n\n    onClickOutside = (e) => {\n    \tif (this.menu && this.doneOpening) {        \n    \t\tif (this.state.open) {\n    \t\t\tconst target = e.target;\n    \t\t\t// check if target is within (or is) the menu\n    \t\t\tconst clickOutsideMenu = this.menu !== target && !this.menu.contains(target);\n    \t\t\tif (clickOutsideMenu) {\n    \t\t\t\tthis.close();\n    \t\t\t}\n    \t\t}\n    \t}\n    }\n\n    onKeyUp = (e) => {\n    \tif (this.state.open) {\n    \t\tif (e.key === 'Escape') {\n    \t\t\tthis.close();\n    \t\t}\n    \t}\n    }\n\n    open = () => {\n    \tthis.doneOpening = false;\n\n    \tlet position = {\n    \t\ttop: 0,\n    \t\tleft: 0,\n    \t};\n\n    \tif (this.target) {\n    \t\tposition = offset(this.target);\n    \t}\n\n    \tthis.setState(({ open }) => ({\n    \t\topen: !open,\n    \t\tposition,\n    \t}), () => {\n    \t\tsetTimeout(() => {\n    \t\t\tthis.doneOpening = true;\n    \t\t}, 100);\n    \t});\n    }\n\n    close = () => {\n    \tthis.setState({\n    \t\topen: false,\n    \t});\n    }\n\n    render() {\n    \tconst { children, items } = this.props;\n    \tconst { open, position } = this.state;\n\n    \treturn (\n    \t\t<MenuWrapper>\n    \t\t\t{open && (\n    \t\t\t\t<MenuPortal>\n    \t\t\t\t\t<MenuPopover\n    \t\t\t\t\t\tref={ref => this.menu = ref}\n    \t\t\t\t\t\titems={items}\n    \t\t\t\t\t\tposition={position}\n    \t\t\t\t\t\ttarget={this.target}\n    \t\t\t\t\t/>\n    \t\t\t\t</MenuPortal>\n    \t\t\t)}\n\n    \t\t\t<MenuTarget ref={ref => this.target = ref}>\n    \t\t\t\t{children({\n    \t\t\t\t\topen: this.open,\n    \t\t\t\t})}\n    \t\t\t</MenuTarget>\n    \t\t</MenuWrapper>\n    \t);\n    }\n}\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nimport Button from '../Buttons';\n\nconst MenuItem = props => (\n\t<Button\n\t\ttext\n\t\tcss={css`\n            border-radius: 0;\n            text-align: left;\n            text-transform: none;\n            min-width: 150px;\n            width: 100%;\n\n            &:hover {\n                background-color: ${colors.muted.default};\n            }\n        `}\n\t\t{...props}\n\t/>\n);\n\nexport default MenuItem;\n","import styled from '@emotion/styled';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nconst MenuItemDivider = styled.hr`\n    width: 100%;\n    height: 0;\n    border-top: 1px solid ${colors.gray.default};\n`;\n\nexport default MenuItemDivider;\n","export { default as Menu } from './Menu';\nexport { default as MenuItem } from './MenuItem';\nexport { default as MenuItemDivider } from './MenuItemDivider';\n\n"],"sourceRoot":""}