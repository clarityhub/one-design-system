{"version":3,"sources":["webpack:///./packages/unity-web/src/forms/Input/Input.js"],"names":["baseInput","error","css","variants","text","string","colors","gray","desaturate","lighten","danger","Input","borders","borderRadius","rem","prefixIcon","iconWidth","variant","white","muted","primary","BorderStart","BorderLabel","BorderEnd","FakeLabel","BorderWrapper","paddingTop","darkGray","FloatingInput","inputType","InputWrapper","PrefixIcon","StyledInput","children","height","targetRef","label","rest","style","Boolean","ref"],"mappings":"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","file":"static/js/packages-unity-web-src-forms-index~packages-unity-web-src-forms-input-group-append-input-group-appen~9bfc8e39.99cbfed0.js","sourcesContent":["import React from 'react';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { variants } from '@clarityhub/unity-core/lib/typography';\nimport borders from '@clarityhub/unity-core/lib/borders';\nimport colors from '@clarityhub/unity-core/lib/colors';\nimport { lighten, desaturate } from '@clarityhub/unity-core/lib/utilities/color';\nimport {\n\toneOfType, node,\n\tfunc,\n\tany,\n\tnumber,\n\tstring } from 'prop-types';\n\nconst labelPadding = 0.3;\nconst inputHeight = 2.670;\nconst paddingLeft = 0.79;\nconst paddingTop = 0.65;\nconst iconWidth = 2;\n\nconst baseInput = ({ error }) => css`\n    box-sizing: border-box;\n    display: inline-block;\n    font-size: 1rem;\n    line-height: 1.2rem;\n    margin-bottom: 0;\n    /* min-width: 250px; */\n    min-height: ${inputHeight}rem;\n    padding: 0.625rem 1rem;\n    transition: all 0.2s ease-in;\n    transition-property: border-bottom-width, border-bottom-color, color, margin-bottom;\n    width: 100%;\n    resize: vertical;\n\n    ${variants.text.string}\n\n    &:active,\n    &:focus {\n        outline: 0;\n    }\n\n    &:disabled {\n        cursor: not-allowed;\n    }\n\n    &::placeholder,\n    &::-webkit-datetime-edit-month-field,\n    &::-webkit-datetime-edit-day-field,\n    &::-webkit-datetime-edit-year-field {\n        color: ${colors.gray.default};\n    }\n\n    &[type=date] {\n        &::-webkit-inner-spin-button {\n            height: 0.8rem\n        }\n\n        &::-webkit-calendar-picker-indicator {\n            height: 0.8rem;\n        }\n    }\n\n    ${error && css`\n        background-color: ${desaturate(lighten(colors.danger.default, 0.85), 0.4)};\n        outline: 0;\n    `}\n`;\n\nconst Input = styled.input`\n    border: 1px solid ${colors.gray.default};\n    border-radius: ${borders.borderRadius.rem}rem;\n\n    ${({ error }) => baseInput({ error })}\n\n    ${({ prefixIcon }) => prefixIcon && css`\n        padding-left: ${iconWidth + 0.5}rem;\n    `}\n\n    ${({ variant }) => {\n\t\tswitch (variant) {\n\t\tcase 'white':\n\t\t\treturn `\n                    background-color: ${colors.white.default};\n                    border: 1px solid ${colors.white.default};\n                `;\n\t\tdefault:\n\t\t\treturn `\n                `;\n\t\t}\n\t}} \n\n    &:disabled {\n        background-color: ${colors.muted.default};\n    }\n\n    &:active,\n    &:focus {\n        border-color: ${colors.primary.default};\n    }\n\n    ${({ error }) => error && css`\n        border-color: ${colors.danger.default};\n    `}\n`;\n\nconst BorderStart = styled.div`\n    border-bottom: 1px solid ${colors.gray.default};\n    border-top: 1px solid ${colors.gray.default};\n    border-left: 1px solid ${colors.gray.default};\n    border-radius: ${borders.borderRadius.rem}rem 0 0 ${borders.borderRadius.rem}rem;\n\n    width: ${paddingLeft}rem;\n    min-height: 100%;\n`;\n\nconst BorderLabel = styled.div`\n    border-bottom: 1px solid ${colors.gray.default};\n    \n    min-height: 100%;\n    width: 0;\n\n    ${({ variant }) => {\n\t\tswitch (variant) {\n\t\tcase 'white':\n\t\t\treturn `\n                    border-top: 1px solid ${colors.white.default};\n                    border-bottom: 1px solid ${colors.white.default};\n                `;\n\t\tdefault:\n\t\t\treturn `\n                    border-top: 1px solid transparent !important;\n                `;\n\t\t}\n\t}} \n\n    > span {\n      color: transparent;\n    }\n`;\n\nconst BorderEnd = styled.div`\n    border-bottom: 1px solid ${colors.gray.default};\n    border-top: 1px solid ${colors.gray.default};\n    border-right: 1px solid ${colors.gray.default};\n    border-radius: 0 ${borders.borderRadius.rem}rem ${borders.borderRadius.rem}rem 0;\n\n    flex: 1;\n    min-height: 100%;\n`;\n\nconst FakeLabel = styled.span`\n    ${variants.text.string}\n\n    padding: 0 ${labelPadding}rem;\n`;\n\nconst BorderWrapper = styled.div`\n    box-sizing: border-box;\n\n    & * {\n        box-sizing: border-box;\n    }\n\n    display: flex;\n    position: relative;\n    height: 100%;\n\n    ${({ error }) => error && css`\n        ${BorderStart},\n        ${BorderLabel},\n        ${BorderEnd} {\n            border-color: ${colors.danger.default};\n            background-color: ${desaturate(lighten(colors.danger.default, 0.85), 0.4)};\n            outline: 0;\n        }\n    `}\n\n    label {\n        font-size: 1rem;\n        pointer-events: none;\n        text-align: initial;\n        padding: 0 ${labelPadding}rem;\n        padding-left: ${({ prefixIcon }) => prefixIcon ? iconWidth : labelPadding}rem;\n        top: ${paddingTop + 0.1}rem;\n        left: ${paddingLeft}rem;\n    }\n\n    textarea:disabled,\n    input:disabled {\n        & ~ ${BorderStart},\n        & ~ ${BorderLabel},\n        & ~ ${BorderEnd} {\n           background-color: ${colors.muted.default};\n        }\n    }\n\n    textarea:focus,\n    textarea:active,\n    input:focus,\n    input:active {\n        & ~ ${BorderStart},\n        & ~ ${BorderLabel},\n        & ~ ${BorderEnd} {\n            border-color: ${colors.primary.default};\n        }\n    }\n\n    textarea:placeholder-shown,\n    textarea[data-not-empty],\n    textarea:focus,\n    input:placeholder-shown,\n    input[data-not-empty],\n    input:focus {\n        & ~ ${BorderLabel} {\n            width: auto;\n        }\n\n        & ~ label,\n        & ~ * label {\n            color: ${colors.darkGray.default};\n            font-size: 0.8rem;\n            top: -0.5rem;\n            padding-left: ${labelPadding}rem;\n        }\n\n        & ~ * ${FakeLabel} {\n            font-size: 0.8rem;\n        }\n    }\n\n    ${({ variant }) => {\n\t\tswitch (variant) {\n\t\tcase 'white':\n\t\t\treturn css`\n                    ${BorderStart},\n                    ${BorderLabel},\n                    ${BorderEnd} {\n                        border-color: ${colors.white.default};\n                        background-color: ${colors.white.default};\n                        outline: 0;\n                    }\n\n                    textarea:placeholder-shown,\n                    textarea[data-not-empty],\n                    textarea:focus,\n                    input:placeholder-shown,\n                    input[data-not-empty],\n                    input:focus {\n                        & ~ label,\n                        & ~ * label {\n                            color: ${colors.white.default};\n                            top: -1.2rem;\n                            left: 0.5rem;\n                        }\n                    }\n                `;\n\t\tdefault:\n\t\t\treturn `\n                `;\n\t\t}\n\t}} \n`;\n\nconst FloatingInput = styled.input`\n    border: 1px solid transparent;\n    position: absolute;\n\n    ${({ error }) => baseInput({ error })}\n\n    ${({ prefixIcon }) => prefixIcon && css`\n        padding-left: ${iconWidth}rem;\n    `}\n\n    ${({ variant }) => {\n\t\tswitch (variant) {\n\t\tcase 'white':\n\t\t\treturn `\n                background-color: ${colors.white.default};\n            `;\n\t\tdefault:\n\t\t\treturn ``;\n\t\t}\n\t}}\n\n    background-color: transparent;\n    padding-bottom: 0;\n    padding-top: 0;\n    height: calc(100% - 1.25rem);\n\n    ${({ inputType }) => {\n\t\tif (inputType === 'textarea') {\n\t\t\treturn css`\n                margin: 0.625rem 0;\n            `;\n\t\t} else {\n\t\t\treturn css`\n                margin: 0;\n            `;\n\t\t}\n\t}}\n`;\n\nconst InputWrapper = styled.div`\n    position: relative;\n`;\n\nconst PrefixIcon = styled.div`\n    position: absolute;\n    left: 0;\n    top: 0;\n    margin-top: ${paddingTop}rem;\n    margin-left: ${paddingTop}rem;\n`;\n\nconst StyledInput = ({\n\tchildren, \n\terror = false,\n\theight,\n\ttargetRef,\n\tlabel,\n\tinputType = 'input',\n\tprefixIcon,\n\tvariant,\n\t...rest\n}) => {\n\tif (!children) {\n\t\treturn (\n\t\t\t<InputWrapper>\n\t\t\t\t{prefixIcon && (\n\t\t\t\t\t<PrefixIcon>\n\t\t\t\t\t\t{prefixIcon}\n\t\t\t\t\t</PrefixIcon>\n\n\t\t\t\t)}\n\t\t\t\t<Input\n\t\t\t\t\tprefixIcon={Boolean(prefixIcon)}\n\t\t\t\t\tvariant={variant}\n\t\t\t\t\terror={error}\n\t\t\t\t\t{...rest}\n\t\t\t\t\tref={targetRef}\n\t\t\t\t/>\n\t\t\t</InputWrapper>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div style={{ height: `${height || `${inputHeight}rem`}`}}>\n\t\t\t<BorderWrapper error={error} variant={variant} prefixIcon={Boolean(prefixIcon)}>\n\t\t\t\t<FloatingInput prefixIcon={prefixIcon} variant={variant} inputType={inputType} {...rest} ref={targetRef} />\n\t\t\t\t<BorderStart />\n\t\t\t\t<BorderLabel variant={variant}>\n\t\t\t\t\t{prefixIcon && (\n\t\t\t\t\t\t<PrefixIcon>\n\t\t\t\t\t\t\t{prefixIcon}\n\t\t\t\t\t\t</PrefixIcon>\n\n\t\t\t\t\t)}\n\t\t\t\t\t<FakeLabel>{label}</FakeLabel>\n\t\t\t\t\t{children}\n\t\t\t\t</BorderLabel>\n\t\t\t\t<BorderEnd />\n\t\t\t</BorderWrapper>\n\t\t</div>\n\t);\n};\n\nStyledInput.propTypes = {\n\tchildren: oneOfType([node, func]),\n\terror: any,\n\theight: number,\n\tinputType: string,\n\tlabel: string,\n\tprefixIcon: node,\n\ttargetRef: func,\n\tvariant: string,\n};\n\nexport default StyledInput;\nexport { BorderEnd };"],"sourceRoot":""}