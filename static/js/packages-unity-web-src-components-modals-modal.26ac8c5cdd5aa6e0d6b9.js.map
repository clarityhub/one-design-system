{"version":3,"sources":["webpack:///./packages/unity-core/lib/spacing.js","webpack:///./packages/unity-web/src/components/ButtonSet/ButtonSet.js","webpack:///./packages/unity-web/src/components/Card/CardActions.js","webpack:///./packages/unity-web/src/components/Card/CardFooter.js","webpack:///./packages/unity-web/src/components/Modals/Modal.js","webpack:///./packages/unity-web/src/theme/zIndexes.js","webpack:///./packages/unity-web/src/components/Modals/Modal.mdx","webpack:///./packages/unity-web/src/components/Modals/ModalPortal.js","webpack:///./packages/unity-web/src/scaffolding/Space/Space.js"],"names":["Object","defineProperty","exports","value","xsmall","small","medium","large","xlarge","ButtonSet","Space","spread","css","EmotionButton","ButtonSetPropTypes","propTypes","CardActions","CardFooter","variants","text","string","colors","dark","muted","borders","borderRadius","rem","ModalWrapper","shouldForwardProp","prop","isPropValid","includes","opacify","open","ModalDialog","size","Card","Modal","delayedOpen","_onClickOutside","onClickOutside","bind","_onKeyUp","onKeyUp","document","addEventListener","window","checkOpen","immediate","openTimer","clearTimeout","removeEventListener","setState","closeTimer","setTimeout","delayedClose","props","state","doneOpening","e","modal","target","contains","close","reason","key","onClose","this","setup","prevProps","teardown","center","children","type","cardProps","noPortal","ModalPortal","ref","Component","MDXContent","layout","components","name","parentName","of","__position","__code","__scope","Fragment","Button","Typography","CardHeader","CardBody","ModalExample","onClick","noMargin","noPadding","color","React","ready","el","createElement","body","appendChild","removeChild","ReactDOM","createPortal","direction","mappedSize","spacing","remMapper","SpaceProps","defaultProps"],"mappings":"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","file":"static/js/packages-unity-web-src-components-modals-modal.7d7af948.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = {\n  xsmall: 0.5,\n  small: 1,\n  medium: 2,\n  large: 4,\n  xlarge: 8\n};\nexports[\"default\"] = _default;","import { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { bool } from 'prop-types';\nimport { EmotionButton } from '../Button';\nimport Space from '../../scaffolding/Space';\n\nconst ButtonSet = styled(Space)`\n    ${({ spread }) => spread && css`\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n\n        ${EmotionButton} {\n            &:not(:first-of-type) {\n                margin-left: auto!important;\n            }\n        }\n    `}\n\n`;\n\n/**\n * Hack for docz and react-docgen\n */\nconst ButtonSetPropTypes = () => <div />;\nButtonSetPropTypes.propTypes = {\n\tspread: bool,\n};\nButtonSet.propTypes = ButtonSetPropTypes.propTypes;\nexport { ButtonSetPropTypes };\n\nexport default ButtonSet;\n\n","import styled from '@emotion/styled';\n\nconst CardActions = styled.div`\n    margin-top: 1rem;\n`;\n\nexport default CardActions;\n","import styled from '@emotion/styled';\nimport { variants } from '@clarityhub/unity-core/lib/typography';\nimport borders from '@clarityhub/unity-core/lib/borders';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nconst CardFooter = styled.div`\n    ${variants.text.string}\n\n    color: ${colors.dark.default};\n\n    padding: .75rem 1.25rem;\n    border-top: 1px solid ${colors.muted.default};\n\n    &:last-child {\n        border-radius: 0 0 calc(${borders.borderRadius.rem}rem - 1px) calc(${borders.borderRadius.rem}rem - 1px);\n    }\n`;\n\nexport default CardFooter;\n","import React, { Component } from 'react';\nimport { node, bool, func, oneOf, string } from 'prop-types';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { opacify } from '@clarityhub/unity-core/lib/utilities/color';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nimport zIndex from '../../theme/zIndexes';\nimport Card from '../Card';\nimport ModalPortal from './ModalPortal';\n\n// XXX refactor animations to be reuseable\n\nconst ModalWrapper = styled('div', {\n\tshouldForwardProp: prop => isPropValid(prop) && !['open'].includes(prop),\n})`\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: ${opacify(colors.dark.default, 0.6)};\n    display: flex;\n    z-index: ${zIndex.modal};\n\n    ${({ open }) => !open && css`\n        display: none;\n    `}\n`;\n\nconst ModalDialog = styled('div', {\n\tshouldForwardProp: prop => isPropValid(prop) && ![\n\t\t'onClose',\n\t\t'open',\n\t\t'size',\n\t].includes(prop),\n})`\n    transition: all .3s ease-out;\n    transition-property: opacity, transform;\n    transform: translate(0, -25%);\n    display: flex;\n    min-height: calc(100% - (.5rem * 2));\n    opacity: 0;\n    align-items: center;\n    max-width: 500px;\n    margin: 1.75rem auto;\n    position: relative;\n    width: 100%;\n\n    @media screen and (prefers-reduced-motion:reduce) {\n        transition: none;\n    }\n\n    ${({ open }) => open && css`\n        opacity: 1;\n        transform: translate(0, 0);\n    `}\n\n    ${({ size }) => {\n\t\tswitch (size) {\n\t\tcase 'large':\n\t\t\treturn css`\n\t\t\t\tmax-width: 90%;\n\t\t\t`;\n\t\tcase 'default':\n\t\tdefault:\n\t\t\treturn '';\n\t\t}\n\t}}\n\n    ${Card} {\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        pointer-events: auto;\n    }\n`;\n\nexport default class Modal extends Component {\n    static propTypes = {\n    \t/**\n\t\t * Passthrough to Card\n\t\t */\n    \tcenter: bool,\n    \t/**\n\t\t * Passthrough to Card\n\t\t */\n    \tchildren: node,\n    \tnoPortal: bool,\n    \tonClose: func,\n    \topen: bool.isRequired,\n    \tsize: oneOf(['default', 'large']),\n    \ttype: string,\n    }\n\t\n\tstatic defaultProps = {\n\t\tnoPortal: false,\n\t\tsize: 'default',\n\t}\n\n    state = {\n    \tdelayedOpen: false,\n    }\n\n    componentDidMount() {\n    \tthis.setup();\n    }\n\n    componentDidUpdate(prevProps) {\n    \tif (!prevProps.open && this.props.open) {\n    \t\tthis.setup();\n    \t}\n        \n    \tif (prevProps.open && !this.props.open) {\n    \t\tthis.teardown();\n    \t}\n    }\n\n    componentWillUnmount() {\n    \tthis.teardown(true);\n    }\n\n    setup = () => {\n    \tthis._onClickOutside = this.onClickOutside.bind(this);\n    \tthis._onKeyUp = this.onKeyUp.bind(this);\n\n    \tdocument.addEventListener('click', this._onClickOutside);\n    \twindow.addEventListener('keyup', this._onKeyUp);\n\n    \tthis.checkOpen();\n    }\n\n    teardown = (immediate = false) => {\n    \tif (this.openTimer) {\n    \t\tclearTimeout(this.openTimer);\n    \t}\n\n    \tdocument.removeEventListener('click', this._onClickOutside);\n    \twindow.removeEventListener('keyup', this._onKeyUp);\n        \n    \tthis.setState({\n    \t\tdelayedOpen: false,\n    \t});\n        \n    \tif (!immediate) {\n    \t\tthis.closeTimer = setTimeout(() => {\n    \t\t\tthis.setState({\n    \t\t\t\tdelayedClose: false,\n    \t\t\t});\n    \t\t}, 100);\n    \t}\n    }\n\n    checkOpen = () => {\n    \tif (this.props.open && !this.state.delayedOpen) {\n    \t\tthis.doneOpening = false;\n\n    \t\tif (this.openTimer) {\n    \t\t\tclearTimeout(this.openTimer);\n    \t\t}\n            \n    \t\tthis.setState({\n    \t\t\tdelayedClose: true,\n    \t\t});\n\n    \t\tthis.openTimer = setTimeout(() => {\n    \t\t\tthis.doneOpening = true;\n    \t\t\tthis.setState({\n    \t\t\t\tdelayedOpen: true,\n    \t\t\t});\n    \t\t}, 100);\n    \t}\n    }\n\n    onClickOutside = (e) => {\n    \tif (this.modal && this.doneOpening) {\n    \t\tif (this.props.open) {\n    \t\t\tconst target = e.target;\n    \t\t\t// check if target is within (or is) the modal\n    \t\t\tconst clickOutsideModal = this.modal !== target && !this.modal.contains(target);\n    \t\t\tif (clickOutsideModal) {\n    \t\t\t\tthis.close(e, { reason: 'onClickOutside' });\n    \t\t\t}\n    \t\t}\n    \t}\n    }\n\n    onKeyUp = (e) => {\n    \tif (this.props.open) {\n    \t\tif (e.key === 'Escape') {\n    \t\t\tthis.close(e, { reason: 'escape' });\n    \t\t}\n    \t}\n    }\n\n    close = (...args) => {\n    \tconst { onClose } = this.props;\n\n    \tif (onClose) {\n    \t\tonClose(...args);\n    \t}\n    }\n\n    render() {\n    \tconst { size, center, children, type, cardProps, noPortal, ...props } = this.props;\n    \tconst { delayedOpen, delayedClose } = this.state;\n    \n    \treturn (\n    \t\t<ModalPortal noPortal={noPortal}>\n    \t\t\t<ModalWrapper open={delayedClose}>\n    \t\t\t\t<ModalDialog open={delayedOpen} size={size} {...props}>\n    \t\t\t\t\t<Card ref={ref => this.modal = ref} type={type} center={center} {...cardProps}>\n    \t\t\t\t\t\t{children}\n    \t\t\t\t\t</Card>\n    \t\t\t\t</ModalDialog>\n    \t\t\t</ModalWrapper>\n    \t\t</ModalPortal>\n    \t);\n    }\n}\n","export default {\n\tbase: 1,\n\tmodal: 9999,\n};","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Component, Fragment } from 'react';\nimport { Playground, PropsTable } from 'docz';\nimport Modal from './Modal';\nimport Button, { ButtonSet } from '../Buttons';\nimport Typography from '../Typography';\nimport { CardHeader, CardBody, CardActions, CardFooter } from '../Card';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"modal\"}}>{`Modal`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Modals use cards to display their content, so check out the Card component\nfor what is allowed in Card content.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can make a modal not respond to clicks outside the modal or ESC keys\nby not handling the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`onClose`}</MDXTag>{` prop.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"modal--component\"}}>{`\\<Modal /`}{`>`}{` component`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import Modal from '@clarityhub/unity-web/lib/components/Modal';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"prop-types\"}}>{`Prop Types`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"modal-1\"}}>{`Modal`}</MDXTag>\n<PropsTable of={Modal} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"examples\"}}>{`Examples`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"simple-modal\"}}>{`Simple Modal`}</MDXTag>\n<Playground __position={1} __code={'() => {\\n  class ModalExample extends Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { open: false }\\n    }\\n    render() {\\n      const { open } = this.state\\n\\n      return (\\n        <Fragment>\\n          <Button onClick={() => this.setState({ open: true })}>\\n            Open Modal\\n          </Button>\\n\\n          <Modal open={open} onClose={() => this.setState({ open: false })}>\\n            <CardBody>\\n              <Typography type=\\\"h3\\\">Card title</Typography>\\n              <Typography type=\\\"h4\\\">Card subtitle</Typography>\\n              <Typography type=\\\"text\\\">Meow Mix</Typography>\\n\\n              <CardActions>\\n                <ButtonSet>\\n                  <Button text onClick={() => this.setState({ open: false })}>\\n                    Close\\n                  </Button>\\n                  <Button\\n                    type=\\\"danger\\\"\\n                    onClick={() => this.setState({ open: false })}\\n                  >\\n                    Delete\\n                  </Button>\\n                </ButtonSet>\\n              </CardActions>\\n            </CardBody>\\n          </Modal>\\n        </Fragment>\\n      )\\n    }\\n  }\\n\\n  return <ModalExample />\\n}'} __scope={{props: this ? this.props : props,Component,Fragment,Modal,Button,ButtonSet,Typography,CardHeader,CardBody,CardActions,CardFooter}}>\n    {() => {\n        class ModalExample extends Component {\n            constructor(props) {\n                super(props);\n            this.state = { open: false };\n        }\n        render() {\n            const { open } = this.state;\n\n            return (\n                <Fragment>\n                    <Button onClick={() => this.setState({ open: true })}>\n                        Open Modal\n                    </Button>\n\n                    <Modal open={open} onClose={() => this.setState({ open: false })}>\n                        <CardBody>\n                            <Typography type=\"h3\">Card title</Typography>\n                            <Typography type=\"h4\">Card subtitle</Typography>\n                            <Typography type=\"text\">\n                                Meow Mix\n                            </Typography>\n\n                            <CardActions>\n                                <ButtonSet>\n                                    <Button\n                                        text\n                                        onClick={() => this.setState({ open: false })}\n                                    >\n                                        Close\n                                    </Button>\n                                    <Button\n                                        type=\"danger\"\n                                        onClick={() => this.setState({ open: false })}\n                                    >\n                                        Delete\n                                    </Button>\n                                </ButtonSet>\n                            </CardActions>\n                        </CardBody>\n                    </Modal>\n                </Fragment>\n            );\n        }\n    }\n\n\n    return <ModalExample />;\n}}\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"large-modal\"}}>{`Large Modal`}</MDXTag>\n<Playground __position={2} __code={'() => {\\n  class ModalExample extends Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { open: false }\\n    }\\n    render() {\\n      const { open } = this.state\\n\\n      return (\\n        <Fragment>\\n          <Button onClick={() => this.setState({ open: true })}>\\n            Open Modal\\n          </Button>\\n\\n          <Modal\\n            size=\\\"large\\\"\\n            open={open}\\n            onClose={() => this.setState({ open: false })}\\n          >\\n            <CardBody>\\n              <Typography type=\\\"h3\\\">Card title</Typography>\\n              <Typography type=\\\"h4\\\">Card subtitle</Typography>\\n              <Typography type=\\\"text\\\">Meow Mix</Typography>\\n\\n              <CardActions>\\n                <ButtonSet>\\n                  <Button text onClick={() => this.setState({ open: false })}>\\n                    Close\\n                  </Button>\\n                  <Button\\n                    type=\\\"danger\\\"\\n                    onClick={() => this.setState({ open: false })}\\n                  >\\n                    Delete\\n                  </Button>\\n                </ButtonSet>\\n              </CardActions>\\n            </CardBody>\\n          </Modal>\\n        </Fragment>\\n      )\\n    }\\n  }\\n\\n  return <ModalExample />\\n}'} __scope={{props: this ? this.props : props,Component,Fragment,Modal,Button,ButtonSet,Typography,CardHeader,CardBody,CardActions,CardFooter}}>\n    {() => {\n        class ModalExample extends Component {\n            constructor(props) {\n                super(props);\n            this.state = { open: false };\n        }\n        render() {\n            const { open } = this.state;\n\n            return (\n                <Fragment>\n                    <Button onClick={() => this.setState({ open: true })}>\n                        Open Modal\n                    </Button>\n\n                    <Modal size=\"large\" open={open} onClose={() => this.setState({ open: false })}>\n                        <CardBody>\n                            <Typography type=\"h3\">Card title</Typography>\n                            <Typography type=\"h4\">Card subtitle</Typography>\n                            <Typography type=\"text\">\n                                Meow Mix\n                            </Typography>\n\n                            <CardActions>\n                                <ButtonSet>\n                                    <Button\n                                        text\n                                        onClick={() => this.setState({ open: false })}\n                                    >\n                                        Close\n                                    </Button>\n                                    <Button\n                                        type=\"danger\"\n                                        onClick={() => this.setState({ open: false })}\n                                    >\n                                        Delete\n                                    </Button>\n                                </ButtonSet>\n                            </CardActions>\n                        </CardBody>\n                    </Modal>\n                </Fragment>\n            );\n        }\n    }\n\n\n    return <ModalExample />;\n}}\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"notification-modal\"}}>{`Notification Modal`}</MDXTag>\n<Playground __position={3} __code={'() => {\\n  class ModalExample extends Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { open: false }\\n    }\\n    render() {\\n      const { open } = this.state\\n\\n      return (\\n        <Fragment>\\n          <Button onClick={() => this.setState({ open: true })}>\\n            Open Modal\\n          </Button>\\n\\n          <Modal\\n            open={open}\\n            onClose={() => this.setState({ open: false })}\\n            type=\\\"notification\\\"\\n            center\\n          >\\n            <CardBody>\\n              <Typography noMargin noPadding center color=\\\"white\\\" type=\\\"h2\\\">\\n                Join our newsletter\\n              </Typography>\\n              <Typography center color=\\\"white\\\" type=\\\"text\\\">\\n                Get updates on Clarity Hub, open source, and more by signing\\n                up for our newsletter.\\n              </Typography>\\n              <CardActions>\\n                <ButtonSet spread>\\n                  <Button\\n                    text\\n                    type=\\\"white\\\"\\n                    onClick={() => this.setState({ open: false })}\\n                  >\\n                    No Thanks\\n                  </Button>\\n                  <Button\\n                    type=\\\"white\\\"\\n                    onClick={() => this.setState({ open: false })}\\n                  >\\n                    Sign Up\\n                  </Button>\\n                </ButtonSet>\\n              </CardActions>\\n            </CardBody>\\n          </Modal>\\n        </Fragment>\\n      )\\n    }\\n  }\\n\\n  return <ModalExample />\\n}'} __scope={{props: this ? this.props : props,Component,Fragment,Modal,Button,ButtonSet,Typography,CardHeader,CardBody,CardActions,CardFooter}}>\n    {() => {\n        class ModalExample extends Component {\n            constructor(props) {\n                super(props);\n            this.state = { open: false };\n        }\n        render() {\n            const { open } = this.state;\n\n            return (\n                <Fragment>\n                    <Button onClick={() => this.setState({ open: true })}>\n                        Open Modal\n                    </Button>\n\n                    <Modal\n                        open={open}\n                        onClose={() => this.setState({ open: false })}\n                        type=\"notification\"\n                        center\n                    >\n                        <CardBody>\n                            <Typography noMargin noPadding center color=\"white\" type=\"h2\">\n                                Join our newsletter\n                            </Typography>\n                            <Typography center color=\"white\" type=\"text\">\n                                Get updates on Clarity Hub, open source,\n                                and more by signing up for our newsletter.\n                            </Typography>\n                            <CardActions>\n                                <ButtonSet spread>\n                                    <Button\n                                        text\n                                        type=\"white\"\n                                        onClick={() => this.setState({ open: false })}\n                                    >\n                                        No Thanks\n                                    </Button>\n                                    <Button\n                                        type=\"white\"\n                                        onClick={() => this.setState({ open: false })}\n                                    >\n                                        Sign Up\n                                    </Button>\n                                </ButtonSet>\n                            </CardActions>\n                        </CardBody>\n                    </Modal>\n                </Fragment>\n            );\n        }\n    }\n\n\n    return <ModalExample />;\n}}\n</Playground>\n           </MDXTag>\n  }\n}\n  ","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ModalPortal extends Component {\n\tstate = {\n\t\tready: false,\n\t}\n\n\tcomponentDidMount() {\n\t\t// Append the element into the DOM on mount. We'll render\n\t\t// into the modal container element (see the HTML tab).\n\t\tthis.el = document.createElement('div');\n\t\tdocument.body.appendChild(this.el);\n\t\tthis.setState({\n\t\t\tready: true,\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// Remove the element from the DOM when we unmount\n\t\tif (this.el) {\n\t\t\tdocument.body.removeChild(this.el);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { noPortal } = this.props;\n\t\tconst { ready } = this.state;\n\n\t\tif (noPortal) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\t\n\t\t\t);\n\t\t}\n\n\t\tif (ready) {\n\t\t\t// Use a portal to render the children into the element\n\t\t\treturn ReactDOM.createPortal(\n\t\t\t\t// Any valid React child: JSX, strings, arrays, etc.\n\t\t\t\tthis.props.children,\n\t\t\t\t// A DOM element\n\t\t\t\tthis.el,\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport isPropValid from '@emotion/is-prop-valid';\n\nimport styled from '@emotion/styled';\n\nimport { oneOf } from 'prop-types';\n\nimport spacing from '@clarityhub/unity-core/lib/spacing';\n\nconst remMapper = (size) => {\n\treturn `${spacing[size]}rem`;\n};\n\nconst Space = styled(`div`, {\n\tshouldForwardProp: prop => isPropValid(prop) && ![\n\t\t'direction',\n\t\t'size',\n\t].includes(prop),\n})(\n\t({ direction = 'horizontal', size = 'xsmall' }) => {\n\t\tconst mappedSize = remMapper(size);\n        \n\t\tif (direction === 'horizontal') {\n\t\t\treturn css`\n                > * + * {\n                    margin-left: ${mappedSize}\n                }\n            `;\n\t\t} else {\n\t\t\treturn css`\n                > * + * {\n                    margin-top: ${mappedSize}\n                }\n            `;\n\t\t}\n\t},\n);\n\n/**\n * Hack for docz and react-docgen\n */\nconst SpaceProps = () => <div />;\nSpaceProps.propTypes = {\n\tdirection: oneOf(['vertical', 'horizontal']),\n\tgap: oneOf([\n\t\t'xsmall',\n\t\t'small',\n\t\t'large',\n\t\t'xlarge',\n\t\t'medium',\n\t]),\n};\n\nSpace.propTypes = SpaceProps.propTypes;\nSpace.defaultProps = SpaceProps.defaultProps;\nexport { SpaceProps };\n\nexport default Space;\n"],"sourceRoot":""}