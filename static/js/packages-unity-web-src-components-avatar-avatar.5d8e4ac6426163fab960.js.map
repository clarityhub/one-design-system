{"version":3,"sources":["webpack:///./packages/unity-web/src/components/Avatar/Avatar.js","webpack:///./packages/unity-web/src/components/Avatar/Avatar.mdx"],"names":["AvatarWrapper","Avatar","alt","url","fallbackUrl","src","filter","Boolean","loader","MDXContent","props","layout","this","components","name","parentName","__position","__code","__scope","of","React","Component"],"mappings":"6UAKA,IAAMA,EAAa,oLAYbC,EAAS,SAAC,GAAD,QAAGC,WAAH,MAAS,SAAT,EAAmBC,EAAnB,EAAmBA,IAAKC,EAAxB,EAAwBA,YAAxB,OACd,kBAACJ,EAAD,KACC,kBAAC,MAAD,CACCK,IAAK,CACJF,EACAC,GACCE,OAAOC,SACTC,OAAQJ,GAAe,yBAAKF,IAAKA,EAAKG,IAAKD,IAC3CF,IAAKA,MAWOD,M,mrEC3BMQ,E,uQACnB,WAAYC,GAAQ,IAAD,S,4FAAA,UACjB,cAAMA,IACDC,OAAS,KAFG,E,8CAIT,IAAD,EAC0BC,KAAKF,MAA9BG,EADD,EACCA,WAAeH,EADhB,oBAGP,OAAO,kBAAC,SAAD,CACEI,KAAK,UAELD,WAAYA,GACzB,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,WAAvD,UACA,kBAAC,SAAD,CAAQI,KAAK,IAAID,WAAYA,GAA7B,4CACA,kBAAC,SAAD,CAAQC,KAAK,IAAID,WAAYA,GAA7B,+BAAyE,kBAAC,SAAD,CAAQC,KAAK,aAAaD,WAAYA,EAAYE,WAAW,KAA7D,eAAzE,sDAEA,kBAAC,SAAD,CAAQD,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYE,WAAW,MAAML,MAAO,CAAC,UAAY,gBAAjF,wEAE3C,kBAAC,SAAD,CAAQI,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,YAAvD,WACA,kBAAC,SAAD,CAAQI,KAAK,IAAID,WAAYA,GAA7B,0BACA,kBAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,uHAA8HC,QAAS,CAACR,MAAOE,KAAOA,KAAKF,MAAQA,EAAMT,aACxM,kBAAC,IAAD,CACIE,IAAI,0BACJC,YAAY,iCACZF,IAAI,mBAGZ,kBAAC,SAAD,CAAQY,KAAK,IAAID,WAAYA,GAA7B,wBACA,kBAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,uHAA8HC,QAAS,CAACR,MAAOE,KAAOA,KAAKF,MAAQA,EAAMT,aACxM,kBAAC,IAAD,CACIE,IAAI,0BACJC,YAAY,iCACZF,IAAI,mBAGZ,kBAAC,SAAD,CAAQY,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,eAAvD,cACA,kBAAC,SAAD,CAAQI,KAAK,IAAID,WAAYA,GAA7B,+DACA,kBAAC,IAAD,CAAYM,GAAIlB,Y,8BArCwBmB,IAAMC,W","file":"static/js/packages-unity-web-src-components-avatar-avatar.66407563.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport { string } from 'prop-types';\nimport { Img } from 'react-image';\n\nconst AvatarWrapper = styled.span`\n    display: inline-block;\n\n    img {\n        border-radius: 50%;\n        height: 2.8rem;\n        max-height: 2.8rem;\n        max-width: 2.8rem;\n        width: 2.8rem;\n    }\n`;\n\nconst Avatar = ({ alt = 'Avatar', url, fallbackUrl }) => (\n\t<AvatarWrapper>\n\t\t<Img\n\t\t\tsrc={[\n\t\t\t\turl,\n\t\t\t\tfallbackUrl,\n\t\t\t].filter(Boolean)}\n\t\t\tloader={fallbackUrl && <img alt={alt} src={fallbackUrl} />}\n\t\t\talt={alt}\n\t\t/>\n\t</AvatarWrapper>\n);\n\nAvatar.propTypes = {\n\talt: string,\n\tfallbackUrl: string.isRequired,\n\turl: string,\n};\n\nexport default Avatar;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Avatar from './Avatar';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"avatar\"}}>{`Avatar`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Use avatars to present user photographs.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You should always provide a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`fallbackUrl`}</MDXTag>{` so that there is always\na preloaded image shown.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import Avatar from '@clarityhub/unity-web/lib/components/Avatar';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"avatars\"}}>{`Avatars`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Image with a fallback:`}</MDXTag>\n<Playground __position={0} __code={'<Avatar\\n  url=\\\"/public/ivan-avatar.png\\\"\\n  fallbackUrl=\\\"/public/avatar-placeholder.png\\\"\\n  alt=\\\"Ivan\\'s Avatar\\\"\\n/>'} __scope={{props: this ? this.props : props,Avatar}}>\n    <Avatar\n        url=\"/public/ivan-avatar.png\"\n        fallbackUrl=\"/public/avatar-placeholder.png\"\n        alt=\"Ivan's Avatar\"\n    />\n</Playground>\n<MDXTag name=\"p\" components={components}>{`Image fails to load:`}</MDXTag>\n<Playground __position={1} __code={'<Avatar\\n  url=\\\"/public/invalid-url.png\\\"\\n  fallbackUrl=\\\"/public/avatar-placeholder.png\\\"\\n  alt=\\\"Ivan\\'s Avatar\\\"\\n/>'} __scope={{props: this ? this.props : props,Avatar}}>\n    <Avatar\n        url=\"/public/invalid-url.png\"\n        fallbackUrl=\"/public/avatar-placeholder.png\"\n        alt=\"Ivan's Avatar\"\n    />\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"prop-types\"}}>{`Prop Types`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The following props are available for the Avatar component.`}</MDXTag>\n<PropsTable of={Avatar} />\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}