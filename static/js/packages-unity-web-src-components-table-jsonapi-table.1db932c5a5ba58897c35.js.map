{"version":3,"sources":["webpack:///./packages/unity-web/src/components/Badge/Badge.js","webpack:///./packages/unity-web/src/components/Table/JSONAPITable.js","webpack:///./packages/unity-web/src/components/Table/JSONAPITable.mdx","webpack:///./packages/unity-web/src/components/Table/Table.js","webpack:///./packages/unity-web/src/components/Table/TableBody.js","webpack:///./packages/unity-web/src/components/Table/TableCell.js","webpack:///./packages/unity-web/src/components/Table/TableHead.js","webpack:///./packages/unity-web/src/components/Table/TableRow.js","webpack:///./packages/unity-web/src/theme/fonts.js"],"names":["Badge","shouldForwardProp","prop","isPropValid","includes","variants","button","string","type","css","colors","primary","opacify","success","danger","white","notification","black","muted","BadgePropTypes","propTypes","JSONAPITable","data","suggestedColumns","columns","rawResponse","ActionColumn","actionColumn","length","Object","keys","Table","TableHead","TableRow","map","col","i","Array","TableCell","key","TableBody","row","name","MDXContent","props","layout","this","components","parentName","__position","__code","__scope","Component","Button","description","mailchimpId","style","minWidth","size","text","of","React","types","h1","heading","sizes","rem","lineHeight","unitless","h2","h3","h4","secondary","h5","h6","p","readable","text2","sectionLabel","darkGray","subtext","link","darken","blockLink","dove"],"mappings":"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","file":"static/js/packages-unity-web-src-components-table-jsonapi-table.e224993e.js","sourcesContent":["import React from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { node, oneOf } from 'prop-types';\nimport colors from '@clarityhub/unity-core/lib/colors';\nimport { opacify } from '@clarityhub/unity-core/lib/utilities/color';\nimport { variants } from '@clarityhub/unity-core/lib/typography';\n\nconst Badge = styled('div', {\n\tshouldForwardProp: prop => isPropValid(prop) && !['type'].includes(prop),\n})`\n    overflow: visible;\n    text-transform: none;\n    display: inline-block;\n\n    ${variants.button.string}\n\n    font-weight: 600;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: middle;\n    border: 0 solid transparent;\n    padding: 0.1rem 0.4rem;\n    font-size: 0.8rem;\n    line-height: 1.2;\n    border-radius: 2rem;\n    position: relative;\n    text-transform: uppercase;\n\n    ${({ type }) => {\n\t\tswitch (type) {\n\t\tcase 'primary':\n\t\t\treturn css`\n                    color: ${colors.primary.default};\n                    background-color: ${opacify(colors.primary.default, 0.25)};\n                `;\n\t\tcase 'success':\n\t\t\treturn css`\n                    color: ${colors.success.default};\n                    background-color: ${opacify(colors.success.default, 0.25)};\n                `;\n\t\tcase 'danger':\n\t\t\treturn css`\n                    color: ${colors.danger.default};\n                    background-color: ${opacify(colors.danger.default, 0.25)};\n                `;\n\t\tcase 'notification':\n\t\t\treturn css`\n                    color: ${colors.white.default};\n                    background-color: ${colors.notification.default};\n                    border-color: ${colors.notification.default};\n                `;\n\t\tcase 'default':\n\t\tdefault:\n\t\t\treturn css`\n                    color: ${colors.black.default};\n                    background-color: ${colors.muted.default};\n                    border-color: ${colors.muted.default};\n                `;\n\t\t}\n\t}}\n`;\n\n/**\n * Hack for docz and react-docgen\n */\nconst BadgePropTypes = () => <div />;\nBadgePropTypes.propTypes = {\n\tchildren: node,\n\ttype: oneOf(['primary', 'success', 'danger', 'notification', 'default']),\n};\nBadge.propTypes = BadgePropTypes.propTypes;\nexport { BadgePropTypes };\n\nexport default Badge;\n","import React from 'react';\nimport { arrayOf, any, func, node, oneOfType, string } from 'prop-types';\n\nimport Table from './Table';\nimport TableBody from './TableBody';\nimport TableCell from './TableCell';\nimport TableHead from './TableHead';\nimport TableRow from './TableRow';\n\nconst getColumnsFromData = (data) => {\n\tif (!data || data.length === 0) {\n\t\t// Cannot determine columns from data\n\t\treturn [];\n\t}\n\n\treturn Object.keys(data[0]);\n};\n\nconst JSONAPITable = ({\n\tcolumns: suggestedColumns,\n\tdata: rawResponse,\n\tactionColumn: ActionColumn,\n}) => {\n\tconst columns = suggestedColumns || getColumnsFromData(rawResponse.data);\n\n\treturn (\n\t\t<Table>\n\t\t\t<TableHead>\n\t\t\t\t<TableRow>\n\t\t\t\t\t{columns.map((col, i) => {\n\t\t\t\t\t\tif (col instanceof Array) {\n\t\t\t\t\t\t\treturn <TableCell key={i}>{col[0]}</TableCell>;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn <TableCell key={i}>{col}</TableCell>;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t\t{ActionColumn && (\n\t\t\t\t\t\t<TableCell key={'Actions'}>Actions</TableCell>\n\t\t\t\t\t)}\n\t\t\t\t</TableRow>\n\t\t\t</TableHead>\n\t\t\t<TableBody>\n\t\t\t\t{rawResponse.data.map(row => (\n\t\t\t\t\t<TableRow key={row.name}>\n\t\t\t\t\t\t{columns.map((key) => {\n\t\t\t\t\t\t\tif (key instanceof Array) {\n\t\t\t\t\t\t\t\tif (typeof key[1] === 'function') {\n\t\t\t\t\t\t\t\t\treturn <TableCell key={key}>{key[1](row)}</TableCell>;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn <TableCell key={key}>{row[key[1]]}</TableCell>;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn <TableCell key={key}>{row[key]}</TableCell>;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{ActionColumn && (\n\t\t\t\t\t\t\t<TableCell key={'Actions'}>\n\t\t\t\t\t\t\t\t<ActionColumn\n\t\t\t\t\t\t\t\t\trow={row}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableRow>\n\t\t\t\t))}\n\t\t\t</TableBody>\n\t\t</Table>\n\t);\n};\n\nJSONAPITable.propTypes = {\n\tactionColumn: oneOfType([func, node]),\n\tcolumns: arrayOf(arrayOf(oneOfType([string, func]))),\n\tdata: any,\n};\n\nexport default JSONAPITable;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Component } from 'react';\nimport { Playground, PropsTable } from 'docz';\nimport JSONAPITable from './JSONAPITable';\nimport Badge from '../Badge';\nimport Button from '../Buttons';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"jsonapitable\"}}>{`JSONAPITable`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The JSONAPITable component allows you to create tables from JSON API style data.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"jsonapitable--component\"}}>{`\\<JSONAPITable /`}{`>`}{` component`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import { JSONAPITable } from '@clarityhub/unity-web/lib/components/Table';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"simple-example\"}}>{`Simple Example`}</MDXTag>\n<Playground __position={0} __code={'<JSONAPITable\\n  columns={[\\n    [\\'Name\\', \\'name\\'],\\n    [\\'Description\\', \\'description\\'],\\n  ]}\\n  data={{\\n    data: [\\n      {\\n        name: \\'Clarity Hub\\',\\n        description: \\'Wow\\',\\n      },\\n      {\\n        name: \\'Mantaray AR\\',\\n        description: \\'AR\\',\\n      },\\n    ],\\n  }}\\n/>'} __scope={{props: this ? this.props : props,Component,JSONAPITable,Badge,Button}}>\n    <JSONAPITable\n        columns={[\n            ['Name', 'name'],\n            ['Description', 'description'],\n        ]}\n        data={{\n            data: [{\n                name: 'Clarity Hub', \n                description: 'Wow',\n            }, {\n                name: 'Mantaray AR',\n                description: 'AR',\n            }]\n        }}\n    />\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"kitchen-sink-example\"}}>{`Kitchen Sink Example`}</MDXTag>\n<Playground __position={1} __code={'<JSONAPITable\\n  columns={[\\n    [\\'Title\\', \\'title\\'],\\n    [\\'Subject Line\\', \\'subjectLine\\'],\\n    [\\'Preview Text\\', \\'previewText\\'],\\n    [\\n      \\'Status\\',\\n      data => {\\n        if (data.mailchimpId) {\\n          return <Badge type=\\\"success\\\">Scheduled</Badge>\\n        } else {\\n          return <Badge>Unscheduled</Badge>\\n        }\\n      },\\n    ],\\n  ]}\\n  data={{\\n    links: {\\n      self: \\'http://localhost:4000/campaigns\\',\\n    },\\n    data: [\\n      {\\n        title: \\'2019-03-24-newsletter\\',\\n        subjectLine: \\'Clarity Hub Weekly\\',\\n        previewText:\\n          \\'Clarity Hub Weekly | Weekly Open Source Issues straight to your inbox\\',\\n        greeting: \\'\\',\\n        mailchimpId: null,\\n        mailchimpUrl: null,\\n      },\\n      {\\n        title: \\'2019-04-23-newsletter\\',\\n        subjectLine: \\'Stellar Newsletter by Clarity Hub\\',\\n        previewText:\\n          \\'Your weekly does of Open Source Issues and programming blog posts\\',\\n        greeting: \\'\\',\\n      },\\n      {\\n        title: \\'2019-04-25-newsletter\\',\\n        subjectLine: \\'Stellar Newsletter by Clarity Hub\\',\\n        previewText:\\n          \\'Your weekly does of Open Source Issues and programming blog posts\\',\\n        greeting: \\'\\',\\n        mailchimpId: \\'297691dd04\\',\\n        mailchimpUrl:\\n          \\'https://us18.admin.mailchimp.com/campaigns/show/?id=317045\\',\\n      },\\n      {\\n        title: \\'2019-05-02-newsletter\\',\\n        subjectLine: \\'Stellar Weekly\\',\\n        previewText:\\n          \\\"Learn about design systems, Facebook\\'s new website, React gotchas, and hot open source issues!\\\",\\n        greeting:\\n          \\\"This week, learn about design systems, Facebook\\'s new website, and React gotchas.\\\",\\n        mailchimpId: \\'5abbd11863\\',\\n        mailchimpUrl:\\n          \\'https://us18.admin.mailchimp.com/campaigns/show/?id=321993\\',\\n      },\\n      {\\n        title: \\'2019-05-09-newsletter\\',\\n        subjectLine: \\'Stellar Weekly\\',\\n        previewText:\\n          \\'Learn about skeleton loading pages, hooks, and affordances in this issue of Stellar Weekly.\\',\\n        greeting: \\'\\',\\n        mailchimpId: \\'92823e319e\\',\\n        mailchimpUrl:\\n          \\'https://us18.admin.mailchimp.com/campaigns/show/?id=327265\\',\\n      },\\n      {\\n        title: \\'2019-05-16-newsletter\\',\\n        subjectLine: \\'Stellar Newsletter by Clarity Hub\\',\\n        previewText:\\n          \\'Your weekly does of Open Source Issues and programming blog posts\\',\\n        greeting: \\'\\',\\n        mailchimpId: \\'d094958ae6\\',\\n        mailchimpUrl:\\n          \\'https://us18.admin.mailchimp.com/campaigns/show/?id=331649\\',\\n      },\\n      {\\n        title: \\'2019-05-23-newsletter\\',\\n        subjectLine: \\'Stellar Newsletter by Clarity Hub\\',\\n        previewText:\\n          \\'Your weekly does of Open Source Issues and programming blog posts\\',\\n        greeting:\\n          \\\"School\\'s out! Kick off the summer with some hot open source issues!\\\",\\n        mailchimpId: \\'656535fb6b\\',\\n        mailchimpUrl:\\n          \\'https://us18.admin.mailchimp.com/campaigns/show/?id=335601\\',\\n      },\\n    ],\\n    meta: {\\n      count: 7,\\n    },\\n  }}\\n  actionColumn={({ row }) => {\\n    return (\\n      <div style={{ minWidth: \\'200px\\' }}>\\n        <Button size=\\\"small\\\" type=\\\"primary\\\">\\n          Edit\\n        </Button>\\n\\n        <Button size=\\\"small\\\" type=\\\"danger\\\" text>\\n          Delete\\n        </Button>\\n      </div>\\n    )\\n  }}\\n/>'} __scope={{props: this ? this.props : props,Component,JSONAPITable,Badge,Button}}>\n    <JSONAPITable\n        columns={[\n            ['Title', 'title'],\n            ['Subject Line', 'subjectLine'],\n            ['Preview Text', 'previewText'],\n            ['Status', (data) => {\n                if (data.mailchimpId) {\n                    return (\n                        <Badge type=\"success\">\n                            Scheduled\n                        </Badge>\n                    );\n                } else {\n                    return (\n                        <Badge>\n                            Unscheduled\n                        </Badge>\n                    );\n                }\n            }],\n        ]}\n        data={{\n    \"links\": {\n        \"self\": \"http://localhost:4000/campaigns\"\n    },\n    \"data\": [\n        {\n            \"title\": \"2019-03-24-newsletter\",\n            \"subjectLine\": \"Clarity Hub Weekly\",\n            \"previewText\": \"Clarity Hub Weekly | Weekly Open Source Issues straight to your inbox\",\n            \"greeting\": \"\",\n            \"mailchimpId\": null,\n            \"mailchimpUrl\": null\n        },\n        {\n            \"title\": \"2019-04-23-newsletter\",\n            \"subjectLine\": \"Stellar Newsletter by Clarity Hub\",\n            \"previewText\": \"Your weekly does of Open Source Issues and programming blog posts\",\n            \"greeting\": \"\",\n        },\n        {\n            \"title\": \"2019-04-25-newsletter\",\n            \"subjectLine\": \"Stellar Newsletter by Clarity Hub\",\n            \"previewText\": \"Your weekly does of Open Source Issues and programming blog posts\",\n            \"greeting\": \"\",\n            \"mailchimpId\": \"297691dd04\",\n            \"mailchimpUrl\": \"https://us18.admin.mailchimp.com/campaigns/show/?id=317045\"\n        },\n        {\n            \"title\": \"2019-05-02-newsletter\",\n            \"subjectLine\": \"Stellar Weekly\",\n            \"previewText\": \"Learn about design systems, Facebook's new website, React gotchas, and hot open source issues!\",\n            \"greeting\": \"This week, learn about design systems, Facebook's new website, and React gotchas.\",\n            \"mailchimpId\": \"5abbd11863\",\n            \"mailchimpUrl\": \"https://us18.admin.mailchimp.com/campaigns/show/?id=321993\"\n        },\n        {\n            \"title\": \"2019-05-09-newsletter\",\n            \"subjectLine\": \"Stellar Weekly\",\n            \"previewText\": \"Learn about skeleton loading pages, hooks, and affordances in this issue of Stellar Weekly.\",\n            \"greeting\": \"\",\n            \"mailchimpId\": \"92823e319e\",\n            \"mailchimpUrl\": \"https://us18.admin.mailchimp.com/campaigns/show/?id=327265\"\n        },\n        {\n            \"title\": \"2019-05-16-newsletter\",\n            \"subjectLine\": \"Stellar Newsletter by Clarity Hub\",\n            \"previewText\": \"Your weekly does of Open Source Issues and programming blog posts\",\n            \"greeting\": \"\",\n            \"mailchimpId\": \"d094958ae6\",\n            \"mailchimpUrl\": \"https://us18.admin.mailchimp.com/campaigns/show/?id=331649\"\n        },\n        {\n            \"title\": \"2019-05-23-newsletter\",\n            \"subjectLine\": \"Stellar Newsletter by Clarity Hub\",\n            \"previewText\": \"Your weekly does of Open Source Issues and programming blog posts\",\n            \"greeting\": \"School's out! Kick off the summer with some hot open source issues!\",\n            \"mailchimpId\": \"656535fb6b\",\n            \"mailchimpUrl\": \"https://us18.admin.mailchimp.com/campaigns/show/?id=335601\"\n        }\n    ],\n    \"meta\": {\n        \"count\": 7\n    }\n}}\n    actionColumn={({ row }) => {\n        return (\n            <div style={{ minWidth: '200px' }}>\n                    <Button\n                        size=\"small\"\n                        type=\"primary\"\n                    >\n                        Edit\n                    </Button>\n\n                <Button size=\"small\" type=\"danger\" text>Delete</Button>\n            </div>\n        );\n    }}\n/>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"prop-types\"}}>{`Prop Types`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"jsonapitable-1\"}}>{`JSONAPITable`}</MDXTag>\n<PropsTable of={JSONAPITable} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"see-also\"}}>{`See Also`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#/packages-unity-web-src-components-toolbar-toolbar\"}}>{`Toolbar`}</MDXTag></MDXTag>\n</MDXTag>\n           </MDXTag>\n  }\n}\n  ","import styled from '@emotion/styled';\n\nconst Table = styled.table`\n\tdisplay: table;\n\twidth: 100%;\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n`;\n\nexport default Table;\n","import styled from '@emotion/styled';\n\nconst TableBody = styled.tbody`\n    display: table-row-group;\n`;\n\nexport default TableBody;\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nimport { types } from '../../theme/fonts';\nimport TableHead from './TableHead';\n\nconst TableCell = styled.td(\n\ttypes.text,\n\tcss`\n        display: table-cell;\n        vertical-align: inherit;\n        border-bottom: 1px solid ${colors.muted.default};\n        text-align: left;\n        padding: 0.5rem 1rem 0.5rem 1rem;\n\n        &:last-child {\n            padding-right: 1rem;\n        }\n\n        ${TableHead} & {\n            font-weight: 600;\n        }\n    `\n);\n\nexport default TableCell;\n","import styled from '@emotion/styled';\n\nconst TableHead = styled.th`\n    display: table-header-group;\n`;\n\nexport default TableHead;\n","import styled from '@emotion/styled';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nconst TableRow = styled.tr`\n    color: inherit;\n    display: table-row;\n    vertical-align: middle;\n    outline: none;\n    \n    &:hover {\n        background-color: ${colors.muted.default};\n    }\n`;\n\nexport default TableRow;\n","import { variants, sizes } from '@clarityhub/unity-core/lib/typography';\nimport colors from '@clarityhub/unity-core/lib/colors';\nimport { darken } from '@clarityhub/unity-core/lib/utilities/color';\n\nexport const types = {\n\th1: `\n        ${variants.heading.string}\n\n        font-size: ${sizes.h1.rem}rem;\n        line-height: ${sizes.h1.lineHeight.unitless};\n    `,\n\th2: `\n        ${variants.heading.string}\n\n        font-size: ${sizes.h2.rem}rem;\n        line-height: ${sizes.h2.lineHeight.unitless};\n        padding-bottom: 1rem;\n        padding-top: 3rem;\n    `,\n\th3: `\n        ${variants.heading.string}\n\n        font-size: ${sizes.h3.rem}rem;\n        line-height: ${sizes.h3.lineHeight.unitless};\n        padding-bottom: 1rem;\n        padding-top: 3rem;\n    `,\n\th4: `\n        ${variants.secondary.string}\n\n        font-size: ${sizes.h4.rem}rem;\n        line-height: ${sizes.h4.lineHeight.unitless};\n    `,\n\th5: `\n        ${variants.secondary.string}\n\n        font-size: ${sizes.h5.rem}rem;\n        line-height: ${sizes.h5.lineHeight.unitless};\n    `,\n\th6: `\n        ${variants.secondary.string}\n\n        font-size: ${sizes.h6.rem}rem;\n        line-height: ${sizes.h6.lineHeight.unitless};\n    `,\n\tp: `\n        ${variants.readable.string}\n\n        font-size: ${sizes.p.rem}rem;\n        line-height: ${sizes.p.lineHeight.unitless};\n\n        & + & {\n            margin-top: 1.6rem;\n        }\n\n        strong,\n        b {\n            font-weight: 800;\n        }\n\n        i,\n        em {\n            font-style: italic;\n        }\n    `,\n\ttext: `\n        ${variants.text.string}\n\n        font-size: ${sizes.text.rem}rem;\n        line-height: ${sizes.text.lineHeight.unitless};\n\n        & + & {\n            margin-top: 1.6rem;\n        }\n\n        strong,\n        b {\n            font-weight: 800;\n        }\n\n        i,\n        em {\n            font-style: italic;\n        }\n    `,\n\ttext2: `\n        ${variants.text.string}\n\n        font-size: ${sizes.text2.rem}rem;\n        line-height: ${sizes.text2.lineHeight.unitless};\n        font-weight: 400;\n\n        & + & {\n            margin-top: 1.6rem;\n        }\n\n        strong,\n        b {\n            font-weight: 800;\n        }\n\n        i,\n        em {\n            font-style: italic;\n        }\n    `,\n\tsectionLabel: `\n        ${variants.text.string}\n\n        color: ${colors.darkGray.default};\n        font-size: 1rem;\n        line-height: 1.4;\n    `,\n\tsubtext: `\n        font-family: 'Crimson Text', -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n\n        font-size: ${sizes.subtext.rem}rem;\n        line-height: ${sizes.subtext.lineHeight.unitless};\n        color: ${colors.darkGray.default};\n        font-style: italic;\n\n        & + & {\n            margin-top: 1.6rem;\n        }\n    `,\n\tlink: `\n        border-bottom: 1px solid ${colors.primary.default};\n        color: ${colors.primary.default};\n        display: inline-block;\n        text-decoration: none;\n\n        &:hover,\n        &:active {\n            border-bottom: 2px solid ${colors.primary.default};\n            border-bottom-width: 2px;\n            color: ${colors.primary.default};\n            margin-bottom: -1px;\n            text-decoration: none;\n        }\n\n        &:visited {\n            border-bottom: 1px solid ${darken(colors.primary.default, 0.2)};\n            color: ${darken(colors.primary.default, 0.2)};\n            text-decoration: none;\n\n            &:hover,\n            &:active {\n                margin-bottom: 0;\n            }\n        }\n    `,\n\tblockLink: `\n        -khtml-user-select: none;\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n        -webkit-touch-callout: none;\n        border: 0 !important;\n        color: ${colors.dove.default};\n        cursor: pointer;\n        display: block;\n        font-size: ${14 / 16}rem;\n        line-height: ${26 / 16}rem;\n        position: relative;\n        text-align: center;\n        text-decoration: none;\n        transition: color 0.3s;\n        transition-property: color;\n        letter-spacing: 0.8px !important;\n\n        &:visited {\n            color: ${colors.dove.default} !important;\n        }\n\n        &::before {\n            background: ${colors.dove.default};\n            bottom: -6px;\n            content: '';\n            height: 2px;\n            left: 0;\n            position: absolute;\n            transform: scale3d(0, 0.4, 1);\n            transition: transform 0.1s;\n            width: 100%;\n        }\n\n        &.active,\n        &:hover,\n        &:focus {\n            &::before {\n                transform: scale3d(0.8, 0.4, 1);\n                transition-duration: 0.3s;\n                transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            }\n        }\n    `,\n};\n"],"sourceRoot":""}