{"version":3,"sources":["webpack:///./packages/unity-web/src/components/Buttons/ButtonGroup.js","webpack:///./packages/unity-web/src/components/Buttons/ButtonSet.js","webpack:///./packages/unity-web/src/components/Buttons/index.js","webpack:///./packages/unity-web/src/components/Card/Card.mdx","webpack:///./packages/unity-web/src/components/Image/Image.js","webpack:///./packages/unity-web/src/components/Image/index.js"],"names":["ButtonGroup","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","colors","shadow","default","EmotionButton","muted","ButtonGroupItem","_ref","selected","rest","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_Button__WEBPACK_IMPORTED_MODULE_3__","assign","type","ButtonSet","spread","css","ButtonSetPropTypes","React","propTypes","_Button__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_ButtonSet__WEBPACK_IMPORTED_MODULE_1__","MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","Component","_this$props","components","react__WEBPACK_IMPORTED_MODULE_0___default","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_2__","__position","__code","__scope","Card","CardHeader","CardFooter","CardImage","CardBody","CardActions","CardPropTypes","Typography","Button","Image","_index__WEBPACK_IMPORTED_MODULE_3__","_Typography__WEBPACK_IMPORTED_MODULE_5__","style","marginTop","color","width","src","_Buttons__WEBPACK_IMPORTED_MODULE_6__","center","_Image__WEBPACK_IMPORTED_MODULE_7__","withMargin","alt","of","ImageWrapper","_ref3","withSpacing","_ref4","_ref2","_ref5","_ref5$wrapperProps","wrapperProps","ImagePropTypes","_Image__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/packages-unity-web-src-components-card-card.9da6e698.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport { bool } from 'prop-types';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nimport Button, { EmotionButton } from './Button';\n\nconst ButtonGroup = styled.div`\n    box-shadow: ${colors.shadow.default};\n    display: inline-block;\n\n    ${EmotionButton} {\n        box-shadow: none;\n    }\n\n    ${EmotionButton} + ${EmotionButton} {\n        border-left-width: 0;\n        border-left: 1px solid ${colors.muted.default};\n    }\n    ${EmotionButton}:not(:last-child):not(:first-of-type) {\n        border-radius: 0;\n    }\n    ${EmotionButton}:first-of-type {\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n    }\n    ${EmotionButton}:last-child {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n    }\n`;\n\nconst ButtonGroupItem = ({ selected, ...rest }) => (\n\t<Button type={selected ? 'primary' : 'default'} {...rest} />\n);\n\nButtonGroupItem.propTypes = {\n\tselected: bool,\n};\n\nexport { ButtonGroup, ButtonGroupItem };\n","import { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { bool } from 'prop-types';\nimport { EmotionButton } from './Button';\n\nconst ButtonSet = styled.div`\n    ${({ spread }) => spread && css`\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n\n        ${EmotionButton} {\n            &:not(:first-of-type) {\n                margin-left: auto!important;\n            }\n        }\n    `}\n\n    button + button,\n    a + a,\n    a + button,\n    button + a {\n        margin-left: 0.4rem;\n    }\n`;\n\n/**\n * Hack for docz and react-docgen\n */\nconst ButtonSetPropTypes = () => <div />;\nButtonSetPropTypes.propTypes = {\n\tspread: bool,\n};\nButtonSet.propTypes = ButtonSetPropTypes.propTypes;\nexport { ButtonSetPropTypes };\n\nexport default ButtonSet;\n\n","export { default } from './Button';\nexport { default as ButtonSet } from './ButtonSet';\nexport { ButtonGroup, ButtonGroupItem } from './ButtonGroup';\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Card, {\n    CardHeader,\n    CardFooter,\n    CardImage,\n    CardBody,\n    CardActions,\n} from './index';\nimport { CardPropTypes } from './Card';\nimport Typography from '../Typography';\nimport Button, { ButtonSet } from '../Buttons';\nimport Image from '../Image';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"card\"}}>{`Card`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Cards provide a content container that you can use to display grouped content.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import Card, {\n    CardHeader,\n    CardFooter,\n    CardImage,\n    CardBody,\n    CardActions,\n} from '@clarityhub/unity-web/lib/components/Card';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"simple-card\"}}>{`Simple Card`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In all examples, the headings and text use the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Typography`}</MDXTag>{` components.`}</MDXTag>\n<Playground __position={0} __code={'<Card>\\n  <CardBody>\\n    <Typography type=\\\"text\\\">Default</Typography>\\n  </CardBody>\\n</Card>\\n<Card type=\\\"notification\\\" style={{ marginTop: \\'1rem\\' }}>\\n  <CardBody>\\n    <Typography type=\\\"text\\\" color=\\\"white\\\">\\n      Notification\\n    </Typography>\\n  </CardBody>\\n</Card>'} __scope={{props: this ? this.props : props,Card,CardHeader,CardFooter,CardImage,CardBody,CardActions,CardPropTypes,Typography,Button,ButtonSet,Image}}>\n    <Card>\n        <CardBody>\n            <Typography type=\"text\">\n                Default\n            </Typography>\n        </CardBody>\n    </Card>\n    <Card type=\"notification\" style={{ marginTop: '1rem'}}>\n        <CardBody>\n            <Typography type=\"text\" color=\"white\">\n                Notification\n            </Typography>\n        </CardBody>\n    </Card>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"card-with-image\"}}>{`Card with Image`}</MDXTag>\n<Playground __position={1} __code={'<Card style={{ width: \\'16rem\\' }}>\\n  <CardImage src=\\\"https://placehold.it/300x150\\\" />\\n  <CardBody>\\n    <Typography type=\\\"h3\\\">Card title</Typography>\\n    <Typography type=\\\"text\\\">Meow Mix</Typography>\\n  </CardBody>\\n</Card>'} __scope={{props: this ? this.props : props,Card,CardHeader,CardFooter,CardImage,CardBody,CardActions,CardPropTypes,Typography,Button,ButtonSet,Image}}>\n    <Card style={{ width: '16rem' }}>\n        <CardImage src=\"https://placehold.it/300x150\" />\n        <CardBody>\n            <Typography type=\"h3\">Card title</Typography>\n            <Typography type=\"text\">\n                Meow Mix\n            </Typography>\n        </CardBody>\n    </Card>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"card-with-actions\"}}>{`Card with Actions`}</MDXTag>\n<Playground __position={2} __code={'<Card>\\n  <CardBody>\\n    <Typography type=\\\"h3\\\">Card title</Typography>\\n    <Typography type=\\\"h4\\\">Card subtitle</Typography>\\n    <Typography type=\\\"text\\\">Meow Mix</Typography>\\n    <CardActions>\\n      <ButtonSet>\\n        <Button>Cancel</Button>\\n        <Button type=\\\"danger\\\">Delete</Button>\\n      </ButtonSet>\\n    </CardActions>\\n  </CardBody>\\n</Card>'} __scope={{props: this ? this.props : props,Card,CardHeader,CardFooter,CardImage,CardBody,CardActions,CardPropTypes,Typography,Button,ButtonSet,Image}}>\n    <Card>\n        <CardBody>\n            <Typography type=\"h3\">Card title</Typography>\n            <Typography type=\"h4\">Card subtitle</Typography>\n            <Typography type=\"text\">\n                Meow Mix\n            </Typography>\n        <CardActions>\n            <ButtonSet>\n                <Button>Cancel</Button>\n                <Button type=\"danger\">Delete</Button>\n            </ButtonSet>\n        </CardActions>\n    </CardBody>\n</Card>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"card-with-header-and-footer\"}}>{`Card with Header and Footer`}</MDXTag>\n<Playground __position={3} __code={'<Card>\\n  <CardHeader>Featured</CardHeader>\\n  <CardBody>\\n    <Typography type=\\\"h3\\\">Card title</Typography>\\n    <Typography type=\\\"h4\\\">Card subtitle</Typography>\\n    <Typography type=\\\"text\\\">Meow Mix</Typography>\\n    <CardActions>\\n      <ButtonSet>\\n        <Button>Cancel</Button>\\n        <Button type=\\\"danger\\\">Delete</Button>\\n      </ButtonSet>\\n    </CardActions>\\n  </CardBody>\\n  <CardFooter>2 days ago</CardFooter>\\n</Card>'} __scope={{props: this ? this.props : props,Card,CardHeader,CardFooter,CardImage,CardBody,CardActions,CardPropTypes,Typography,Button,ButtonSet,Image}}>\n    <Card>\n        <CardHeader>\n            Featured\n        </CardHeader>\n        <CardBody>\n            <Typography type=\"h3\">Card title</Typography>\n            <Typography type=\"h4\">Card subtitle</Typography>\n            <Typography type=\"text\">\n                Meow Mix\n            </Typography>\n        <CardActions>\n            <ButtonSet>\n                <Button>Cancel</Button>\n                <Button type=\"danger\">Delete</Button>\n            </ButtonSet>\n        </CardActions>\n    </CardBody>\n    <CardFooter>\n        2 days ago\n    </CardFooter>\n</Card>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example-cards\"}}>{`Example Cards`}</MDXTag>\n<Playground __position={4} __code={'<Card center>\\n  <CardBody>\\n    <Typography type=\\\"h3\\\">Welcome to Clarity Hub!</Typography>\\n    <Typography type=\\\"text\\\">\\n      To get started, install the extension and use Intercom like you normally\\n      would. We’ll let you know when we have suggestions for you by providing\\n      a prompt in the place you normally work.\\n    </Typography>\\n    <Image\\n      center\\n      withMargin\\n      src=\\\"/public/get-started.png\\\"\\n      alt=\\\"Get started with Clarity Hub\\\"\\n      style={{ width: \\'80%\\' }}\\n    />\\n\\n    <CardActions>\\n      <Button type=\\\"primary\\\">Install the Extension</Button>\\n    </CardActions>\\n  </CardBody>\\n</Card>\\n<Card center style={{ marginTop: \\'1rem\\' }}>\\n  <CardBody>\\n    <Typography type=\\\"h3\\\">Get Started</Typography>\\n    <Typography type=\\\"text\\\">\\n      Send email invites to the rest of your team to get them onboarded! We’ll\\n      send them instructions on how to get started using Clarity Hub.\\n    </Typography>\\n\\n    <CardActions>\\n      <Button type=\\\"primary\\\">Invite Your Team</Button>\\n    </CardActions>\\n  </CardBody>\\n</Card>'} __scope={{props: this ? this.props : props,Card,CardHeader,CardFooter,CardImage,CardBody,CardActions,CardPropTypes,Typography,Button,ButtonSet,Image}}>\n    <Card center>\n        <CardBody>\n            <Typography type=\"h3\">Welcome to Clarity Hub!</Typography>\n            <Typography type=\"text\">\n                To get started, install the extension and use Intercom\n                like you normally would. We’ll let you know when we\n                have suggestions for you by providing a prompt in\n                the place you normally work.\n            </Typography>\n        <Image\n            center\n            withMargin\n            src=\"/public/get-started.png\"\n            alt=\"Get started with Clarity Hub\"\n            style={{ width: '80%' }}\n        />\n\n        <CardActions>\n            <Button type=\"primary\">Install the Extension</Button>\n        </CardActions>\n    </CardBody>\n</Card>\n<Card center style={{ marginTop: '1rem'}}>\n    <CardBody>\n        <Typography type=\"h3\">Get Started</Typography>\n        <Typography type=\"text\">\n            Send email invites to the rest of your team to get\n            them onboarded! We’ll send them instructions\n            on how to get started using Clarity Hub.\n        </Typography>\n\n        <CardActions>\n            <Button type=\"primary\">Invite Your Team</Button>\n        </CardActions>\n    </CardBody>\n</Card>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"prop-types\"}}>{`Prop Types`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The following prop types are available for the Card component.`}</MDXTag>\n<PropsTable of={CardPropTypes} />\n           </MDXTag>\n  }\n}\n  ","import React from 'react';\nimport { bool, object, string } from 'prop-types';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nconst ImageWrapper = styled.div`\n    img {\n        box-shadow: 0 2px 4px 0 rgba(0,0,0,.1);\n        max-width: 100%;\n    }\n\n    ${({ withSpacing }) => withSpacing && css`\n        padding: 1rem;\n    `}\n\n    ${({ center }) => center && css`\n        margin-left: auto;\n        margin-right: auto;\n        text-align: center;\n    `}\n`;\n\nconst Image = ({ alt, withSpacing, center, wrapperProps = {}, ...rest }) => (\n\t<ImageWrapper {...wrapperProps} withSpacing={withSpacing} center={center}>\n\t\t<img alt={alt} {...rest} />\n\t</ImageWrapper>\n);\n\n/**\n * Hack for docz and react-docgen\n */\nconst ImagePropTypes = () => <div />;\nImagePropTypes.propTypes = {\n\talt: string.isRequired,\n\tcenter: bool,\n\tsrc: string.isRequired,\n\twithSpacing: bool,\n\twrapperProps: object,\n};\nImage.propTypes = ImagePropTypes.propTypes;\nexport { ImagePropTypes };\n\nexport default Image;\n","export { default } from './Image';\n"],"sourceRoot":""}