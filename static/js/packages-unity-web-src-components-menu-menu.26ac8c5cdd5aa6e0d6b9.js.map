{"version":3,"sources":["webpack:///./packages/unity-web/src/components/Menu/Menu.mdx","webpack:///./packages/unity-web/src/components/Menu/MenuItem.js","webpack:///./packages/unity-web/src/components/Menu/MenuItemDivider.js"],"names":["MDXContent","props","layout","this","components","name","parentName","of","Menu","MenuItem","MenuItemDivider","__position","__code","__scope","Component","Button","inline","items","open","close","toggle","onClick","content","React","text","css","colors","muted","gray"],"mappings":"ioEAWqBA,E,uQACnB,WAAYC,GAAQ,IAAD,S,4FAAA,UACjB,cAAMA,IACDC,OAAS,KAFG,E,8CAIT,IAAD,EAC0BC,KAAKF,MAA9BG,EADD,EACCA,WAAeH,EADhB,oBAGP,OAAO,kBAAC,SAAD,CACEI,KAAK,UAELD,WAAYA,GACzB,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,SAAvD,QACA,kBAAC,SAAD,CAAQI,KAAK,IAAID,WAAYA,GAA7B,uFAEA,kBAAC,SAAD,CAAQC,KAAK,IAAID,WAAYA,GAA7B,+KAGA,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,oBAAvD,4BACA,kBAAC,SAAD,CAAQI,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYE,WAAW,MAAML,MAAO,CAAC,UAAY,gBAAjF,mGAE3C,kBAAC,SAAD,CAAQI,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,eAAvD,cACA,kBAAC,SAAD,CAAQI,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,eAAvD,cACA,kBAAC,IAAD,CAAYM,GAAIC,MAChB,kBAAC,SAAD,CAAQH,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,mBAAvD,kBACA,kBAAC,SAAD,CAAQI,KAAK,IAAID,WAAYA,GAA7B,OAAiD,kBAAC,SAAD,CAAQC,KAAK,aAAaD,WAAYA,EAAYE,WAAW,KAA7D,UAAjD,oCAA0K,kBAAC,SAAD,CAAQD,KAAK,aAAaD,WAAYA,EAAYE,WAAW,KAA7D,YAA1K,KACA,kBAAC,IAAD,CAAYC,GAAIE,MAChB,kBAAC,SAAD,CAAQJ,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,0BAAvD,yBACA,kBAAC,IAAD,CAAYM,GAAIG,MAChB,kBAAC,SAAD,CAAQL,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,aAAvD,YACA,kBAAC,IAAD,CAAYU,WAAY,EAAGC,OAAQ,qSAAsSC,QAAS,CAACZ,MAAOE,KAAOA,KAAKF,MAAQA,EAAMa,sBAAUN,SAAKC,aAASC,oBAAgBK,aACxZ,kBAAC,IAAD,CACIC,QAAM,EACNC,MAAO,CACH,kBAAC,IAAD,eACA,kBAAC,IAAD,eACA,kBAAC,IAAD,eACA,kBAAC,IAAD,MACA,kBAAC,IAAD,uBAGH,cAAGC,KAAH,EAASC,MAAT,IAAgBC,EAAhB,EAAgBA,OAAhB,OACG,kBAAC,IAAD,CAAQC,QAASD,GAAjB,iBAIZ,kBAAC,SAAD,CAAQf,KAAK,KAAKD,WAAYA,EAAYH,MAAO,CAAC,GAAK,mBAAvD,kBACA,kBAAC,IAAD,CAAYU,WAAY,EAAGC,OAAQ,iKAAkKC,QAAS,CAACZ,MAAOE,KAAOA,KAAKF,MAAQA,EAAMa,sBAAUN,SAAKC,aAASC,oBAAgBK,aACpR,kBAAC,IAAD,CACIC,QAAM,EACNM,QACI,6BACI,kBAAC,IAAD,gBAIP,gBAAGJ,EAAH,EAAGA,KAAH,OACG,kBAAC,IAAD,CAAQG,QAASH,GAAjB,uB,8BAzD4BK,IAAMT,W,yJCX9C,iLAMML,EAAW,SAAAR,GAAK,OACrB,cAAC,IAAD,eACCuB,MAAI,EACJC,IAAKA,cAAF,2GAQ+BC,IAAOC,MAAP,QAR/B,OAWC1B,KAISQ,M,iSCrBTC,EAAe,yFAGOgB,IAAOE,KAAP,QAHP,KAMNlB","file":"static/js/packages-unity-web-src-components-menu-menu.46ca87a4.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Component } from 'react';\nimport { Playground, PropsTable } from 'docz';\nimport { Menu, MenuItem, MenuItemDivider } from './';\nimport Button from '../Buttons';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"menu\"}}>{`Menu`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Show a pop-up menu in navigation or when there are many options\na user can select.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Menus will always appear fixed to the bottom-left of the child\nelement, but will fix to the bottom-right if the window width\nwould be less than the width of the popover.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"menu--component\"}}>{`\\<Menu /`}{`>`}{` component`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import { Menu, MenuItem, MenuItemDivider } from '@clarityhub/unity-web/lib/components/Menu';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"prop-types\"}}>{`Prop Types`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"menu-props\"}}>{`Menu Props`}</MDXTag>\n<PropsTable of={Menu} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"menuitem-props\"}}>{`MenuItem Props`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`All `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Button`}</MDXTag>{` props can also be passed to the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`MenuItem`}</MDXTag>{`.`}</MDXTag>\n<PropsTable of={MenuItem} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"menuitemdivider-props\"}}>{`MenuItemDivider Props`}</MDXTag>\n<PropsTable of={MenuItemDivider} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"examples\"}}>{`Examples`}</MDXTag>\n<Playground __position={3} __code={'<Menu\\n  inline\\n  items={[\\n    <MenuItem>Item 1</MenuItem>,\\n    <MenuItem>Item 2</MenuItem>,\\n    <MenuItem>Item 3</MenuItem>,\\n    <MenuItemDivider />,\\n    <MenuItem>Long Item 4</MenuItem>,\\n  ]}\\n>\\n  {({ open, close, toggle }) => <Button onClick={toggle}>Open Menu</Button>}\\n</Menu>'} __scope={{props: this ? this.props : props,Component,Menu,MenuItem,MenuItemDivider,Button}}>\n    <Menu\n        inline\n        items={[\n            <MenuItem>Item 1</MenuItem>,\n            <MenuItem>Item 2</MenuItem>,\n            <MenuItem>Item 3</MenuItem>,\n            <MenuItemDivider />,\n            <MenuItem>Long Item 4</MenuItem>,\n        ]}\n    >\n        {({ open, close, toggle }) => (\n            <Button onClick={toggle}>Open Menu</Button>\n        )}\n    </Menu>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"custom-content\"}}>{`Custom Content`}</MDXTag>\n<Playground __position={4} __code={'<Menu\\n  inline\\n  content={\\n    <div>\\n      <Button>Test</Button>\\n    </div>\\n  }\\n>\\n  {({ open }) => <Button onClick={open}>Open Menu</Button>}\\n</Menu>'} __scope={{props: this ? this.props : props,Component,Menu,MenuItem,MenuItemDivider,Button}}>\n    <Menu\n        inline\n        content={\n            <div>\n                <Button>Test</Button>\n            </div>\n        }\n    >\n        {({ open }) => (\n            <Button onClick={open}>Open Menu</Button>\n        )}\n    </Menu>\n</Playground>\n           </MDXTag>\n  }\n}\n  ","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nimport Button from '../Buttons';\n\nconst MenuItem = props => (\n\t<Button\n\t\ttext\n\t\tcss={css`\n            border-radius: 0;\n            text-align: left;\n            text-transform: none;\n            min-width: 150px;\n            width: 100%;\n\n            &:hover {\n                background-color: ${colors.muted.default};\n            }\n        `}\n\t\t{...props}\n\t/>\n);\n\nexport default MenuItem;\n","import styled from '@emotion/styled';\nimport colors from '@clarityhub/unity-core/lib/colors';\n\nconst MenuItemDivider = styled.hr`\n    width: 100%;\n    height: 0;\n    border-top: 1px solid ${colors.gray.default};\n`;\n\nexport default MenuItemDivider;\n"],"sourceRoot":""}